# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/bson-types.txt:3
# d95649123b83452aa8f2b5f93531da24
msgid "BSON Types"
msgstr ""

#: ../source/reference/bson-types.txt:0
# ca4c64501ac742f49bc49e2b641314c0
msgid "On this page"
msgstr ""

#: ../source/reference/bson-types.txt:13
# ef9b8f51d664432780ea852a8dbd6ab0
msgid ":term:`BSON` is a binary serialization format used to store documents and make remote procedure calls in MongoDB. The BSON specification is located at `bsonspec.org <http://bsonspec.org/>`_."
msgstr ""

#: ../source/reference/bson-types.txt:17
# 4316c125f64d447c8524cc3dc6575982
msgid "BSON supports the following data types as values in documents. Each data type has a corresponding number and string alias that can be used with the :query:`$type` operator to query documents by BSON type."
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
# 71b90e2daf2f4f9d94085b9276cc3672
msgid "Type"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
# 8abf5b091f3941719282b23b27844310
msgid "Number"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
# ff916f2036e6439e89c1652ebd489b0d
msgid "Alias"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
# 26dfae59ec27431aa6f713da8190e975
msgid "Notes"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
# 19c895b50d674436b4ae905ada582cfb
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
# dcd04d50906a4ae1a88f72b74999133b
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
# 7a5412f21ff64f2ea19aedb930bb92c9
msgid "\"double\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
#: ../source/reference/bson-types.txt:71
# eaa6164e30a04bc193f3a0168e0995c0
# 0cf2e548ecfe488fa9c064f0f5c84a1b
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
# 616eb07f42684202b1e32a4c7402d5a8
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
# 7858c40b86544eb89ca73184b8394fa7
msgid "\"string\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
#: ../source/includes/fact-sort-order.rst:8
# a29df6bc18a1404ba9ef46937929f17e
# a62d5a0e4ea14380bd03b3b6ccb87621
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
# 249b6899714f4ac98cae6f5bb91eb878
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
# 7f7288e03efa407d82bf02df759a16e4
msgid "\"object\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:24
#: ../source/includes/fact-sort-order.rst:9
# 0df1ce8253f14c628fa8576a90a7a5f1
# 614ae2d7c0454d2ca99a8ad7ad9c8c3e
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:25
# cba69f857b1f4e6fae76c920a9b62f18
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:26
# db68b250985f4f488c0bdb95450e354c
msgid "\"array\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:29
# 1d9ea035ed4b4b19becac3e15d042574
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:30
# f9da6279eabe4d0c81c39cf498d6c08b
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:31
# 2b5b58fa89274a0bab36cbcb17009520
msgid "\"binData\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:34
# 91fa5c83715548fc980ba5226c079378
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:35
# ed89fa34de7f47618d33b7a997a88d19
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:36
# f92e7d92aa80432e8efac0a542e5b582
msgid "\"undefined\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:37
# a2fc2f24070a4966a55306ee059387a6
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:39
#: ../source/includes/fact-sort-order.rst:11
#: ../source/reference/bson-types.txt:43
# f7c3b6ab7e2d434297c7c589baa9cd07
# 4a84ca94d8bb46679265bb508b929835
# acc9da7fecb040a6b2c2e1b76bc6eb09
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-bson-types.rst:40
# bfdc525d4f3d4a95acc0f70714983e02
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:41
# 917017ef8df04c5da287b06312c74a44
msgid "\"objectId\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:44
#: ../source/includes/fact-sort-order.rst:12
# af6d8e31dc994adf91eaa6b5deccbdf6
# 5af4898fc8004fa78a18bb360b776c48
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:45
# d002219922274de79f1bdd0be006e89d
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:46
# dd96c92b03c44381a7c40eb9273d1b59
msgid "\"bool\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:49
#: ../source/includes/fact-sort-order.rst:13
#: ../source/reference/bson-types.txt:143
# d07098b8b2aa4c8db9d97190fac19c1d
# b80d15168efe4c8fa25f73bc45ae3ac3
# 95d09f163ea347079151159fd85fabb2
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:50
# 7a7fa61fec994d96a74295dd6c4f89a0
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:51
# 152caf9cf66a43ba98ec7fadd118a521
msgid "\"date\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:54
#: ../source/includes/fact-sort-order.rst:5
# 35cc24d24599491e985f44dcbc58d767
# 482e43c4fbc04ab28f0d521b001ba246
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:55
# f8fd600dc412408fa184e0cb085f16c3
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:56
# 39769b06405443778d763d38df62fcb6
msgid "\"null\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:59
#: ../source/includes/fact-sort-order.rst:15
# 2b805a24f06147a09ed82c7b0eae4920
# 40f29bcee0b7402a9f12ab75b0d4ed3b
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:60
# 5d1c9114c04f4d6f829a05662b2acdb8
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:61
# eb5e6beabadb4e93bff400db5a2c97ea
msgid "\"regex\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:64
# 2e9d048f70bf47589a831f343bc60751
msgid "DBPointer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:65
# e625485a16d743deb8b0e98c3cea0846
msgid "12"
msgstr ""

#: ../source/includes/fact-bson-types.rst:66
# 6917cb02cb694e14ba76f5e54f52c4f4
msgid "\"dbPointer\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:69
# b506fdd425054cd98354bb75b1505f72
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:70
# dfb75487dc3347599db5aaa18b71fdaf
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:71
# 4022d2b4d57149ca8186054fb70f86cf
msgid "\"javascript\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:74
# d10f647db6064381806d32399c14552e
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:75
# 429e383fc25c48e5b9aa0e6c502875a8
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:76
# 4b0cddd1ebe2401a915e1b03e605ef5f
msgid "\"symbol\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:79
# f1a3b953462a428ba7bc3fc90f03a5b8
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:80
# 44832f0777b54edc9badc8f2d03e4af3
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:81
# fe6ca082f622415d92d47ea4387be637
msgid "\"javascriptWithScope\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:84
# 14bfe644bf324e508b37b5f50eaf4f45
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:85
# 650abcc617144a68961180ff1c7e471e
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:86
# bb9c098f2bca4063ac8ff2a9652f582a
msgid "\"int\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:89
#: ../source/includes/fact-sort-order.rst:14
# 42540cbab379488dac367ea37ef7391c
# 5d14fe0de9304439a4b1cf911673b2a0
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:90
# e760113c26434ca68ed2075c9874e6d6
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:91
# f0ac97df0138485197b214319626b747
msgid "\"timestamp\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:94
# 1f3b88964bbb4b5aacdf5a084f0abfb0
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:95
# 1e25b12a52604aca8c8793cbbe1e3497
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:96
# 7cad3f63dd744d7ba399072b8cb84415
msgid "\"long\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:99
# 68b4ba7cb9a54879a86ad401254e1913
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:100
# 673c649c85de4736808d20b0091ad204
msgid "-1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:101
# 43023626295c4cacbd00157010588db1
msgid "\"minKey\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:104
# 1587f798f51740c185ece3e888522c30
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:105
# 1ccb9055db1243ddbb636cd9a47f6661
msgid "127"
msgstr ""

#: ../source/includes/fact-bson-types.rst:106
# b93338fe33944b71a8083710eb35f073
msgid "\"maxKey\""
msgstr ""

#: ../source/reference/bson-types.txt:23
# 06b0b74fa56742ed86c7b00b21ff2972
msgid "To determine a field's type, see :ref:`check-types-in-shell`."
msgstr ""

#: ../source/reference/bson-types.txt:25
# 3e75cbbb98db4aee81a23d399e68b65c
msgid "If you convert BSON to JSON, see the :doc:`Extended JSON </reference/mongodb-extended-json>` reference."
msgstr ""

#: ../source/reference/bson-types.txt:32
# 2e3930d01b394fa0862aa57dbec91c5b
msgid "Comparison/Sort Order"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# 29c35df7510c408ca8e52f17b8ff933f
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# 49559d4a740444e98f69a580ca20efce
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# e9e2ff30a3ad4cba9202db7e86a7a221
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# eaf4cab18cde46d38e6717cccbad9a3c
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# ea5e921b61c44fadb4fde39e01682820
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
# 617e975f6b5643cca6bf00596183c100
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
# 8ee9f7c4852345f58650becd4776ef70
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
# 767d78f872dc43f6a38f20b5b81be5f8
msgid "Date objects sort before Timestamp objects. Previously Date and Timestamp objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
# 49cf50b897a54a259955c9ad189b4287
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
# 27bb644cfe8f44adb5ece4f42ad6b001
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
# 1c806b1fdabd48eab983596bb43d05c5
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
# 525f058e48434be5aef6f3379bc367cf
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
# 3e1391154d954b439397c8fa9067648d
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
# f1f7936beb614960affde3bcac0827a5
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/bson-types.txt:36
# 4786ea05af75487d94d63ed402f5b2ab
msgid "The following sections describe special considerations for particular BSON types."
msgstr ""

#: ../source/reference/bson-types.txt:45
# ebb3029dace7482286a86eebeaa6cbe0
msgid "ObjectIds are small, likely unique, fast to generate, and ordered. ObjectId values consists of 12-bytes, where the first four bytes are a timestamp that reflect the ObjectId's creation, specifically:"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:1
# 76cef27428f14784b0f803df9a3e149e
msgid "a 4-byte value representing the seconds since the Unix epoch,"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:3
# e1c36de36846426191f04b07155374d1
msgid "a 3-byte machine identifier,"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:5
# 4ee297fd832949e0ad69bf89d47d686f
msgid "a 2-byte process id, and"
msgstr ""

#: ../source/includes/fact-ObjectId-construct.rst:7
# ef616d8a1a9f462fbb6fdce7dd1872dc
msgid "a 3-byte counter, starting with a random value."
msgstr ""

#: ../source/includes/fact-id-field.rst:1
# 2d6c8b6547734915aab9e01ddbabb232
msgid "In MongoDB, documents stored in a collection require a unique :term:`_id` field that acts as a :term:`primary key`. If the ``_id`` field is unspecified in the documents, MongoDB uses :ref:`ObjectIds <objectid>` as the default value for the ``_id`` field; i.e. if a document does not contain a top-level ``_id`` field during an insert, the MongoDB driver adds the ``_id`` field that holds an :ref:`objectid`."
msgstr ""

#: ../source/includes/fact-id-field.rst:8
# 56cee718cd9a4eaf933a427ba77cb19b
msgid "In addition, if the :program:`mongod` receives a document to insert that does not contain an ``_id`` field (e.g. through an update operation with an :ref:`upsert option <upsert-parameter>`) :program:`mongod` will add the ``_id`` field that holds an ObjectId."
msgstr ""

#: ../source/reference/bson-types.txt:53
# ad98fa36aad4473cb306a74af450dd92
msgid "MongoDB clients should add an ``_id`` field with a unique ObjectId. Using ObjectIds for the ``_id`` field provides the following additional benefits:"
msgstr ""

#: ../source/reference/bson-types.txt:57
# 53efdac715e7400db13d02a6c70d8375
msgid "in the :program:`mongo` shell, you can access the creation time of the ``ObjectId``, using the :method:`ObjectId.getTimestamp()` method."
msgstr ""

#: ../source/reference/bson-types.txt:60
# 8fd269cf23074b869e805d2977100b56
msgid "sorting on an ``_id`` field that stores ``ObjectId`` values is roughly equivalent to sorting by creation time."
msgstr ""

#: ../source/includes/fact-ObjectId-timestamp-order.rst:1
# 54dd21d4be294d04b70a1f54496baf12
msgid "The relationship between the order of ``ObjectId`` values and generation time is not strict within a single second. If multiple systems, or multiple processes or threads on a single system generate values, within a single second; ``ObjectId`` values do not represent a strict insertion order. Clock skew between clients can also result in non-strict ordering even for values because client drivers generate ``ObjectId`` values."
msgstr ""

#: ../source/reference/bson-types.txt:66
# 28a0cf583e1d48f09da20e4cb92f8a96
msgid ":method:`ObjectId()`"
msgstr ""

#: ../source/reference/bson-types.txt:73
# af62e0cbc57e41f7b27fbf74f5780ba6
msgid "BSON strings are UTF-8. In general, drivers for each programming language convert from the language's string format to UTF-8 when serializing and deserializing BSON. This makes it possible to store most international characters in BSON strings with ease. [#sort-string-internationalization]_ In addition, MongoDB :query:`$regex` queries support UTF-8 in the regex string."
msgstr ""

#: ../source/reference/bson-types.txt:80
# 641c9f3262f14634b67d24094926c1d7
msgid "Given strings using UTF-8 character sets, using :method:`sort() <cursor.sort()>` on strings will be reasonably correct. However, because internally :method:`sort() <cursor.sort()>` uses the C++ ``strcmp`` api, the sort order may handle some characters incorrectly."
msgstr ""

#: ../source/reference/bson-types.txt:89
# 6b6dc6851ebd43f6b87047e37cc23fe7
msgid "Timestamps"
msgstr ""

#: ../source/reference/bson-types.txt:91
# bf64c360d507434e8163c811c16eefd3
msgid "BSON has a special timestamp type for *internal* MongoDB use and is **not** associated with the regular :ref:`document-bson-type-date` type. Timestamp values are a 64 bit value where:"
msgstr ""

#: ../source/reference/bson-types.txt:95
# ae5a5e285bba44ebab2091eeba62cb30
msgid "the first 32 bits are a ``time_t`` value (seconds since the Unix epoch)"
msgstr ""

#: ../source/reference/bson-types.txt:97
# 58ed627d39ca4bd1b5d77655b1ac7ccc
msgid "the second 32 bits are an incrementing ``ordinal`` for operations within a given second."
msgstr ""

#: ../source/reference/bson-types.txt:100
# 332786ea130b4c0da5598ac229d6769b
msgid "Within a single :program:`mongod` instance, timestamp values are always unique."
msgstr ""

#: ../source/reference/bson-types.txt:103
# 6d0eae9196c24e7c9360c088a9226089
msgid "In replication, the :term:`oplog` has a ``ts`` field. The values in this field reflect the operation time, which uses a BSON timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:109
# b10e949dd3e74f9ebb5277ed37ec0c95
msgid "The BSON timestamp type is for *internal* MongoDB use. For most cases, in application development, you will want to use the BSON date type. See :ref:`document-bson-type-date` for more information."
msgstr ""

#: ../source/reference/bson-types.txt:114
# c925d131e4ec4a578e36dfa538196ae6
msgid "If you insert a document containing an empty BSON timestamp in a top-level field, the MongoDB server will replace that empty timestamp with the current timestamp value. For example, if you create an insert a document with a timestamp value, as in the following operation:"
msgstr ""

#: ../source/reference/bson-types.txt:125
# df0d0e81c3944208a396b03a73e5a451
msgid "Then, the :method:`db.test.find() <db.collection.find()>` operation will return a document that resembles the following:"
msgstr ""

#: ../source/reference/bson-types.txt:132
# 49dbaefe2d894c5384e41626b9bf61c6
msgid "If ``ts`` were a field in an embedded document, the server would have left it as an empty timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:135
# 9837cdfd5da74891a6b84ec889c187fd
msgid "Previously, the server would only replace empty timestamp values in the first two fields, including ``_id``, of an inserted document. Now MongoDB will replace any top-level field."
msgstr ""

#: ../source/reference/bson-types.txt:145
# 50d107b2925447b38e80f9975c3e98f0
msgid "BSON Date is a 64-bit integer that represents the number of milliseconds since the Unix epoch (Jan 1, 1970). This results in a representable date range of about 290 million years into the past and future."
msgstr ""

#: ../source/reference/bson-types.txt:150
# 36f25b8294d8477ab0faee14e6f9f440
msgid "The `official BSON specification <http://bsonspec.org/#/specification>`_ refers to the BSON Date type as the *UTC datetime*."
msgstr ""

#: ../source/reference/bson-types.txt:153
# 21ddc64335e846fc92172b610cd809ba
msgid "BSON Date type is signed. [#unsigned-date]_ Negative values represent dates before 1970."
msgstr ""

#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0
# a3b0b004e86946a99e833e82ae496f09
# 9b0ef3352564438eba47d0fe961057d7
# ee16bcf839224b0182c777754edbca9d
# a79a9b55ded14652a1fe551940dc8c6c
msgid "Example"
msgstr ""

#: ../source/reference/bson-types.txt:183
# 9a34cbb1fbc24ba9b035f763a7b39b1d
msgid "Prior to version 2.0, ``Date`` values were incorrectly interpreted as *unsigned* integers, which affected sorts, range queries, and indexes on ``Date`` fields. Because indexes are not recreated when upgrading, please re-index if you created an index on ``Date`` values with an earlier version, and dates before 1970 are relevant to your application."
msgstr ""

