# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/type.txt:3
# b8ff42f65ff74445a03f970cddb336f1
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:0
# 3a5ed6cfb1614cc8abad9172ca50d465
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/type.txt:14
# a04aebc904ed4a9aa53e91a4526dc3c9
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/type.txt:18
# c28e6ad5391d4b24a92118795d22deae
msgid ":query:`$type` selects the documents where the *value* of the ``field`` is an instance of the specified :term:`BSON` type. Querying by data type is useful when dealing with highly unstructured data where data types are not predictable."
msgstr ""

#: ../source/reference/operator/query/type.txt:23
# 078d598ec19e4ec09bc7f180ae7f9680
msgid "A :query:`$type` expression has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/type.txt:31
# 0a9b89436405428d8c470632f7ce9620
msgid ":ref:`document-type-available-types` describes the BSON types and their corresponding numeric and string aliases."
msgstr ""

#: ../source/reference/operator/query/type.txt:35
# 86e7e656f19b4494b296ef356ba223a6
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/type.txt:37
# 513ea7554fef433eb054c508476c7eb6
msgid ":query:`$type` returns documents where the BSON type of the ``field`` matches the BSON type passed to :query:`$type`."
msgstr ""

#: ../source/reference/operator/query/type.txt:43
# 5242cdec99444163b7bc8a4de511df3f
msgid "Available Types"
msgstr ""

#: ../source/reference/operator/query/type.txt:45
# 7bc605c87a024194ae8d4cb8ddabdf42
msgid ":query:`$type` operator accepts string aliases for the BSON types in addition to the numbers corresponding to the BSON types. Previous versions only accepted the numbers corresponding to the BSON type."
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
# a73c89f98f7d4db694dca97de42e2a5e
msgid "Type"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
# 0bbd37bacedc45bd995ead81c0219a05
msgid "Number"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
# a572ddf3ad46471394b9b338473dc47c
msgid "Alias"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
# 46f45f2ac36541f59c800be74fbc35ee
msgid "Notes"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
# 08100acb059045d6accb0f35eb7d6afe
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
# c50ffbf83b414f25817148248c98eb1e
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
# 12dd3d67d7814f9ea2157153422ef7ee
msgid "\"double\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
# c53f2995c3d24534af688ae8a5ea5496
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
# 3df2df6fbc704c20a9c5fb43f6598b7d
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
# 11d8ed85427f4a09a228b20d7fbbe71a
msgid "\"string\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
# 7df3636f14fe4c5898588d05fb36cc7f
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
# 97d649d85efd4f1ea805cba2e92f078c
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
# 595425feeedf4e5080d8a21279046fcd
msgid "\"object\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:24
# c97e08160bca4781b7a625ac4dae2dc0
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:25
# dae17a845629465fb68856859705338a
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:26
# f9024d8db94c4f2a959468726c430d3b
msgid "\"array\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:29
# 9ab64fa252284a40a8fc9907263b4cf6
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:30
# b37640e813ed44799aecf91394bfc26d
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:31
# f47217bf10834df0a038dfa59d185376
msgid "\"binData\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:34
# 6dd8669b051247eba83880f1249f72ab
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:35
# 769829eb24f64b50bacb14c3f837a5fb
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:36
# b5ab76f92ee34706a85cff5e1f80bbbf
msgid "\"undefined\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:37
# df260f35894d4eb1bce3d111009bba7a
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:39
# 5e6a37888e14479e93f633264b8c4c64
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-bson-types.rst:40
# ab1b731a32a44af293598409744d48e4
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:41
# 7b518b060ba64aa08fff67099d13f73f
msgid "\"objectId\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:44
# d9162aa42e7d4b4483c9802964fb222a
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:45
# b5ac04f7ae7a4fe1bfd4e6cbc676833f
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:46
# dfe23ea62b2e4e9daa3b7586ac65a142
msgid "\"bool\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:49
# 52e11321412244ff86669927595f6aaf
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:50
# a17eba5fbcfc4abf82205a16a72c507a
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:51
# de52ae14614d4507a29b1c60693c7620
msgid "\"date\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:54
# 6a81eef660e9497c8f67d71a98ecbcf0
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:55
# 6b48938433944727ba17485d21dbb73f
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:56
# 96e143b0bb4c40a2a964c8ac27f9b92b
msgid "\"null\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:59
# 0c35fa87da224faab21273c79edd2ecf
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:60
# a8d8c42798234cf58bbdcc34c4da8e18
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:61
# e13c70ca492241189a78ed493a3e1ee4
msgid "\"regex\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:64
# 67f94410b51744fab334fbfc11666727
msgid "DBPointer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:65
# f2425ab8af144373815ccf258fdb5327
msgid "12"
msgstr ""

#: ../source/includes/fact-bson-types.rst:66
# 993079db315c4410a673d31d03546bb5
msgid "\"dbPointer\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:69
# 936b1535d2d040bcbfd22d8299f16d15
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:70
# 3fe41fcf51394987891453c6e1301af5
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:71
# 955f42db163f4e2baf497a7364946bf0
msgid "\"javascript\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:74
# 668feba509084ee385dc99994c3acb9d
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:75
# 97adfe7d563c469e976d672e5f31ca22
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:76
# e58287e9cb394f24b7e39ccc6c997eb4
msgid "\"symbol\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:79
# 0e5d64a7a4aa4d729521b6de5bbd1495
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:80
# 6bb093a5524c41a5a891717e3712e0c7
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:81
# 8e4ca0a9abba4e7e9440ee275720c0b2
msgid "\"javascriptWithScope\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:84
#: ../source/reference/operator/query/type.txt:58
# 28454e0bea9248be838791e95b216f68
# 5e91fc8b85024340b30117031e6eba27
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:85
# 4f5ad2fc56e44e78a688347fb8a78632
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:86
# a5a3592892a74687b99ef21ff37781a9
msgid "\"int\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:89
# 37c7b5cfa39549288f8fdc78437e17d0
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:90
# 14939dcb3dd44dfa900364be3c2db3f1
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:91
# 48c90331ae9d4ae490efb763741f9ee2
msgid "\"timestamp\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:94
#: ../source/reference/operator/query/type.txt:60
# 47b69ee863c54977afe0b56832bdd571
# 195cff3c2cba43c1877c1b27e16ca796
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:95
# 7d7c8d952b9e49d4ad31e347a15b4406
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:96
# a4360b8f63844fb68475c1a0cfbf2ffc
msgid "\"long\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:99
# cc0556f094ce4d9e9b382e86bf8cb96c
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:100
# e8f436cfc8594303b090717680f33325
msgid "-1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:101
# 548fc14a09834635a8a6e901d370274f
msgid "\"minKey\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:104
# 91def8b238a24854945f332fe4c9af2f
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:105
# b4e18fa845494196849ee2e44ae035d1
msgid "127"
msgstr ""

#: ../source/includes/fact-bson-types.rst:106
# c753f8567d6d4923a17ff9022d773f86
msgid "\"maxKey\""
msgstr ""

#: ../source/reference/operator/query/type.txt:53
# 28c12e55d0e645549026d93e4d1ac753
msgid ":query:`$type` supports the ``number`` alias, which will match against the following :term:`BSON` types:"
msgstr ""

#: ../source/reference/operator/query/type.txt:56
# 53ac879af70647e78b8fc557695af696
msgid "double"
msgstr ""

#: ../source/reference/operator/query/type.txt:62
# 33f02c85ec4240bd9eec5064b6756d12
msgid "See :ref:`document-querying-by-data-type`"
msgstr ""

#: ../source/reference/operator/query/type.txt:65
# 6f2661c88f3142148673be2f4b488d51
msgid "Arrays"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
# 1d165a0ee3154bbd9a4d1be812567f20
msgid "When applied to arrays, :query:`$type` matches any **inner** element that is of the specified :term:`BSON` type. For example, when matching for ``$type : 'array'``, the document will match if the field has a nested array. It will not return results where the field itself is an ``array``."
msgstr ""

#: ../source/reference/operator/query/type.txt:72
# ba5e106bc7074cbd87d902dcce1eaa70
msgid "See :ref:`document-querying-by-array-type` for an example."
msgstr ""

#: ../source/reference/operator/query/type.txt:76
# db219090ae7e4cabb56cfdaa8d3d61aa
msgid "MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:78
# 6c121bca18424f7fbe5ed9828e0fba14
msgid ":bsontype:`MinKey <data_minkey>` and :bsontype:`MaxKey <data_maxkey>` are used in comparison operations and exist primarily for internal use. For all possible :term:`BSON` element values, ``MinKey`` will always be the smallest value while ``MaxKey`` will always be the greatest value."
msgstr ""

#: ../source/reference/operator/query/type.txt:83
# 0ffe3010b6184ff3b22c57b1f409409b
msgid "Querying for  ``minKey`` or ``maxKey`` with :query:`$type` will only return fields that match the special ``MinKey`` or ``MaxKey`` values."
msgstr ""

#: ../source/reference/operator/query/type.txt:87
# 6889f79d8bd44026a0f8c6cdefce0b41
msgid "Suppose that the ``data`` collection has two documents with ``MinKey`` and ``MaxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:95
# cbf57b1564d84c0481389f62531035ed
msgid "The following query will return the document with ``_id: 1``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:101
# b88323e3f6944c8282a50851311e3474
msgid "The following query will return the document with ``_id: 2``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:108
# e230e3de49c9415594bab65630e74ade
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/type.txt:113
# 2efb4083bb40431eadd2fa46f52cfa0f
msgid "Querying by Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:115
# 207515c110314f42ba9e5f963ce6415a
msgid "The ``addressBook`` contains addresses and zipcodes, where ``zipCode`` has ``string``, ``int``, ``double``, and ``long`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:130
# 0cd9202aec994fe49c7b0730c4c1eb46
msgid "The following queries return all documents where ``zipCode`` is the :term:`BSON` type ``string``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:139
#: ../source/reference/operator/query/type.txt:153
#: ../source/reference/operator/query/type.txt:166
# bef6b2fcb1174849bb41c6754e1b473c
# 8e8d16ea7e12457daac399991b6674db
# 879e9a6cfb0c498dabaaef2c058c5c6d
msgid "These queries return:"
msgstr ""

#: ../source/reference/operator/query/type.txt:145
# bab6d71744844e09b5e006f1f80158bb
msgid "The following queries return all documents where ``zipCode`` is the :term:`BSON` type ``double``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:159
# f506cf7059994a73932116c0556859d3
msgid "The following query uses the ``number`` alias to return documents where ``zipCode`` is the :term:`BSON` type ``double``, ``int``, or ``long``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:177
# b22c6f7606864317946a3c9c47861928
msgid "Querying by MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:179
# 926173b5e85a4ca3a2f90eb594b68b67
msgid "The ``restaurants`` collection uses ``minKey`` for any grade that is a failing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:204
# 153ffbe92157456aa27fe43c09144a2e
msgid "And ``maxKey`` for any grade that is the highest passing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:228
# 4d507f5fd69542bdb84d6e0ff2701390
msgid "The following query returns any restaurant whose ``grades.grade`` field contains  ``minKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:237
#: ../source/reference/operator/query/type.txt:271
# d1246e788da0480889f0fde85d829771
# 7fc8a6772dac47169ff1f9323c6f8d69
msgid "This returns"
msgstr ""

#: ../source/reference/operator/query/type.txt:261
# 98f2efe37164455c8da7bdf35c887e8d
msgid "The following query returns any restaurant whose ``grades.grade`` field contains ``maxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:298
# 00f7629cd3a44027a3055d534b8240c4
msgid "Querying by Array Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:300
# 8ea033af0c2048be9c1a45d768f41744
msgid "The ``SensorReading`` collection contains the following documents:"
msgstr ""

#: ../source/reference/operator/query/type.txt:323
# 714b7d39144d4ce792d9971b2c130fa4
msgid "The following query returns any document where ``readings`` has an element of :term:`BSON` type ``array``; i.e. the :query:`$type` does not check if ``readings`` itself is an array:"
msgstr ""

#: ../source/reference/operator/query/type.txt:331
# e7eac2d9450d420b8c4e04dff972d2c5
msgid "This returns the following doucment:"
msgstr ""

#: ../source/reference/operator/query/type.txt:345
# 0b8b041ee41246d38b90d1ab64bf7895
msgid "The document with ``_id : 1`` has at least one element in ``readings`` that is an ``array``, whereas the document with ``_id : 2`` does *not*."
msgstr ""

#: ../source/reference/operator/query/type.txt:349
# ab4139f63d774234828665a55c5acf90
msgid "Additional Information"
msgstr ""

#: ../source/reference/operator/query/type.txt:351
# 3cc5b2ea2e4046f392d47cce1f458cce
msgid ":method:`~db.collection.find()`, :doc:`BSON Types </reference/bson-types>`."
msgstr ""

