# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/type.txt:3
# 6bc8524e87d44896b2db661e0041c307
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:8
# fa2d863fc8bd4ba7b7759caab2a134f9
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/type.txt:12
# 3583b25237ad4358a58e9526f5fef808
msgid "*Syntax*: ``{ field: { $type: <BSON type> } }``"
msgstr ""

#: ../source/reference/operator/query/type.txt:14
# c4c2a10b7ddd4630811d29b319d8bead
msgid ":query:`$type` selects the documents where the *value* of the ``field`` is an instance of the specified numeric :term:`BSON` type. This is useful when dealing with highly unstructured data where data types are not predictable."
msgstr ""

#: ../source/includes/warning-mixing-types.rst:3
# 1667e8746b3d4a10848248007b5690cc
msgid "Data models that associate a field name with different data types within a collection are *strongly* discouraged."
msgstr ""

#: ../source/includes/warning-mixing-types.rst:6
# a451de0518f1452fbfbe478c93769225
msgid "Without internal consistency complicates application code, and can lead to unnecessary complexity for application developers."
msgstr ""

#: ../source/reference/operator/query/type.txt:22
# 2a9ffe60b0da4b9094f500354265c107
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/type.txt:25
# 56029d7536b34630bec041daca51b90c
msgid "Available Types"
msgstr ""

#: ../source/reference/operator/query/type.txt:27
# 704447575ff044309a3c900cf92423b3
msgid "Refer to the following table for the available :term:`BSON` types and their corresponding numbers."
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
# 8434de549afa4644a19582245d40b8c7
msgid "**Type**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
# 2bc9bdc59a9a485db1bfd68ae2679c4e
msgid "**Number**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
# b197ed6f2abd4629b71b6a0eca6601db
msgid "**Notes**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
# 215f222edc714ad081a7a5d5c9fc79cc
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
# feeea33af213494d9d0ed896a2b70fb7
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
# 3c41b440f28f4cdca076f9dac2e1eade
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
# b67b2b4ee1d0410885f0aa0a26de042e
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
# cb8e8e1da6504474a85ab133a4bb4e66
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
# 2e4ee3bda24d4566a04f128caf5ef687
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
# 3c7cc00a8c6548aab664be60ce5899a4
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
# 590d394eb94846a8984886f5e5fdc44b
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:8
# 3f19b864cc8a4049878007290391f43a
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:8
# 60b84019c11245f79ec3727e80cd73af
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
# 5f56dd04615b4a83914955da1df06ebd
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
# 377147d23a9044e48f2bace658c5a48a
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
# d74ed7483cd34f068e60e13274538f0a
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
# b1ea35e287f346918ac8e5334bd06b15
msgid "Object id"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
# 7d278b965d9a41b8b4b9ea59fd65a057
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
# 99d0087d66034c4086d635a5e414cecb
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
# 4a41f3e1c7be405086d14c8bff9360ca
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:12
# 21db06d8e2ac4d52a4d063d153297c72
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:12
# 05defe56df5847c59b38d0f185a99b0d
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:13
# 377a6693bb854487b23b1884770e0e37
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:13
# b6793095b04d4683aa0a6fd4e82d5ec0
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
# 110f206e0bd44642bcfb0aa4fe4882ca
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
# 0c2e14d70612428d975fe077be6f7f05
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
# 268dca4d35974d2b984c968db6956c6d
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
# 39071e5f2de5463393dd85a091fb2e3e
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
# d03dde7e1d274b1c93defee4eb07cd7b
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
# 94f71d3366af46ca998751e020a20d0b
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:17
# 131b5b6654fd4f1f83ab04538caa7056
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:17
# 243d3f6fea0a45ea9d6e6cc4d8297c9e
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:18
# 6981dd557e434e8fa8079ec766a9ec3d
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:18
# f95269f3719f47ae96a1c775e788c4c9
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
# a755dcb3bc2b4b21b5d45d6640142b6b
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
# b3123e19d14749ce86b3b8b5f92aba5f
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
# ca33483b088c4cf6a011cdc9b0f6c7fd
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
# a0c2defa53a24125b8f22f4996e63574
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
# 5ea9ee0e2c1c4ce1903abeacc7b517b9
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
# 6328f4b0b2044fd785dc7f5c60b45187
msgid "255"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
# a04633d739c34297aa724880778143b2
msgid "Query with ``-1``."
msgstr ""

#: ../source/includes/fact-bson-types.rst:22
# fc7b1492356247f2b3ad31b1b01f2901
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:22
# cc2d5273ae35448dac370f4f9375137c
msgid "127"
msgstr ""

#: ../source/reference/operator/query/type.txt:33
# 2af032f457a54ccfa576749c0a0061a3
msgid "Minimum and Maximum Values"
msgstr ""

#: ../source/reference/operator/query/type.txt:35
# 50f09e00c0b14080b962a88f41f92dba
msgid "``MinKey`` and ``MaxKey`` compare less than and greater than all other possible :term:`BSON` element values, respectively, and exist primarily for internal use."
msgstr ""

#: ../source/reference/operator/query/type.txt:39
# 540ed7e679f743b78ce67bd0ac003866
msgid "To query if a field value is a ``MinKey``, you must use :query:`$type` with ``-1`` as in the following example:"
msgstr ""

#: ../source/reference/operator/query/type.txt:47
# 77bd28ea2c01468b8eb5ed10e931a759
msgid "Arrays"
msgstr ""

#: ../source/reference/operator/query/type.txt:49
# 5987fc63f26e48bd85ebbd3015b88fa3
msgid "When applied to arrays, :query:`$type` matches any **inner** element that is of the specified type. Without :term:`projection` this means that the entire array will match if **any** element has the right type. With projection, the results will include just those elements of the requested type."
msgstr ""

#: ../source/reference/operator/query/type.txt:56
# a1939bebc527427689a9e10cf960fa1d
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/type.txt:59
# 9deda8b6ad27425eb8bfdce1f3df153c
msgid "Querying by Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:61
# d00d20b9f18d4e82b09a079233a1ce15
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
# 077f1326c4364469ae2585cf68357d10
msgid "This will list all documents containing a ``tags`` field that is either a string or an array holding at least one string. If you only want to list documents where ``tags`` is an array, you could use :query:`$where`:"
msgstr ""

#: ../source/reference/operator/query/type.txt:75
# 111a5037948048f2bd1e2fb8d468020c
msgid "Queries that use :query:`$where` requires a complete collection scan and uses :ref:`Server-side JavaScript <server-side-javascript>`."
msgstr ""

#: ../source/reference/operator/query/type.txt:79
# 7f857dfddc82473ab86d4d871da7c0b7
msgid "``MinKey`` and ``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/type.txt:81
# ce5759b7904a40558320182aef7b9747
msgid "The following operation sequence demonstrates both type comparison *and* the special ``MinKey`` and ``MaxKey`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:102
# 12ce3ec15a484f64835205c698dfdb32
msgid "Minimum Shard Key"
msgstr ""

#: ../source/reference/operator/query/type.txt:104
# 025b1615c76845828cd5c1c092b94a40
msgid "To query for the minimum value of a :term:`shard key` of a :term:`sharded cluster`, use the following operation when connected to the :program:`mongos`:"
msgstr ""

#: ../source/reference/operator/query/type.txt:114
# f86db1c8f6924e39930fe258f4a4c2cb
msgid "Additional Information"
msgstr ""

#: ../source/reference/operator/query/type.txt:116
# 6d5ba0c5a9c34e80abfc66d9d07c05fb
msgid ":method:`~db.collection.find()`, :method:`~db.collection.insert()`, :query:`$where`, :term:`BSON`, :term:`shard key`, :term:`sharded cluster` ."
msgstr ""

