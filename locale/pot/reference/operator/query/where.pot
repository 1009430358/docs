# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/where.txt:3
# 27dd9c2f799b44fd8267c2a659c1e900
msgid "$where"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# add6c652a2144dc7a074ee71a0d3243b
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/where.txt:15
# a2d0480b9d4746f5b9c2b8e7de1c9dc0
msgid "Use the :query:`$where` operator to pass either a string containing a JavaScript expression or a full JavaScript function to the query system. The :query:`$where` provides greater flexibility, but requires that the database processes the JavaScript expression or function for *each* document in the collection. Reference the document in the JavaScript expression or function using either ``this`` or ``obj`` ."
msgstr ""

#: ../source/reference/operator/query/where.txt:24
# 005c16585d2e4431bed321a848eeeb6c
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/where.txt:27
# 925a7f64fa6c4560ac5617687aa44339
msgid "Restrictions"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# d565d13d16784ca2bd35932ce3130068
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# 76b2204e66b040bf9b875e831993a754
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# cdc55a64034349099005a748e3939de2
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# d2f82ff66da748109e702cbb65d04e7e
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# 8a64058b74844995b7e3d4e5dd2043dd
msgid "Available Functions"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d28760e8e433404f96f9a498c766110e
msgid "``args``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 92ecaa5cd8364431b6eb2b9e7f9021c1
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 1cd302e48b8f4ff28cb6e6dacb58e529
msgid "``MinKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 1c58b0666c9a4846aafafc51460ce04f
msgid "``assert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 2759b5ace5aa416192155ce4c47bd0ca
msgid "``BinData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 5cb02a96052a426aaab243c01c910a14
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# a8dfc627f34e494fad11c499971dd872
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d595802267ca4174958ddd14669f37d2
msgid "``doassert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 0c888ca4a62149cbb4d80c038333ea15
msgid "``emit()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3215651cae044d83bf2e4291d3ccadf1
msgid "``gc()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# eb965ab9a37e4b6a842f1147427ff3cf
msgid "``HexData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 9f4d381b3299481390bd01468aa02550
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 4749d550af5e461a8a3be8a3dac36a51
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 02eb5cd729c3445483675203847d8500
msgid "``isObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 9226e1d49c334686878428d3f3ddfdfb
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 773da4170c6749b98b8078ec82534181
msgid "``isString()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# e178c854e0c84004a225c648a859e718
msgid "``Map()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 1badf34219b043d5a3764e3fb87d9bb3
msgid "``MD5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# badded62f4624b089ad0aa69dd502891
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# d0ae411e81e44e2c9c93a63e5d34f178
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 6c9daf2e277241f3874f6b91b77c471b
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3eb47a1765454982a39afafc6fb3db4e
msgid "``print()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 3ab7250659fe49319c1de4c2f2618e0e
msgid "``printjson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 522c9a30de604a56b4e9f94eb86fb560
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# f617f83fe16b4ae9917dd9b8e58fd203
msgid "``sleep()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# ff9afed76e494a8aa99cef2031ce2a72
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 707e528a681d4eba9cf0b3de01493800
msgid "``tojson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# afd0edbc89da4c2b958f3adc2d4a9859
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 427011ac77374bde853c8f90cd61a1a1
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# 1be878ffb4534fbe9e1d0758af3c874a
msgid "``UUID()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
# ea01bb2cd3384140827b6354c8e77739
msgid "``version()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:34
# 833f81398b4d4cce85ec68e5628842aa
msgid "``elemMatch``"
msgstr ""

#: ../source/reference/operator/query/where.txt:38
# 7ecca0438dfe4e8bbc4e64a2a8f779ad
msgid "Only apply the :query:`$where` query operator to top-level documents. The :query:`$where` query operator will not work inside a nested document, for instance, in an :query:`$elemMatch` query."
msgstr ""

#: ../source/reference/operator/query/where.txt:43
# c67b9ae2500b488199cfe09467091d13
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/query/where.txt:45
# fb8d60c29be249778ea5b12ae413734b
msgid "Do not use global variables."
msgstr ""

#: ../source/reference/operator/query/where.txt:47
# 8b8cc61f3b854e79b53351b88b772457
msgid ":query:`$where` evaluates JavaScript and cannot take advantage of indexes. Therefore, query performance improves when you express your query using the standard MongoDB operators (e.g., :query:`$gt`, :query:`$in`)."
msgstr ""

#: ../source/reference/operator/query/where.txt:52
# 4ee27e65f7c847588ce76d50ca03205d
msgid "In general, you should use :query:`$where` only when you can't express your query using another operator. If you must use :query:`$where`, try to include at least one other standard query operator to filter the result set. Using :query:`$where` alone requires a collection scan."
msgstr ""

#: ../source/reference/operator/query/where.txt:58
# 0049553e6ce44d5f9e6d132f6ec9f084
msgid "Using normal non\\-:query:`$where` query statements provides the following performance advantages:"
msgstr ""

#: ../source/reference/operator/query/where.txt:61
# 9bae0ab8788d4351a837d8617de2cd0d
msgid "MongoDB will evaluate non\\-:query:`$where` components of query before :query:`$where` statements. If the non\\-:query:`$where` statements match no documents, MongoDB will not perform any query evaluation using :query:`$where`."
msgstr ""

#: ../source/reference/operator/query/where.txt:66
# 3a21ca7924964148a33effe0ee65b36f
msgid "The non\\-:query:`$where` query statements may use an :term:`index`."
msgstr ""

#: ../source/reference/operator/query/where.txt:70
# 666c03a1ec3e44c5b1beb23aeacb9cb4
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/where.txt:72
# 37ad48d8fe1647f08dcdbf2543f8a757
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:82
# a7bf882112a64a9bb6a76fe61d7ffd69
msgid "Additionally, if the query consists only of the :query:`$where` operator, you can pass in just the JavaScript expression or JavaScript functions, as in the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:92
# 6681e26fbbb646cf941fe01357b0891f
msgid "You can include both the standard MongoDB operators and the :query:`$where` operator in your query, as in the following examples:"
msgstr ""

