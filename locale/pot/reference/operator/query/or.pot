# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# 7e5a30efb84247d38efd157c81987cc7
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:9
# 73250fe9dcbb4dc6a951dbe77dd5b1a2
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:18
# 9edb2145522e4a4994385112b7c6def1
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
# 245c547fe98f49e1aaaed6d742806926
msgid "This query will select all documents in the ``inventory`` collection where either the ``quantity`` field value is less than ``20`` **or** the ``price`` field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:29
# 2263acbf6792441d8a6f31c18f984b7b
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:34
# b792036287a842698a7610c626394249
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:36
# 1fcf69f9d22d4474895bf754f8b8cda0
msgid "When evaluating the clauses in the :query:`$or` expression, MongoDB either performs a collection scan or, if all the clauses are supported by indexes, MongoDB performs index scans. That is, for MongoDB to use indexes to evaluate an :query:`$or` expression, all the clauses in the :query:`$or` expression must be supported by indexes. Otherwise, MongoDB will perform a collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:43
# b3a2b9fc1c32402da7d45169fd1c51ed
msgid "When using indexes with :query:`$or` queries, each clause of an :query:`$or` can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:50
# cdaaece674574f5ba4798e6b0ed26b2a
msgid "To support this query, rather than a compound index, you would create one index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:58
# e9f73eb1d7b24fc286f0c32da36c9c24
msgid "MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:64
# 3340c74a7c874b2182ed2c94d9a6ef49
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:68
# 0efbe94913744cabac99d7331d521678
msgid "If :query:`$or` includes a :query:`$text` query, all clauses in the :query:`$or` array must be supported by an index. This is because a :query:`$text` query *must* use an index, and :query:`$or` can only use indexes if all its clauses are supported by indexes. If the :query:`$text` query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:76
# 0c82233dd4ae4e72a207c540fd5715c6
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:80
# cbf087e8d47547a5a2a78e84e5a49b9b
msgid ":operator:`$or` supports :doc:`geospatial clauses </reference/operator/query-geospatial>` with the following exception for the near clause (near clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:87
# 9cb54caafc5b4ccfae8c39cc873457d6
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:91
# cdf99bd2a0e3414a82759af47aaaa380
msgid "When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB can now use indexes that support the :query:`$or` clauses. Previous versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:96
# cdf95694842340c0a3ec53c6076fdd95
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:98
# 78744a50348049658c51975cd684e8e7
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, use the :query:`$in` operator instead of the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
# 59b5624b29fc458d9ede8c98735aade8
msgid "For example, to select all documents in the ``inventory`` collection where the ``quantity`` field value equals either ``20`` *or* ``50``, use the :query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:111
# 77ac72b84eed455ba8fff76b785f163f
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:113
# a3beb8ded539475aaa232836860850b1
msgid "You may nest :query:`$or` operations."
msgstr ""

#: ../source/reference/operator/query/or.txt:115
# af98b0c8f9a346eeb28308e1b7ef313e
msgid ":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, :query:`$in`"
msgstr ""

