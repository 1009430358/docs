# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/or.txt:3
# 0328674791a74512916b2f5bea88bb25
msgid "$or"
msgstr ""

#: ../source/reference/operator/query/or.txt:0
# 80cb6cd4506449b39a27a68ac71feb9c
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/or.txt:15
# 7d1c4fccf0d641bc9e4f87d43c16a284
msgid "The :query:`$or` operator performs a logical ``OR`` operation on an array of *two or more* ``<expressions>`` and selects the documents that satisfy *at least* one of the ``<expressions>``. The :query:`$or` has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/or.txt:24
# 5c8e3742432e470a9f0da0cea76c97d3
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/operator/query/or.txt:30
# cc53bd1bd3a0466d8d7516c222c13550
msgid "This query will select all documents in the ``inventory`` collection where either the ``quantity`` field value is less than ``20`` **or** the ``price`` field value equals ``10``."
msgstr ""

#: ../source/reference/operator/query/or.txt:35
# b5e4260b30b1416f99275a110a43a619
msgid "Behaviors"
msgstr ""

#: ../source/reference/operator/query/or.txt:40
# 9aa6155ff21b4ecd846042a364dbe6f6
msgid "``$or`` Clauses and Indexes"
msgstr ""

#: ../source/reference/operator/query/or.txt:42
# 50b70b9ceb664c7abaa12dd41dd0d5a5
msgid "When evaluating the clauses in the :query:`$or` expression, MongoDB either performs a collection scan or, if all the clauses are supported by indexes, MongoDB performs index scans. That is, for MongoDB to use indexes to evaluate an :query:`$or` expression, all the clauses in the :query:`$or` expression must be supported by indexes. Otherwise, MongoDB will perform a collection scan."
msgstr ""

#: ../source/reference/operator/query/or.txt:49
# 504b058bbb154701b81988c524c23a30
msgid "When using indexes with :query:`$or` queries, each clause of an :query:`$or` can use its own index.  Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/or.txt:56
# 6de66e30db0d4beea43766f0a1d46eee
msgid "To support this query, rather than a compound index, you would create one index on ``quantity`` and another index on ``price``:"
msgstr ""

#: ../source/reference/operator/query/or.txt:64
# 56c46666ec3844e18fb021fd0eaa30e6
msgid "MongoDB can use all but the :doc:`geoHaystack </core/geohaystack>` index to support :query:`$or` clauses."
msgstr ""

#: ../source/reference/operator/query/or.txt:70
# 4d747cd33f844e909147efa99c5b9464
msgid "``$or`` and ``text`` Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:74
# 636b7f4e53964f04b46cf43b5cffbd9c
msgid "If :query:`$or` includes a :query:`$text` query, all clauses in the :query:`$or` array must be supported by an index. This is because a :query:`$text` query *must* use an index, and :query:`$or` can only use indexes if all its clauses are supported by indexes. If the :query:`$text` query cannot use an index, the query will return an error."
msgstr ""

#: ../source/reference/operator/query/or.txt:82
# 8dd12271fa75488e81a873510374bc65
msgid "``$or`` and GeoSpatial Queries"
msgstr ""

#: ../source/reference/operator/query/or.txt:86
# 2e0fa4fb228e4a819f2d525b364a9ec6
msgid ":operator:`$or` supports :doc:`geospatial clauses </reference/operator/query-geospatial>` with the following exception for the near clause (near clause includes :query:`$nearSphere` and :query:`$near`). :operator:`$or` cannot contain a near clause with any other clause."
msgstr ""

#: ../source/reference/operator/query/or.txt:93
# 89207968964b484c8719fd2275ee9711
msgid "``$or`` and Sort Operations"
msgstr ""

#: ../source/reference/operator/query/or.txt:97
# 3d008693aea3407caa51df82808fca31
msgid "When executing :query:`$or` queries with a :method:`~cursor.sort()`, MongoDB can now use indexes that support the :query:`$or` clauses. Previous versions did not use the indexes."
msgstr ""

#: ../source/reference/operator/query/or.txt:102
# a0d43b757e75411d8e300443f9d4e7d4
msgid "``$or`` versus ``$in``"
msgstr ""

#: ../source/reference/operator/query/or.txt:104
# d2a0206f52784353a623e2547da7901c
msgid "When using :query:`$or` with ``<expressions>`` that are equality checks for the value of the same field, use the :query:`$in` operator instead of the :query:`$or` operator."
msgstr ""

#: ../source/reference/operator/query/or.txt:108
# 4af818f05d7b436d9c3c4c61e7d58aca
msgid "For example, to select all documents in the ``inventory`` collection where the ``quantity`` field value equals either ``20`` *or* ``50``, use the :query:`$in` operator:"
msgstr ""

#: ../source/reference/operator/query/or.txt:117
# dece39e71be1459497a7f39f3c39a412
msgid "Nested ``$or`` Clauses"
msgstr ""

#: ../source/reference/operator/query/or.txt:119
# 6fb77e3187ec477da18f462f6dbf2a16
msgid "You may nest :query:`$or` operations."
msgstr ""

#: ../source/reference/operator/query/or.txt:121
# 2681b86f71484064941b0508be0cd21e
msgid ":query:`$and`, :method:`~db.collection.find()`, :method:`~cursor.sort()`, :query:`$in`"
msgstr ""

