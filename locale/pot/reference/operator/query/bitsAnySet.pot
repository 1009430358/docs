# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/bitsAnySet.txt:3
# 18cc778c9e724104a19581c854c1e8ba
msgid "$bitsAnySet"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:0
# 82a37015ca554eac87ae9ba856c68c9e
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:17
# fcd82e3668824f2f8107b527ac5281b6
msgid ":query:`$bitsAnySet` matches documents where *any* of the bit positions given by the query are set (i.e. ``1``) in ``field``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:3
# 12319873664b4a8a8e6a3b0ef97baaae
msgid "``{ <field>: { $bitsAnySet: <numeric bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:5
# ca66f8f84f584ba09608ed3240fdbc0d
msgid "``{ <field>: { $bitsAnySet: <`` :bsontype:`BinData <data_binary>` ``bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:7
# 4c9c3207281846ccb4c3e2e9236641e6
msgid "``{ <field>: { $bitsAnySet: [ <position1>, <position2>, ... ] } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:9
# 2bac779e3ead45c5b1323dd0d7f1f2e9
msgid "The ``field`` value must be either numerical or a :bsontype:`BinData <data_binary>` instance. Otherwise, :query:`$bitsAnySet` will not match the current document."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:16
# 91d525f11255435582497702791254d3
msgid "Numeric Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:14
# 9938c9e3cf5943ea9c3906ced83808e0
msgid "You can provide a numeric bitmask to be matched against the operand field. It must be representable as a non-negative 32-bit signed integer. Otherwise, :query:`$bitsAnySet` will return an error."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:20
#: ../source/reference/operator/query/bitsAnySet.txt:78
# 6221843ef0d043d0891b311751db020e
# 8fe5ff3626994cd9b6e259514494991d
msgid "BinData Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:19
# d2ddb5579ae946d99a26b83e2a7b1617
msgid "You can also use an arbitrarily large :bsontype:`BinData <data_binary>` instance as a bitmask."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:25
# 2613dd80af9d463d91e362f55d1fe4d8
msgid "Position List"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:23
# 090ec5e996f248bfa6018080a7d45591
msgid "If querying a list of bit positions, each ``<position>`` must be a non-negative integer. Bit positions start at ``0`` from the least significant bit. For example, the decimal number ``254`` would have the following bit positions:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:29
# 1a999c5c39be491c91996ba0977ef739
msgid "**Bit Value**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:31
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:33
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:35
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:37
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:39
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:41
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:43
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:61
# 5fc22c6eb42e4c158dd468aeff6ee38b
# 5a5027c1679e4a3a92ab399b45901d19
# a9835a9d54fc48769cd95a9c93433418
# 54775b1bb16b49079f4b0aad792511c7
# 362c38ce3dce4372a6b0d5f5503df131
# da6fb678cdba4d9493d1fa3ffd7988b1
# 48a7d586c27f49be87c73abe73320719
# 5bc67125847440eda106a8d44df750d4
msgid "1"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:45
#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:63
# 21bf29d0d57f4308b110382e5f5c710d
# 9f19398be15641cf8b4a890df208e249
msgid "0"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:47
# f1810820e53247c9b6e2107dffe641ff
msgid "**Position**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:49
# a1c336ffa23f4276b3884a89bfe0486a
msgid "7"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:51
# 0e74e2efc1064a3dbb970daeb958a1b3
msgid "6"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:53
# f70c813f3f2f422fa72af231ff22c45b
msgid "5"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:55
# b963c6108db440648eea97cff144d5ef
msgid "4"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:57
# f97c52dc87e345f5955b0272e03a6f99
msgid "3"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-description.rst:59
# 23fc88d7d6be40dcb0acc2323deb0615
msgid "2"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:23
# c61ea59ac9b04058bf9178e6183b7377
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:26
# 6ee750ec7fe244eba6526a1ff7696382
msgid "Floating Point Values"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsanyset-floating-point.rst:1
# 9374f2e8beb04ad7b8fd08319543b52c
msgid ":query:`$bitsAnySet` will not match numerical values that cannot be represented as a signed 64-bit integer. This can be the case if a value is either too large or small to fit in a signed 64-bit integer, or if it has a fractional component."
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:31
# f3d2d12ce9eb4591a26b494bb634c79c
msgid "Sign Extension"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
# 2f79ca38625944efa2503543d4d594ca
msgid "Numbers are sign extended. For example, $bitsAllSet considers bit position ``200`` to be set for the negative number ``-5``, but bit position ``200`` to be clear for the positive number ``+5``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
# 540d06d292a64c918443f3276d77109f
msgid "In contrast, :bsontype:`BinData <data_binary>` instances are zero-extended. For example, given the following document:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
# 92a4196e6ae24225af7bddd06447ed42
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:36
# 3afc3d92f35a40618ce1c0165c724daa
msgid "Examples"
msgstr ""

#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
# 41f1f14ba74a4090af37f9fb2371bd80
msgid "The following examples will use a collection with the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:41
# 235c1ad820ac4cd8a40380a65ca142b8
msgid "Bit Position Array"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:43
# 19022a16e1e2483cbae13a46557b2755
msgid "The following query uses the :query:`$bitsAnySet` operator to test whether field ``a`` has either bit position ``1`` or bit position ``5`` set, where the least significant bit is position ``0``."
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:51
#: ../source/reference/operator/query/bitsAnySet.txt:70
#: ../source/reference/operator/query/bitsAnySet.txt:88
# 89664f073a2c482ab63f745235969744
# b2f4b6bba97b4b279cd76fd41f7108bb
# ce8c0072579c4c069693805cecca471b
msgid "The query matches the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:60
# ea61fdbb19884f0b96303946fdb0f659
msgid "Integer Bitmask"
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:62
# dd38dd8272b7457abc49b157c871e4a2
msgid "The following query uses the :query:`$bitsAnySet` operator to test whether field ``a`` has any bits set at positions ``0``, ``1``, and ``5`` (the binary representation of the bitmask ``35`` is ``00100011``)."
msgstr ""

#: ../source/reference/operator/query/bitsAnySet.txt:80
# ee2d052090cb4170ad9c4a2561b02d82
msgid "The following query uses the :query:`$bitsAnySet` operator to test whether field ``a`` has any bits set at positions `4`, and `5` (the binary representation of ``BinData(0, \"MC==\")`` is ``00110000``)."
msgstr ""

