# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/not.txt:3
# 5c482ad367c344d485e61f2cc735affc
msgid "$not"
msgstr ""

#: ../source/reference/operator/query/not.txt:15
# 5e880f473e9d438c8638ce8d0a4e95fe
msgid "*Syntax*: ``{ field: { $not: { <operator-expression> } } }``"
msgstr ""

#: ../source/reference/operator/query/not.txt:17
# 391ef339e88445fa9a75662101b47445
msgid ":query:`$not` performs a logical ``NOT`` operation on the specified ``<operator-expression>`` and selects the documents that do *not* match the ``<operator-expression>``. This includes documents that do not contain the ``field``."
msgstr ""

#: ../source/reference/operator/query/not.txt:22
# d360a42058784b78b68a46aedefb0b6e
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/not.txt:28
# a931608177614d2f9ae6aa5994a71afc
msgid "This query will select all documents in the ``inventory`` collection where:"
msgstr ""

#: ../source/reference/operator/query/not.txt:30
# 6438a4c979f841f484dcb1e52e716bf8
msgid "the ``price`` field value is less than or equal to ``1.99`` **or**"
msgstr ""

#: ../source/reference/operator/query/not.txt:31
# 6a0118b5f2c9477cbb49924147d23ee5
msgid "the ``price`` field does not exist"
msgstr ""

#: ../source/reference/operator/query/not.txt:33
# b0745a8247684e25a92f12c8a0b92959
msgid "``{ $not: { $gt: 1.99 } }`` is different from the :query:`$lte` operator. ``{ $lte: 1.99 }`` returns *only* the documents where ``price`` field exists and its value is less than or equal to ``1.99``."
msgstr ""

#: ../source/reference/operator/query/not.txt:38
# ad1bd8ba7d0443fc8e60fee18a380295
msgid "Remember that the :query:`$not` operator only affects *other operators* and cannot check fields and documents independently. So, use the :query:`$not` operator for logical disjunctions and the :query:`$ne` operator to test the contents of fields directly."
msgstr ""

#: ../source/reference/operator/query/not.txt:43
# 7e7cc98429894a4c97f7d4d33817b720
msgid "Consider the following behaviors when using the :query:`$not` operator:"
msgstr ""

#: ../source/reference/operator/query/not.txt:46
# 6c371c6b3c7c4539b0ee36a2399ffd25
msgid "The operation of the :query:`$not` operator is consistent with the behavior of other operators but may yield unexpected results with some data types like arrays."
msgstr ""

#: ../source/reference/operator/query/not.txt:50
# 808c46fabb154316ace30e7c89802046
msgid "The :query:`$not` operator does **not** support operations with the :query:`$regex` operator. Instead use ``//`` or in your driver interfaces, use your language's regular expression capability to create regular expression objects."
msgstr ""

#: ../source/reference/operator/query/not.txt:55
# b6885620d6fc4c6da312c4c26937f413
msgid "Consider the following example which uses the pattern match expression ``//``:"
msgstr ""

#: ../source/reference/operator/query/not.txt:61
# 893472dc6fe64447a1f0045a3264a5e3
msgid "The query will select all documents in the ``inventory`` collection where the ``item`` field value does *not* start with the letter ``p``."
msgstr ""

#: ../source/reference/operator/query/not.txt:65
# 4774cef1f8254a72b54a2272ff701fd4
msgid "If you are using Python, you can write the above query with the PyMongo driver and Python's :py:meth:`python:re.compile()` method to compile a regular expression, as follows:"
msgstr ""

#: ../source/reference/operator/query/not.txt:77
# 5adfe37a4cb0433990c9875b4ebff8b4
msgid ":method:`~db.collection.find()`, :method:`~db.collection.update()`, :update:`$set`, :query:`$gt`, :query:`$regex`, :api:`PyMongo <python/current>`, :term:`driver`."
msgstr ""

