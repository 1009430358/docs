# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/regex.txt:3
# 225f7d38a3584c00ba3c97d69b410a1e
msgid "$regex"
msgstr ""

#: ../source/reference/operator/query/regex.txt:0
# f2574f143e4c4cc2bfdede2a97373536
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/regex.txt:14
# a7441dc3929242878310b95a10c8a842
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/regex.txt:18
# efb4f089eb37404482f8a448cb9a9748
msgid "Provides regular expression capabilities for pattern matching *strings* in queries. MongoDB uses Perl compatible regular expressions (i.e. \"PCRE\" ) version 8.38 with UTF-8 support."
msgstr ""

#: ../source/reference/operator/query/regex.txt:22
# 21a17a08a9354a49bccda988545651cc
msgid "To use :query:`$regex`, use one of the following syntax:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:30
# 917256f2bf34462d9b3c204104d3eb5c
msgid "In MongoDB, you can also use regular expression objects (i.e. ``/pattern/``) to specify regular expressions:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:37
# 7edf3c0e73f04609a248ff6d30e7ec13
msgid "For restrictions on particular syntax use, see :ref:`syntax-restrictions`."
msgstr ""

#: ../source/reference/operator/query/regex.txt:42
# f81b04468a7049ac90369f214e65fb92
msgid "The following ``<options>`` are available for use with regular expression."
msgstr ""

#: ../source/reference/operator/query/regex.txt:49
# 5dd6d297595f40c6a9f8135adafe4c17
msgid "Option"
msgstr ""

#: ../source/reference/operator/query/regex.txt:50
# 08b57eae43e14e8bb6b0cebadde2fd19
msgid "Description"
msgstr ""

#: ../source/reference/operator/query/regex.txt:51
# 1ed0feda36df4b3ea575c4637abbfea3
msgid "Syntax Restrictions"
msgstr ""

#: ../source/reference/operator/query/regex.txt:53
# 190d425780244e48bc0022d5b6ce1a91
msgid "``i``"
msgstr ""

#: ../source/reference/operator/query/regex.txt:54
# 014a4abe5cea41fdb3698082c14da7c0
msgid "Case insensitivity to match upper and lower cases. For an example, see :ref:`regex-case-insensitive`."
msgstr ""

#: ../source/reference/operator/query/regex.txt:58
# 3d1ad0db436240b5afb34590a0a71d98
msgid "``m``"
msgstr ""

#: ../source/reference/operator/query/regex.txt:60
# bff3a369ff554180b771c713fa697fa0
msgid "For patterns that include anchors (i.e. ``^`` for the start, ``$`` for the end), match at the beginning or end of each line for strings with multiline values. Without this option, these anchors match at beginning or end of the string. For an example, see :ref:`regex-multiline-match`."
msgstr ""

#: ../source/reference/operator/query/regex.txt:66
# 793d3fd162184309917735ef07957813
msgid "If the pattern contains no anchors or if the string value has no newline characters (e.g. ``\\n``), the ``m`` option has no effect."
msgstr ""

#: ../source/reference/operator/query/regex.txt:72
# 35bd01cdb7804a88a9fde908686cf752
msgid "``x``"
msgstr ""

#: ../source/reference/operator/query/regex.txt:74
# 7fcd34c6174a4c779215943e2cf5cda3
msgid "\"Extended\" capability to ignore all white space characters in the :query:`$regex` pattern unless escaped or included in a character class."
msgstr ""

#: ../source/reference/operator/query/regex.txt:78
# 505991a729be45b59d3d3a3eb9c2f56a
msgid "Additionally, it ignores characters in-between and including an un-escaped hash/pound (``#``) character and the next new line, so that you may include comments in complicated patterns. This only applies to data characters; white space characters may never appear within special character sequences in a pattern."
msgstr ""

#: ../source/reference/operator/query/regex.txt:85
# 9786ce3f15e24608a8e6eca67a8f0be6
msgid "The ``x`` option does not affect the handling of the VT character (i.e. code 11)."
msgstr ""

#: ../source/reference/operator/query/regex.txt:88
#: ../source/reference/operator/query/regex.txt:96
# bbeb1a6f749b48448e8ada0f1cfc8189
# 9372856bb04248be8336f5a6dbcd3d68
msgid "Requires ``$regex`` with ``$options`` syntax"
msgstr ""

#: ../source/reference/operator/query/regex.txt:90
# 06767f28855a4121a7f80b5ec3eab46b
msgid "``s``"
msgstr ""

#: ../source/reference/operator/query/regex.txt:92
# f9d876a8956a48eca4ca807998bc3aa6
msgid "Allows the dot character (i.e. ``.``) to match all characters *including* newline characters. For an example, see :ref:`regex-dot-new-line`."
msgstr ""

#: ../source/reference/operator/query/regex.txt:99
# e5a6c716b01647938b988bbbf4f2cf63
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/regex.txt:104
# ec25c8bf2aec4b70b21e5409afba26a0
msgid "$regex vs. /pattern/ Syntax"
msgstr ""

#: ../source/reference/operator/query/regex.txt:107
# fb2b21d3fdb74230833ad7a6b3f464b0
msgid "``$in`` Expressions"
msgstr ""

#: ../source/reference/operator/query/regex.txt:109
# 345ee32981804b06a1a956497e385f9e
msgid "To include a regular expression in an ``$in`` query expression, you can only use JavaScript regular expression objects (i.e. ``/pattern/`` ). For example:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:117
# 5231e4e7c24a4690bacbb6cadbe7634d
msgid "You *cannot* use :query:`$regex` operator expressions inside an :query:`$in`."
msgstr ""

#: ../source/reference/operator/query/regex.txt:121
# cea3c55741a84469b76843fd14eae28c
msgid "Implicit ``AND`` Conditions for the Field"
msgstr ""

#: ../source/reference/operator/query/regex.txt:123
# 0d06b081623b4b6c84f2113e4de82e11
msgid "To include a regular expression in a comma-separated list of query conditions for the field, use the :query:`$regex` operator. For example:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:133
# d499f4664cf7454cb7b5d47193abcdd3
msgid "``x`` and ``s`` Options"
msgstr ""

#: ../source/reference/operator/query/regex.txt:135
# 483b5823a56e4cfc94712934dd90532b
msgid "To use either the ``x`` option or ``s`` options, you must use the :query:`$regex` operator expression *with* the :query:`$options` operator. For example, to specify the ``i`` and the ``s`` options, you must use :query:`$options` for both:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:146
# d0805bc1ac8d4f72adecc9b506b90d8e
msgid "PCRE vs JavaScript"
msgstr ""

#: ../source/reference/operator/query/regex.txt:148
# cd78345394e547fe8cc8218bc3b0d513
msgid "To use PCRE supported features in the regex pattern that are unsupported in JavaScript, you must use the :query:`$regex` operator expression with the pattern as a string. For example, to use ``(?i)`` in the pattern to turn case-insensitivity on for the remaining pattern and ``(?-i)`` to turn case-sensitivity on for the remaining pattern, you must use the :query:`$regex` operator with the pattern as a string:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:162
# 7a6eae37c9324318b3252d0b870afa78
msgid "Index Use"
msgstr ""

#: ../source/reference/operator/query/regex.txt:166
# 51d596213c1343fca9d28d813f47e74f
msgid "For case sensitive regular expression queries, if an index exists for the field, then MongoDB matches the regular expression against the values in the index, which can be faster than a collection scan. Further optimization can occur if the regular expression is a \"prefix expression\", which means that all potential matches start with the same string. This allows MongoDB to construct a \"range\" from that prefix and only match against those values from the index that fall within that range."
msgstr ""

#: ../source/reference/operator/query/regex.txt:175
# 2975b71ceb4843e4aae8d6ad7a129a80
msgid "A regular expression is a \"prefix expression\" if it starts with a caret (``^``) or a left anchor (``\\A``), followed by a string of simple symbols. For example, the regex ``/^abc.*/`` will be optimized by matching only against the values from the index that start with ``abc``."
msgstr ""

#: ../source/reference/operator/query/regex.txt:180
# 1bcfdd6189314c7697f3b9138858a10e
msgid "Additionally, while ``/^a/``, ``/^a.*/``, and ``/^a.*$/`` match equivalent strings, they have different performance characteristics. All of these expressions use an index if an appropriate index exists; however, ``/^a.*/``, and ``/^a.*$/`` are slower. ``/^a/`` can stop scanning after matching the prefix."
msgstr ""

#: ../source/reference/operator/query/regex.txt:186
# dd9c66d15772484e8e776029ff21b6ce
msgid "For case insensitive regular expression queries, these queries generally cannot use indexes effectively."
msgstr ""

#: ../source/reference/operator/query/regex.txt:190
# 88b2504ed3d34e1dbd5e68ca03132650
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/regex.txt:192
# 7cf222d8c0764df8916b54b23f33a51d
msgid "The following examples use a collection ``products`` with the following documents:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:205
# 85abd097f4b449159e1c224df1522cb6
msgid "Perform Case-Insensitive Regular Expression Match"
msgstr ""

#: ../source/reference/operator/query/regex.txt:207
# 728db9a6fee14349af10c7323e5ddf51
msgid "The following example uses the ``i`` option perform a *case-insensitive* match for documents with ``sku`` value that starts with ``ABC``."
msgstr ""

#: ../source/reference/operator/query/regex.txt:215
#: ../source/reference/operator/query/regex.txt:234
#: ../source/reference/operator/query/regex.txt:274
# abf1f342269d4be8b80039a7d1366008
# e4f374aaad474555bb67697d924e3945
# 9ab8724412674e5d88e9659c2f640668
msgid "The query matches the following documents:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:225
# 989ac074bc9347e1a70a968375c11d28
msgid "Multiline Match for Lines Starting with Specified Pattern"
msgstr ""

#: ../source/reference/operator/query/regex.txt:227
# 46a4e877cf1a48139fd4cff08752ed28
msgid "The following example uses the ``m`` option to match lines starting with the letter ``S`` for multiline strings:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:241
# aa0a32f7bf514113b0da28c3525f8d4e
msgid "Without the ``m`` option, the query would match just the following document:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:247
# 08d09fab83724c2db79c888e4065049c
msgid "If the :query:`$regex` pattern does not contain an anchor, the pattern matches against the string as a whole, as in the following example:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:254
# fed65a7854eb44e49e15505e663fcaaa
msgid "Then, the :query:`$regex` would match both documents:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:264
# dd3cecb0131645d58ab62815806cefb6
msgid "Use the ``.`` Dot Character to Match New Line"
msgstr ""

#: ../source/reference/operator/query/regex.txt:266
# 3d2bff7c70174295836a6ffc890e25a5
msgid "The following example uses the ``s`` option to allow the  dot character (i.e. ``.``) to match all characters *including* new line as well as the ``i`` option to perform a case-insensitive match:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:281
# 7cf7dc5738044cf5b67fef7338c9a793
msgid "*Without* the ``s`` option, the query would have matched only the following document:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:290
# d85889d933d04ffaa729e5f60a5408de
msgid "Ignore White Spaces in Pattern"
msgstr ""

#: ../source/reference/operator/query/regex.txt:292
# b2b3dfadb1564a1792e610990e617ee0
msgid "The following example uses the ``x`` option ignore white spaces and the comments, denoted by the ``#`` and ending with the ``\\n`` in the matching pattern:"
msgstr ""

#: ../source/reference/operator/query/regex.txt:301
# 0b7c88d6a523434b92a87d9cc8a21f25
msgid "The query matches the following document:"
msgstr ""

