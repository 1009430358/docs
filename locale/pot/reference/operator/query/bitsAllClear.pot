# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/bitsAllClear.txt:3
# 7829fab8f4634b729b33eb0a4f4e0c2d
msgid "$bitsAllClear"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:0
# 9bd9cc6bb148410697383efda344e79e
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:17
# a70674e9228840bd9e61a85bf12d9210
msgid ":query:`$bitsAllClear` matches documents where *all* of the bit positions given by the query are clear (i.e. ``0``) in ``field``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:3
# 2d1d786cfc6b4bb185fe280d11f186de
msgid "``{ <field>: { $bitsAllClear: <numeric bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:5
# 0f9ed266c0824dec910016dbc1c3dc80
msgid "``{ <field>: { $bitsAllClear: <`` :bsontype:`BinData <data_binary>` ``bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:7
# 440efe1c5e074a5a812568fbe20ebc23
msgid "``{ <field>: { $bitsAllClear: [ <position1>, <position2>, ... ] } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:9
# 1e19ad325bc54d3c88d3c6b8386009e9
msgid "The ``field`` value must be either numerical or a :bsontype:`BinData <data_binary>` instance. Otherwise, :query:`$bitsAllClear` will not match the current document."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:16
# e7c2f1bad18d4047bdf8d12f4bfb19e2
msgid "Numeric Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:14
# fe3a6400c9444061ad387297c823826c
msgid "You can provide a numeric bitmask to be matched against the operand field. It must be representable as a non-negative 32-bit signed integer. Otherwise, :query:`$bitsAllClear` will return an error."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:20
#: ../source/reference/operator/query/bitsAllClear.txt:78
# c3f61ac1d0474587b74c724fd21f3dd8
# 8bcd8b9428f041f6bc57b58d7bded40d
msgid "BinData Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:19
# 059a84392cd548ed9cdf01ed7d405283
msgid "You can also use an arbitrarily large :bsontype:`BinData <data_binary>` instance as a bitmask."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:25
# 29f150c6b96b475e80d99499bfd93068
msgid "Position List"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:23
# ffef04f18aa94400b9a57db9250f0c85
msgid "If querying a list of bit positions, each ``<position>`` must be a non-negative integer. Bit positions start at ``0`` from the least significant bit. For example, the decimal number ``254`` would have the following bit positions:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:29
# 7598221f233641d987b0d78524907fd2
msgid "**Bit Value**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:31
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:33
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:35
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:37
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:39
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:41
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:43
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:61
# 7c545e599a7f494a82ee882aa6eedf0c
# 3cbd8a63bb3b49d1a41295de3d5b0aff
# c0138c7049cb408a8517c0fd2ced8721
# 1def88211ce14626bf86d765f2a72945
# aafddcc2aed74e17afb31b19d6a4b1c0
# f620d2638bd1469591ad0ff806ca3bd9
# c0fa326bbbca4709a6f9654384cbca62
# f85c82062fb047d098692bf8345f3400
msgid "1"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:45
#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:63
# 8e90de150cfc41c08565badf70a47ab5
# 5a4c2c0fd91e4370adb4b2f9a7580e4a
msgid "0"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:47
# 0f6f32d3768a4d44979cdbc111bade58
msgid "**Position**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:49
# 9658cd5b664443749e76ca0744f59c47
msgid "7"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:51
# 626cf434a1e948c58cae773c8d72b3ea
msgid "6"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:53
# b63608f3a7694e3097fa4343efead914
msgid "5"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:55
# cd76dbc8bffe410184b7391f52f1b0bb
msgid "4"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:57
# 607d4f7349f4426aa843f9f8c89156a3
msgid "3"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-description.rst:59
# a0a6cd5778944f5e9c7ea36e01afde81
msgid "2"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:23
# e1791f512a8c4c009a0e831ceca20a04
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:26
# 24632e43da654f8d8bf2561f67f79b21
msgid "Floating Point Values"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallclear-floating-point.rst:1
# 0ea53417a0ec48e1bb0bda544c045e2b
msgid ":query:`$bitsAllClear` will not match numerical values that cannot be represented as a signed 64-bit integer. This can be the case if a value is either too large or small to fit in a signed 64-bit integer, or if it has a fractional component."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:31
# 3a5a4f3893a149cb92a872769ef29543
msgid "Sign Extension"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
# a0983266d74a47c3abef62fe46956089
msgid "Numbers are sign extended. For example, $bitsAllSet considers bit position ``200`` to be set for the negative number ``-5``, but bit position ``200`` to be clear for the positive number ``+5``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
# dce1d76412604380bb86fab9c7c14bdd
msgid "In contrast, :bsontype:`BinData <data_binary>` instances are zero-extended. For example, given the following document:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
# 57048bc837104b3ea59343e09d68283b
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:36
# eb162b863a644caaa4281a644e6596e3
msgid "Examples"
msgstr ""

#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
# daba35e05b854879b07d3813add39e4d
msgid "The following examples will use a collection with the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:41
# 24a3ebd0e0d4497a96f7d711b7aeaaf7
msgid "Bit Position Array"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:43
# a043c64f478046f3a9d1254eab956815
msgid "The following query uses the :query:`$bitsAllClear` operator to test whether field ``a`` has bits clear at position ``1`` and position ``5``, where the least significant bit is position ``0``."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:51
#: ../source/reference/operator/query/bitsAllClear.txt:70
#: ../source/reference/operator/query/bitsAllClear.txt:88
# 3f728199ae92449baded9591428186fb
# 863553c0768b4bdbbf40ce9ac2a3104c
# 6ba1ea7894de4737a9ef0865c3d0b575
msgid "The query matches the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:60
# 53e93ac274794f6685c9b8e24f77bd64
msgid "Integer Bitmask"
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:62
# 9113b124e90642bd887d2483d0e3ca52
msgid "The following query uses the :query:`$bitsAllClear` operator to test whether field ``a`` has bits clear at positions ``0``, ``1``, and ``5`` (the binary representation of the bitmask ``35`` is ``00100011``)."
msgstr ""

#: ../source/reference/operator/query/bitsAllClear.txt:80
# e334f5f021c34e528aded6742766ab41
msgid "The following query uses the :query:`$bitsAllClear` operator to test whether field ``a`` has bits clear at positions `2` and `4` (the binary representation of ``BinData(0, \"ID==\")`` is ``00010100``."
msgstr ""

