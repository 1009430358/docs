# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/bitsAllSet.txt:3
# 577a9e6e2e174ddbbfdb7bc43ef3f4ef
msgid "$bitsAllSet"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:0
# 63a3eb337e3c48f5ae423fb33afccea3
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:17
# a110ad9c7df346bcae490337bccaaa06
msgid ":query:`$bitsAllSet` matches documents where *all* of the bit positions given by the query are set (i.e. ``1``) in ``field``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:3
# 7d6e5bc49337484b8f972abdb02cdb36
msgid "``{ <field>: { $bitsAllSet: <numeric bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:5
# 84082f59bf284eaba6a27905bb4c8222
msgid "``{ <field>: { $bitsAllSet: <`` :bsontype:`BinData <data_binary>` ``bitmask> } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:7
# 23982ead9e49435ca1826454d426c78a
msgid "``{ <field>: { $bitsAllSet: [ <position1>, <position2>, ... ] } }``"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:9
# d75c82a18dba44429d7dfba2e6dce65c
msgid "The ``field`` value must be either numerical or a :bsontype:`BinData <data_binary>` instance. Otherwise, :query:`$bitsAllSet` will not match the current document."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:16
# fa201dbd2891409d857b211b6b62284b
msgid "Numeric Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:14
# d926875bcd354292ad2f7ae9e9800e51
msgid "You can provide a numeric bitmask to be matched against the operand field. It must be representable as a non-negative 32-bit signed integer. Otherwise, :query:`$bitsAllSet` will return an error."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:20
#: ../source/reference/operator/query/bitsAllSet.txt:77
# 5c537a83f3004aa794dc38784142bf34
# d70a011322684e82b0d28d3f70924861
msgid "BinData Bitmask"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:19
# 7d56d357d04f4c95bac78175a083186a
msgid "You can also use an arbitrarily large :bsontype:`BinData <data_binary>` instance as a bitmask."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:25
# c4ef25817de3407b9c9bcdd1bdc91dfb
msgid "Position List"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:23
# e1556d6de98f4e8da8779e81ee0a9184
msgid "If querying a list of bit positions, each ``<position>`` must be a non-negative integer. Bit positions start at ``0`` from the least significant bit. For example, the decimal number ``254`` would have the following bit positions:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:29
# 0903849fffda409db84aa77862bf32c3
msgid "**Bit Value**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:31
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:33
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:35
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:37
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:39
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:41
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:43
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:61
# 006d2446387c434097ee563d35afcf6d
# 24755a23eff94a1ebe6c4033c606673b
# 071459de5dbf4374a967e80de41e83aa
# 764bdbf178ee46539099c12abe340a6d
# d1bf8f91f76e46619fe61002b64ac2c7
# 6b03f48523ef4e1792f2c7dda047c0e4
# ddccae4d6ec24e368a203b6e6955ecae
# 5c8e4cc047e846f19cfe640b1a7f5a0e
msgid "1"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:45
#: ../source/includes/extracts/fact-query-bitsallset-description.rst:63
# 3e178715c1064e54b1b6be27874fc4c7
# e126a35c85ad436cae42a0e8c40e6bbf
msgid "0"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:47
# 8a3baca5cd2442ce90b7af505d458b3e
msgid "**Position**"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:49
# 24371c48b27c418abccd2b6af8eec4ad
msgid "7"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:51
# 6920e8db24264d6fa20bc125e4ce79eb
msgid "6"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:53
# 8101350d5a9e4b7f87dfa85238991eb9
msgid "5"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:55
# f7da139106aa459284a367b36f11de03
msgid "4"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:57
# 37a4dc9541a54716b4f14c5603dc3432
msgid "3"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-description.rst:59
# c9ef503a54a444ee89183d7d661ef5df
msgid "2"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:23
# 996d5b21015d4720982cf42e0c1dcf1c
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:26
# 18c1fa889399460db4b9fc7733124bb8
msgid "Floating Point Values"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-floating-point.rst:1
# 0260927e8c8d4b30a1ee2af841c54caa
msgid ":query:`$bitsAllSet` will not match numerical values that cannot be represented as a signed 64-bit integer. This can be the case if a value is either too large or small to fit in a signed 64-bit integer, or if it has a fractional component."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:31
# d7dd7aeb96de4c0e9f147ac965d7c9e7
msgid "Sign Extension"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:1
# 613e85612e974021b542ff59e89e07e3
msgid "Numbers are sign extended. For example, $bitsAllSet considers bit position ``200`` to be set for the negative number ``-5``, but bit position ``200`` to be clear for the positive number ``+5``."
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:5
# 1c7b563130e2455296ec009cc6289f68
msgid "In contrast, :bsontype:`BinData <data_binary>` instances are zero-extended. For example, given the following document:"
msgstr ""

#: ../source/includes/extracts/fact-query-bitsallset-sign-extension.rst:12
# 4d03ebae5fa74a599c85cde984791d85
msgid "$bitsAllSet will consider all bits outside of ``x`` to be clear."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:36
# bf1962a033314e5b91fa3914a3739e53
msgid "Examples"
msgstr ""

#: ../source/includes/extracts/fact-query-bitwise-example-collection.rst:1
# 4ac0bf43998c40df9a50ae10f2a940d4
msgid "The following examples will use a collection with the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:41
# 40b0ff89f1ee4d6f96a655a16adc5e89
msgid "Bit Position Array"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:43
# b94f53932a0644beae26f291776b3c28
msgid "The following query uses the :query:`$bitsAllSet` operator to test whether field ``a`` has bits set at position ``1`` and position ``5``, where the least significant bit is position ``0``."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:51
# 65161cdfab6d4c29ab3e40781472f173
msgid "The query matches the following documents:"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:60
# cce2d237237f4edba98ccffffe98d077
msgid "Integer Bitmask"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:62
# 8a699ce7a5544ff0a941e49b5fe0a430
msgid "The following query uses the :query:`$bitsAllSet` operator to test whether field ``a`` has bits set at positions ``1``, ``4``, and ``5`` (the binary representation of the bitmask ``50`` is ``00110010``)."
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:70
#: ../source/reference/operator/query/bitsAllSet.txt:87
# 715e962ec2024e67996ac4d37f6d4418
# 88fd0e0072d74f7ebc9eec44a4b59952
msgid "The query matches the following document:"
msgstr ""

#: ../source/reference/operator/query/bitsAllSet.txt:79
# 57d114c5b990474285950cdc68f4e49e
msgid "The following query uses the :query:`$bitsAllSet` operator to test whether field ``a`` has bits set at positions `4` and `5` (the binary representation of ``BinData(0, \"MC==\")`` is ``00110000``)."
msgstr ""

