# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/update/addToSet.txt:3
# 42c9afcbb5064254937d131698e25c9e
msgid "$addToSet"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:8
# 15e03425f93d40a1b9f0ed42ac3577da
msgid "Definition"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:12
# a2344e3f255b44af976576dc619f2d89
msgid "The :update:`$addToSet` operator adds a value to an array unless the value is already present, in which case :update:`$addToSet` does nothing to that array."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:16
# bb1ba22979dc41b3be8b6b37e886de4d
msgid "The :update:`$addToSet` operator has the form:"
msgstr ""

#: ../source/includes/use-dot-notation.rst:1
# 25c179c16ef2466dbca926029799060d
msgid "To specify a ``<field>`` in an embedded document or in an array, use :ref:`dot notation <document-dot-notation>`."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:25
# b0b6be94bf634e9eaedc4e7f231c635d
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:27
# d13bc01f503a46c0bd71107fa2b1fe2f
msgid ":update:`$addToSet` only ensures that there are no duplicate items *added* to the set and does not affect existing duplicate elements. :update:`$addToSet` does not guarantee a particular ordering of elements in the modified set."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:32
# 07f6220b281f497384e38fef318eff85
msgid "If the field is absent in the document to update, :update:`$addToSet` creates the array field with the specified value as its element."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:35
# 5a7b2c77757e4b5a9d6f2c1222d45cf7
msgid "If the field is **not** an array, the operation will fail."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:37
# 79b8f21f555d4b4c860ef6881c96d019
msgid "If the value is an array, :update:`$addToSet` appends the whole array as a *single* element."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:40
# 477bcdc9f5f64f24889c30bc3b8344ab
msgid "Consider a document in a collection ``test`` containing an array field ``letters``:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:47
# 9655c4c6410c458aaf4279962a244969
msgid "The following operation appends the array ``[ \"c\", \"d\" ]`` to the ``letters`` field:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:57
# 55ed28dc301542b694d3729708699f0b
msgid "The ``letters`` array now includes the ``[ \"c\", \"d\" ]`` array as an element:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:64
# 58f05dc80ff64066b05692c3916cda0f
msgid "To add each element of the value **separately**, use the :update:`$each` modifier with :update:`$addToSet`. See :ref:`addToSet-modifiers` for details."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:68
# aa6231abc4554c1f839b7474722502c3
msgid "If the value is a document, MongoDB determines that the document is a duplicate if an existing document in the array matches the to-be-added document exactly; i.e. the existing document has the exact same fields and values *and* the fields are in the same order. As such, field order matters and you cannot specify that MongoDB compare only a subset of the fields in the document to determine whether the document is a duplicate of an existing array element."
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:77
# 23e103d253cf452f8169894f2f7fe6a8
msgid "Examples"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:79
# 1a6f58dd98094153a25bbc87f8c74b26
msgid "Consider a collection ``inventory`` with the following document:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:86
# 90be3d80684340cb98a8b7c36e9a83f6
msgid "Add to Array"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:88
# 2b3fb1af26744d798801aebd4bca4b7f
msgid "The following operation adds the element ``\"accessories\"`` to the ``tags`` array since ``\"accessories\"`` does not exist in the array:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:99
# 2a1e9e1a567e4d7883bc2ae5bebbc4c1
msgid "Value Already Exists"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:101
# fe76e70fe7424ef181d62441a7cd1b6a
msgid "The following :update:`$addToSet` operation has no effect as ``\"camera\"`` is already an element of the ``tags`` array:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:114
# b855d9443cbb4d33ba64c05f83b249b3
msgid "``$each`` Modifier"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:116
# 09a4f775ac0b491699b2413bd99ad87f
msgid "You can use the :update:`$addToSet` operator with the :update:`$each` modifier. The :update:`$each` modifier allows the :update:`$addToSet` operator to add multiple values to the array field."
msgstr ""

#: ../source/includes/example-addToSet-each.rst:1
# 88d1d4e982c241518690bf073842fc4a
msgid "A collection ``inventory`` has the following document:"
msgstr ""

#: ../source/includes/example-addToSet-each.rst:7
# 7154240c569042b686e60e496e53f8e5
msgid "Then the following operation uses the :update:`$addToSet` operator with the :update:`$each` modifier to add multiple elements to the ``tags`` array:"
msgstr ""

#: ../source/includes/example-addToSet-each.rst:18
# c6bb4cd416b34d9d8771996c8109125d
msgid "The operation adds only ``\"camera\"`` and ``\"accessories\"`` to the ``tags`` array since ``\"electronics\"`` already exists in the array:"
msgstr ""

#: ../source/reference/operator/update/addToSet.txt:123
# c3df6ce92e56475a9a431e1afc0b67ac
msgid ":method:`db.collection.update()`, :method:`db.collection.findAndModify()`, :update:`$push`"
msgstr ""

