# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation.txt:8
# fdc493afd0aa4cc79093138a29efab02
msgid "Aggregation Pipeline Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:0
# a6d6ed35d10742f881f81ff269adc0d4
msgid "On this page"
msgstr ""

#: ../source/includes/extracts/operators-toc-explanation.rst:3
# 8c9f41ac409347df9ffe0f204c8d4c75
msgid "For details on specific operator, including syntax and examples, click on the specific operator to go to its reference page."
msgstr ""

#: ../source/reference/operator/aggregation.txt:23
# f25adb5690a54c2eb32cd2fc8891a1a6
msgid "Stage Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:25
# f2b56bfa759d4701afcf0d5c753a827b
msgid "In the :method:`db.collection.aggregate` method, :doc:`pipeline </core/aggregation-pipeline>` stages appear in an array. Documents pass through the stages in sequence."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:2
# d02ebc8ae18a44f6b5861ca67fb1e3a8
msgid "Name"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:2
# 4d48cd8b023b4057a36bd42809387f12
msgid "Description"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:4
# 856e75b192504c03a48ddc5eed498f33
msgid ":pipeline:`$project`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:4
# 2b83cfbedbcc4de28815e58683a1975e
msgid "Reshapes each document in the stream, such as by adding new fields or removing existing fields. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:9
# c514d22acd9d4961ac16fafba9aceb8f
msgid ":pipeline:`$match`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:9
# c4f342310b02444886ebfe93f2ab0001
msgid "Filters the document stream to allow only matching documents to pass unmodified into the next pipeline stage. :pipeline:`$match` uses standard MongoDB queries. For each input document, outputs either one document (a match) or zero documents (no match)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:15
# 7374cbfc6c9b4bab8e2c3fb185eff01b
msgid ":pipeline:`$redact`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:15
# 44a503081bfe41388fbea69f721a6772
msgid "Reshapes each document in the stream by restricting the content for each document based on information stored in the documents themselves. Incorporates the functionality of :pipeline:`$project` and :pipeline:`$match`. Can be used to implement field level redaction. For each input document, outputs either one or zero documents."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:23
# f3c72f8e7ce04324a6e8d7eec6560db2
msgid ":pipeline:`$limit`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:23
# 8038b2b46df448009040e650f369940d
msgid "Passes the first *n* documents unmodified to the pipeline where *n* is the specified limit. For each input document, outputs either one document (for the first *n* documents) or zero documents (after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:29
# 1ef830b34934468588d3bff829ac55fd
msgid ":pipeline:`$skip`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:29
# 8f05b21a49c34a62bf846bda5ffae651
msgid "Skips the first *n* documents where *n* is the specified skip number and passes the remaining documents unmodified to the pipeline. For each input document, outputs either zero documents (for the first *n* documents) or one document (if after the first *n* documents)."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:35
# d0ecc58abb624d8ba746c06d08cf66d4
msgid ":pipeline:`$unwind`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:35
# b668929b5d4346269942d570bfddf868
msgid "Deconstructs an array field from the input documents to output a document for *each* element. Each output document replaces the array with an element value. For each input document, outputs *n* documents where *n* is the number of array elements and can be zero for an empty array."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:42
# 4817b75ca7934b45983e10c3f2370ca4
msgid ":pipeline:`$group`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:42
# 2ce32f190a224c74af6569f3d291d65c
msgid "Groups input documents by a specified identifier expression and applies the accumulator expression(s), if specified, to each group. Consumes all input documents and outputs one document per each distinct group. The output documents only contain the identifier field and, if specified, accumulated fields."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:49
# cf1e90cbcabe4f489325503c193ff1ee
msgid ":pipeline:`$sample`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:49
# 1d95677601864b15861fc5a1f0b55d6d
msgid "Randomly selects the specified number of documents from its input."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:52
# f2fed457d119468a82837320e4f45674
msgid ":pipeline:`$sort`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:52
# 641c72cb373f40918c7f754bb01c9a91
msgid "Reorders the document stream by a specified sort key. Only the order changes; the documents remain unmodified. For each input document, outputs one document."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:57
# 2e45933046b44a4a9c1397461ef38056
msgid ":pipeline:`$geoNear`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:57
# 2a7a9607b6b347cabd360c11a27c8bd7
msgid "Returns an ordered stream of documents based on the proximity to a geospatial point. Incorporates the functionality of :pipeline:`$match`, :pipeline:`$sort`, and :pipeline:`$limit` for geospatial data. The output documents include an additional distance field and can include a location identifier field."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:64
# 31c25a35efd3472ba60fce1611b84ec5
msgid ":pipeline:`$lookup`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:64
# 6a58d1575d0a41ea92ab75627cb8d75d
msgid "Performs a left outer join to another collection in the *same* database to filter in documents from the \"joined\" collection for processing."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:69
# ca46553c65614028b1ab323a3a0c26ef
msgid ":pipeline:`$out`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:69
# 7bf3e523537b47788032a89bc47319fc
msgid "Writes the resulting documents of the aggregation pipeline to a collection. To use the :pipeline:`$out` stage, it must be the last stage in the pipeline."
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:74
# d4ac0ca94e304cdbbb32c71745464e66
msgid ":pipeline:`$indexStats`"
msgstr ""

#: ../source/includes/toc/table-aggregation-pipeline-operator.rst:74
# efdbc4bf5b134ec78ab299dbbcf64e79
msgid "Returns statistics regarding the use of each index for the collection."
msgstr ""

#: ../source/reference/operator/aggregation.txt:50
# 3e58df1fb15a4cad99c17b3ba2742c51
msgid "Expression Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:52
# a6057faaa0a04fbbaccc2f6e200e91d8
msgid "These expression operators are available to construct :ref:`expressions <aggregation-expressions>` for use in the aggregation pipeline."
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:1
# 6520e5974f7e485bb913e0ec7d4d1fd1
msgid "Operator expressions are similar to functions that take arguments. In general, these expressions take an array of arguments and have the following form:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:9
# cf3eb61f52fa4b9fb8c44c12e8667ffd
msgid "If operator accepts a single argument, you can omit the outer array designating the argument list:"
msgstr ""

#: ../source/includes/intro-aggregation-operator-expressions.rst:16
# fabd8881f604412685172ac5a8cefefe
msgid "To avoid parsing ambiguity if the argument is a literal array, you must wrap the literal array in a :expression:`$literal` expression or keep the outer array that designates the argument list."
msgstr ""

#: ../source/reference/operator/aggregation.txt:58
# ef266c644d4b43c3889b2f82bf446975
msgid "Boolean Operators"
msgstr ""

#: ../source/includes/intro-aggregation-boolean.rst:1
# be983b81aaac431fa60b776fbd7ae7c9
msgid "Boolean expressions evaluate their argument expressions as booleans and return a boolean as the result."
msgstr ""

#: ../source/includes/extracts/fact-agg-boolean-intro.rst:1
# 773a2f56b41840969f93e1dd332eb50d
msgid "In addition to the ``false`` boolean value, Boolean expression evaluates as ``false`` the following: ``null``, ``0``, and ``undefined`` values. The Boolean expression evaluates all other values as ``true``, including non-zero numeric values and arrays."
msgstr ""

#: ../source/reference/operator/aggregation.txt:74
# 5acfdab3a2374c72bb34bbfbc89fbbd2
msgid "Set Operators"
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:1
# fe641b5a14e3435d9f9a53cdd11648c8
msgid "Set expressions performs set operation on arrays, treating arrays as sets. Set expressions ignores the duplicate entries in each input array and the order of the elements."
msgstr ""

#: ../source/includes/intro-aggregation-set.rst:5
# b3e82e754eac47acb3d873c058957eec
msgid "If the set operation returns a set, the operation filters out duplicates in the result to output an array that contains only unique entries. The order of the elements in the output array is unspecified."
msgstr ""

#: ../source/includes/extracts/fact-agg-top-level-expressions-setExpression.rst:1
# d5995c5f39564b51ba2e3d3bfa9f074d
msgid "If a set contains a nested array element, the set expression does *not* descend into the nested array but evaluates the array at top-level."
msgstr ""

#: ../source/reference/operator/aggregation.txt:90
# 2f79b342df6e49a8b87bd77ed23d74ee
msgid "Comparison Operators"
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:1
# 748e6516e7af48289a9768b27b01ba49
msgid "Comparison expressions return a boolean except for :expression:`$cmp` which returns a number."
msgstr ""

#: ../source/includes/intro-aggregation-comparison.rst:4
# 351bf5c25a064ea6bb6d04df71be7303
msgid "The comparison expressions take two argument expressions and compare both value and type, using the :ref:`specified BSON comparison order <bson-types-comparison-order>` for values of different types."
msgstr ""

#: ../source/reference/operator/aggregation.txt:106
# 328e038eb06c4beaa59cdb723852736a
msgid "Arithmetic Operators"
msgstr ""

#: ../source/includes/intro-aggregation-arithmetic.rst:1
# 6053b8d5788e441a83a86e9fd162ed0d
msgid "Arithmetic expressions perform mathematic operations on numbers. Some arithmetic expressions can also support date arithmetic."
msgstr ""

#: ../source/reference/operator/aggregation.txt:122
# a8d948810a6448e99ae0a731480ba754
msgid "String Operators"
msgstr ""

#: ../source/includes/intro-aggregation-string.rst:1
# e3221b442f7e4e1583467bf3b2fd7402
msgid "|exp-has| a well-defined behavior for strings of ASCII characters."
msgstr ""

#: ../source/reference/operator/aggregation.txt:129
# 68f7dd42caae4066bbe358318adf0574
msgid ":expression:`$concat` behavior is well-defined regardless of the characters used."
msgstr ""

#: ../source/reference/operator/aggregation.txt:144
# 673e2eebc8a0418b88f4a94520c8d5d9
msgid "Text Search Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:158
# 5113f7118f51451b9ce8ddb974dbabdd
msgid "Array Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:172
# fd43bcd4afee465a97dc74179b8008d0
msgid "Variable Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:186
# a0d6e4d4d756439190d139a5486583da
msgid "Literal Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:200
# 790f1f3dfc3c4c3889c7e840808fba03
msgid "Date Operators"
msgstr ""

#: ../source/reference/operator/aggregation.txt:214
# 3447f3f7e24e4ad789407fc3bfdf2b97
msgid "Conditional Expressions"
msgstr ""

#: ../source/reference/operator/aggregation.txt:230
# ef5f52fca7a7419ab557e463b4accf94
msgid "Accumulators"
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:3
# 53d987000c4346d3a12249599061d53d
msgid "Some accumulators are now available in the :pipeline:`$project` stage. In previous versions of MongoDB , accumulators are available only for the :pipeline:`$group` stage."
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:7
# fde6b6c32eef49279ed41cc9c4d5ff86
msgid "Accumulators, when used in the :pipeline:`$group` stage, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:11
# 057df1c4ef054ac0842a1966aa10be91
msgid "When used in the :pipeline:`$group` stage, accumulators take as input a single expression, evaluating the expression once for each input document, and maintain their stage for the group of documents that share the same group key."
msgstr ""

#: ../source/includes/intro-aggregation-accumulator.rst:16
# c54c1fe4b42943f09c729e43cfb29c81
msgid "When used in the :pipeline:`$project` stage, the accumulators do not maintain their state. When used in the :pipeline:`$project` stage, accumulators take as input either a single argument or multiple arguments."
msgstr ""

