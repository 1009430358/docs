# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/sort.txt:3
# 4468238316e0489c99ff17a03a712324
msgid "$sort (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:0
# 51bf4b955c8541e7965e542d4b10cf02
msgid "On this page"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:14
# ec5028bdea3341adad34c389b9986198
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:18
# fbec708b036f485c8713fc0bfad559f2
msgid "Sorts all input documents and returns them to the pipeline in sorted order."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:21
# 6b16b5c587884926b4b09747cbbc9d1b
msgid "The :pipeline:`$sort` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:27
# 4d0cefced9e04e0494a109c51de5839c
msgid ":pipeline:`$sort` takes a document that specifies the field(s) to sort by and the respective sort order. ``<sort order>`` can have one of the following values:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:31
# 930a160f9b1d4e04a147f0b7ae5d1b84
msgid "``1`` to specify ascending order."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:33
# 25995f6cc5ce4beb8f3203f8a47bd567
msgid "``-1`` to specify descending order."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:35
# 9933a96cae734019af5d0cf0dbf58360
msgid "``{ $meta: \"textScore\" }`` to sort by the computed ``textScore`` metadata in descending order. See :ref:`sort-pipeline-metadata` for an example."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:40
# d2a9bee1d891466fa76ff5a1e26fb507
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:45
# 277f476cef374cc3a3e1c61fc3f67f75
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:47
# f154bd01274941ae92965357620b4053
msgid "For the field or fields to sort by, set the sort order to ``1`` or ``-1`` to specify an ascending or descending sort respectively, as in the following example:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:58
# 7a86b86e4cb745ac8b4125f238f591b6
msgid "This operation sorts the documents in the ``users`` collection, in descending order according by the ``age`` field and then in ascending order according to the value in the ``posts`` field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# b971bd21fd864a07a02cb237c6b429e9
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# 330eb2ea75c646caa07ab1e73eef28de
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
# 025e5be2897b4a0f89934416aeb9c938
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# 5b4808eb713d4733926afa6698418803
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# 4b4942928e254254aba3b8b736f4ac97
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
# 14560a32d91741b58c1da2d98113835e
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
# da788b90e9534800b23535866a35915c
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# 5bf8fcd6722947e7a16df899654db109
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
# 07e1a2fbdf5f4ead987ff3fe03f27655
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
# 93a4924d5119417c90d9cedfaeb7affa
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# 34a2193e1ede4dc58b0cfd284199f730
msgid "Date"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
# 6f4cb62937ab4319838f2c65eedead28
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# 8469523788f540d283b31182e5f7e0cd
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
# 8185d75364bb47e18f26d66c66a31115
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
# ec33fb66f9d046f78b1692b3fe1d2b55
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
# e4e72af50cb8405aacc7c7e4dcf519b2
msgid "Date objects sort before Timestamp objects. Previously Date and Timestamp objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
# 6cc92db62b8d4dc6adea7af771ab6456
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
# b3a84b92d4c84973aba8aff835364339
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
# a8afc7b0a2d44483a1c06edd9ea5bcf5
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
# 1a158a82afa94a41b4273790ddf81d07
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
# 55fc73bba1f44d9c8b9623717f3b003b
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
# b52101abec3f48b9a144f02fb2140d6a
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:67
# 13520c46685342c78326ef2efc9c713b
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:69
# d03e3c099b0e440c8bb17ca430910d6b
msgid "Specify in the ``{ <sort-key> }`` document, a new field name for the computed metadata and specify the :expression:`$meta` expression as its value, as in the following example:"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:82
# 245f7f9eb69949eaac49bd61d4b1b4ac
msgid "This operation uses the :query:`$text` operator to match the documents, and then sorts first by the ``\"textScore\"`` metadata and then by descending order of the ``posts`` field. The specified metadata determines the sort order. For example, the ``\"textScore\"`` metadata sorts in descending order. See :expression:`$meta` for more information on metadata."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:92
# f98be084ce074be085d8730e3722b223
msgid "``$sort`` Operator and Memory"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:97
# b34760c71f38459982b6c063ed5355aa
msgid "``$sort`` + ``$limit`` Memory Optimization"
msgstr ""

#: ../source/includes/fact-agg-sort-limit.rst:1
# b8888636cfe24978982b7d9daa9b7576
msgid "When a :pipeline:`$sort` immediately precedes a :pipeline:`$limit` in the pipeline, the :pipeline:`$sort` operation only maintains the top ``n`` results as it progresses, where ``n`` is the specified limit, and MongoDB only needs to store ``n`` items in memory. This optimization still applies when ``allowDiskUse`` is ``true`` and the ``n`` items exceed the :ref:`aggregation memory limit <agg-memory-restrictions>`."
msgstr ""

#: ../source/includes/fact-agg-sort-limit.rst:8
# fe2867b6df0546f1b4833586bee4ec6a
msgid "Before MongoDB 2.4, :pipeline:`$sort` would sort all the results in memory, and then limit the results to n results."
msgstr ""

#: ../source/includes/fact-optimizations-subject-to-change.rst:1
# 6b4d4b16d564441d95a0c24f405a5a96
msgid "Optimizations are subject to change between releases."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:106
# cbf8d7eab3454fd994cbf84d40974a7e
msgid "``$sort`` and Memory Restrictions"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:108
# f3e2cbe2cd634b028af80895f58072f0
msgid "The :pipeline:`$sort` stage has a limit of 100 megabytes of RAM. By default, if the stage exceeds this limit, :pipeline:`$sort` will produce an error. To allow for the handling of large datasets, set the ``allowDiskUse`` option to ``true`` to enable :pipeline:`$sort` operations to write to temporary files. See the ``allowDiskUse`` option in :method:`db.collection.aggregate()` method and the :dbcommand:`aggregate` command for details."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:116
# 96d4456c0e384f0fadab17dc80129b2f
msgid "The memory limit for :pipeline:`$sort` changed from 10 percent of RAM to 100 megabytes of RAM."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:121
# 9c610ff7ce68451e85fd4b86f8b8a552
msgid "``$sort`` Operator and Performance"
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:123
# 5ec191725c8a4dca810aa7e6639641d5
msgid ":pipeline:`$sort` operator can take advantage of an index when placed at the **beginning** of the pipeline or placed **before** the :pipeline:`$project`, :pipeline:`$unwind`, and :pipeline:`$group` aggregation operators. If :pipeline:`$project`, :pipeline:`$unwind`, or :pipeline:`$group` occur prior to the :pipeline:`$sort` operation, :pipeline:`$sort` cannot use any indexes."
msgstr ""

#: ../source/reference/operator/aggregation/sort.txt:135
# d6ee530daa7e4f1b8c034cae5bf7738a
msgid ":doc:`/tutorial/aggregation-zip-code-data-set`, :doc:`/tutorial/aggregation-with-user-preference-data`"
msgstr ""

