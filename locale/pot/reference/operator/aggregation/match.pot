# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/match.txt:3
# 51d5ccabcb3642b9b3ad5f18337932ae
msgid "$match (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:8
# f8f9d9967c4246d7bfabd1c17ca2f513
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:12
# 5673ef95467e483f8aa1683e12a0ab5c
msgid "Filters the documents to pass only the documents that match the specified condition(s) to the next pipeline stage."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:15
# ab976421ef2945dba8444e9920a6f52d
msgid "The :pipeline:`$match` stage has the following prototype form:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:21
# a00c6e5839b34b57ac645147ce312bd8
msgid ":pipeline:`$match` takes a document that specifies the query conditions. The query syntax is identical to the :ref:`read operation query <read-operations-query-argument>` syntax."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:26
# 6907a78ddcef4dd8a89106438bc4f64f
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:29
# 3eeba05a3853493c8cd197c7ffea77f2
msgid "Pipeline Optimization"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:31
# 62aa4e439a29427bafe68953bddcf0c4
msgid "Place the :pipeline:`$match` as early in the aggregation :term:`pipeline` as possible. Because :pipeline:`$match` limits the total number of documents in the aggregation pipeline, earlier :pipeline:`$match` operations minimize the amount of processing down the pipe."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:37
# 48462c9064834aae8bb9d4aeaa6ea6af
msgid "If you place a :pipeline:`$match` at the very beginning of a pipeline, the query can take advantage of :term:`indexes <index>` like any other :method:`db.collection.find()` or :method:`db.collection.findOne()`."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:43
# ccca74e38cac49479c9b068bae2af85f
msgid "Restrictions"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:45
# fb64117bb7724a76ac7d4e25ce9fee2d
msgid "You cannot use :query:`$where` in :pipeline:`$match` queries as part of the aggregation pipeline."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:48
# 015d2a475d6d4912afd8ff701fea2cc1
msgid "To use :query:`$text` in the :pipeline:`$match` stage, the :pipeline:`$match` stage has to be the first stage of the pipeline."
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:52
# ec27fdcbc2334b3b841cbd842746b981
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:55
# 976f9610750e4c17ab67d1cb81f63832
msgid "Equality Match"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:57
# 1467c4a6239d4427ae649cfb67e72e37
msgid "The following operation uses :pipeline:`$match` to perform a simple equality match:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:66
# feea381724df4fca9a752443ec335847
msgid "The :pipeline:`$match` selects the documents where the ``author`` field equals ``dave``, and the aggregation returns the following:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:89
# 18a71f3e42124dbf8c049e96c870678e
msgid "Perform a Count"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:91
# e6613dc49c8d4927ba60853f62455117
msgid "The following example selects documents to process using the :pipeline:`$match` pipeline operator and then pipes the results to the :pipeline:`$group` pipeline operator to compute a count of the documents:"
msgstr ""

#: ../source/reference/operator/aggregation/match.txt:103
# e2c8715d508a44dfaab440b122131678
msgid "In the aggregation pipeline, :pipeline:`$match` selects the documents where the ``score`` is greater than ``70`` and less than or equal to ``90``. These documents are then piped to the :pipeline:`$group` to perform a count. The aggregation returns the following:"
msgstr ""

