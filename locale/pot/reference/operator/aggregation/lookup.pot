# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/lookup.txt:3
# e0fdcb7f74a84725a67150a8f4a2c334
msgid "$lookup (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:0
# aa433c705ddf4f789717db7f183caa4a
msgid "On this page"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:14
# feb6278045fd47c8866c304b87e77ff8
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:20
# 4fe8e7ce4aec4c0ba193546df26b19a4
msgid "Performs a left outer join to an unsharded collection in the *same* database to filter in documents from the \"joined\" collection for processing. The :pipeline:`$lookup` stage does an equality match between a field from the input documents with a field from the documents of the \"joined\" collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:26
# 651188eaa4ae4dfeb1ef71133ff8d368
msgid "To each input document, the :pipeline:`$lookup` stage adds a new array field whose elements are the matching documents from the \"joined\" collection. The :pipeline:`$lookup` stage passes these reshaped documents to the next stage."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:31
# 9f9adc923dfc4c4cb89770d8a8e51903
msgid "The :pipeline:`$lookup` stage has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:45
# f4806f352f7740949470f388997195a6
msgid "The :pipeline:`$lookup` takes a document with the following fields:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:51
# 5c9833a8dcc246f2a9970e5e7e4d5a92
msgid "Field"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:52
# 088963756e454e0487e462e01a5e3d72
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:54
# 4d66d584cc21424abccbeec0047524ad
msgid "``from``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:56
# 73f3d9d8a5bf43788645c7509957c993
msgid "Specifies the collection in the *same* database to perform the join with. The ``from`` collection cannot be sharded."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:59
# eda7e55cd3cf46a3a53fc40bc62965b4
msgid "``localField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:61
# 7c405b139cee42ddb7462522c4b17bc3
msgid "Specifies the field from the documents input to the :pipeline:`$lookup` stage. :pipeline:`$lookup` performs an equality match on the ``localField`` to the ``foreignField`` from the documents of the ``from`` collection. If an input document does not contain the ``localField``, the :pipeline:`$lookup` treats the field as having a value of ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:69
# a140d8200f294f58bb11d6882eb84484
msgid "``foreignField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:71
# 29825ba6d35c45cb9c4cc7ff8d56f841
msgid "Specifies the field from the documents in the ``from`` collection. :pipeline:`$lookup` performs an equality match on the ``foreignField`` to the ``localField`` from the input documents. If a document in the ``from`` collection does not contain the ``foreignField``, the :pipeline:`$lookup` treats the value as ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:78
# 1c23cb56c44b449683c497218d585d2a
msgid "``as``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:80
# a1969c170b2348a1b50c24e30c5cff13
msgid "Specifies the name of the new array field to add to the input documents. The new array field contains the matching documents from the ``from`` collection. If the specified name already exists in the input document, the existing field is *overwritten*."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:88
# 49b09770eed440e489e08449772ff591
msgid "If your ``localField`` is an array, you'll need to add an :pipeline:`$unwind` stage to your pipeline. See the :ref:`example <unwind-example>` on this page."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:93
# 44244a644663470787d35e4c84134b13
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:96
# 6d04836a85fc48d3bd50d329a6364777
msgid "Perform a Join with ``$lookup``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:98
# bda49ca84b6046a09a8d799773757a3a
msgid "A collection ``orders`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:106
#: ../source/reference/operator/aggregation/lookup.txt:184
# f5917c17dfa04d848024b46f34827473
# 84563c64ac4146c6a994603d083b36df
msgid "Another collection ``inventory`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:117
# 3720a7d43fa840da80ccde61eb1dc270
msgid "The following aggregation operation on the ``orders`` collection joins the documents from ``orders`` with the documents from the ``inventory`` collection using the fields ``item`` from the ``orders`` collection and the ``sku`` field from the ``inventory`` collection:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:137
# ea43712c318b40779658949e4a58e649
msgid "The operation returns the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:170
# 74b7be8077ec455d838d4969f31a898c
msgid "Use ``$lookup`` with an Array"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:172
# c7c6e09e5443425eab85cf39b3f33eba
msgid "If your ``localField`` is an array and you'd like to match the elements inside it against a ``foreignField`` which is a single element, you'll need to :pipeline:`$unwind` the array as one stage of the aggregation pipline."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:177
# 52e8a1e1f3634009a8471dd361853f93
msgid "Consider a collection ``orders`` with the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:195
# 3477772317c742afbb478b1542087b9d
msgid "The following aggregation operation performs a join on documents in the ``orders`` collection which match a particular element of the ``specs`` array to the ``size`` field in the ``inventory`` collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:219
# 137b5cd840e7429abfaf39c402cef58c
msgid "The operation returns the following document:"
msgstr ""

