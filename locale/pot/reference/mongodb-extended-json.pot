# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/mongodb-extended-json.txt:3
# 77ee3c99c35d43ee8c07d52400ec2bd4
msgid "MongoDB Extended JSON"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:0
# 8d5d3ab43bed43dd8aaa2974cbef10c9
msgid "On this page"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:13
# 05e2f2a4dfcd42618768357cf417174e
msgid ":term:`JSON` can only represent a subset of the types supported by :term:`BSON`. To preserve type information, MongoDB adds the following extensions to the JSON format:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:17
# d3493aa6be6643ecab14e7e517d622b9
msgid "*Strict mode*. Strict mode representations of BSON types conform to the `JSON RFC <http://www.json.org>`_. Any JSON parser can parse these strict mode representations as key/value pairs; however, only the MongoDB internal JSON parser recognizes the type information conveyed by the format."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:23
# 7c4553db93644c4d91755cb799b8744d
msgid "``mongo`` *Shell mode*. The MongoDB internal JSON parser and the :program:`mongo` shell can parse this mode."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:26
# ec5eb47b353344a1bac06dfd58dadce8
msgid "The representation used for the various data types depends on the context in which the JSON is parsed."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:30
# c4d12386b83b4127b4c8b0327e8121d7
msgid "Parsers and Supported Format"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:33
# c27ac5f0d14846a3a854f29906ee0786
msgid "Input in Strict Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:35
# 1e35b54a20134dbcb199672bb9ed5722
msgid "The following can parse representations in strict mode *with* recognition of the type information."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:38
#: ../source/reference/mongodb-extended-json.txt:54
# 2b7db165150742e79a7c5867b93ef72e
# aabd6be6d9c84cc1b6f99c31400d6508
msgid ":ecosystem:`REST Interfaces </tools/http-interfaces>`"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:40
#: ../source/reference/mongodb-extended-json.txt:56
# f8e86f52367a42bdb9a46552a6764c13
# 93f8185e2c064b859a389e36279a10b9
msgid ":program:`mongoimport`"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:42
#: ../source/reference/mongodb-extended-json.txt:58
# 0f8589820666486ea71bdfd8c5de57c5
# 12c04a3a5c004ec2ab4169e6845f8412
msgid "``--query`` option of various MongoDB tools"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:44
# 6ffcd74fa05b46828042fdc7088f095d
msgid "Other JSON parsers, including :program:`mongo` shell and :method:`db.eval()`, can parse strict mode representations as key/value pairs, but *without* recognition of the type information."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:49
# 51ba8b953aa54b97a0bcd13ca4953376
msgid "Input in ``mongo`` Shell Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:51
# d63e5bf3994341aa86b3a05ce8d9e0b8
msgid "The following can parse representations in ``mongo`` shell mode *with* recognition of the type information."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:60
# 95399aedb70240f69c24a05cef0debd7
msgid ":program:`mongo` shell"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:63
# d8510b0b00db40c6a69a1d1335d45201
msgid "Output in Strict mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:65
# 4d77d2c9c580414a905fd51cfc54f7dc
msgid ":program:`mongoexport` and :ecosystem:`REST and HTTP Interfaces </tools/http-interfaces>` output data in *Strict mode*."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:69
# 91e6000b8cfb47adba5c372819ba2f14
msgid "Output in ``mongo`` Shell Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:71
# 3dc9125c1d8043249b11eb13d56e9636
msgid ":program:`bsondump` outputs in ``mongo`` *Shell mode*."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:74
# 1a7be4a8e88b455284e1f3cf938cbb05
msgid "BSON Data Types and Associated Representations"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:76
# 38be7218630647aabf61243e39b4bafe
msgid "The following presents the BSON data types and the associated representations in *Strict mode* and ``mongo`` *Shell mode*."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:80
# 9a79016bbef9459fbd447b0c507659a8
msgid "Binary"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:88
#: ../source/reference/mongodb-extended-json.txt:119
#: ../source/reference/mongodb-extended-json.txt:159
#: ../source/reference/mongodb-extended-json.txt:189
#: ../source/reference/mongodb-extended-json.txt:229
#: ../source/reference/mongodb-extended-json.txt:256
#: ../source/reference/mongodb-extended-json.txt:285
#: ../source/reference/mongodb-extended-json.txt:336
#: ../source/reference/mongodb-extended-json.txt:366
#: ../source/reference/mongodb-extended-json.txt:398
# a1a19e6efc594abf98cd5662fa50c4a6
# 7b10f2ae5f294f6383fe53ecedb7cae0
# cd139a69085547a3b239c652e17d1d6e
# 919f281a32ae434fa07112fa56fd5bd4
# cde7b69611834d4da7383542c19ad9b4
# 78595ad6ee3f46aab05a508102bb5d7d
# 1b7680974913455eb3d622a60f447890
# 6cfd84d8ea7f4b8a967f92246db03998
# a669298a78664172aa6923dc8c10584b
# 9a220d7179824f14b5c2b83cc9cfd46c
msgid "Strict Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:92
#: ../source/reference/mongodb-extended-json.txt:123
#: ../source/reference/mongodb-extended-json.txt:163
#: ../source/reference/mongodb-extended-json.txt:193
#: ../source/reference/mongodb-extended-json.txt:233
#: ../source/reference/mongodb-extended-json.txt:260
#: ../source/reference/mongodb-extended-json.txt:289
#: ../source/reference/mongodb-extended-json.txt:340
#: ../source/reference/mongodb-extended-json.txt:370
#: ../source/reference/mongodb-extended-json.txt:402
# 2245417dfa1348238524ffabdf92b14f
# 690db86d6a2344f293cf068aae790e5d
# 59c59be4a27449f6a9b100e397e764f3
# 3753ba0a06e340e59f7a05ab415c9e14
# 0041bba041a54ac6bd9de435ad9e923a
# 9b741caeedd548eb82dbac738bc75853
# 70ff391a8734492296e331c15c903e91
# 5c2dfaf5977f4338becf765df2bfd63f
# d10930b0bf194b43a4423248bf40e7c2
# 0c9e6b52f7504545801900fa9662c7cf
msgid "mongo Shell Mode"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:104
# 4e0fada4565646ff816ec3020fa08571
msgid "``<bindata>`` is the base64 representation of a binary string."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:106
# 63e7707a38404491a11843b150f3fc66
msgid "``<t>`` is a representation of a single byte indicating the data type. In *Strict mode* it is a hexadecimal string, and in *Shell mode* it is an integer. See the extended bson documentation. http://bsonspec.org/spec.html"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:111
# 015381f4db3749ee9e5cdb840cde3cd0
msgid "Date"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:135
# 5725c1bc3edc49c7969d721a0d3fe8a8
msgid "In *Strict mode*, ``<date>`` is an ISO-8601 date format with a mandatory time zone field following the template ``YYYY-MM-DDTHH:mm:ss.mmm<+/-Offset>``."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:138
# 28545fc0c19945b881745c2f67f1446b
msgid "The MongoDB JSON parser currently does not support loading ISO-8601 strings representing dates prior to the :term:`Unix epoch`. When formatting pre-epoch dates and dates past what your system's ``time_t`` type can hold, the following format is used:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:147
# 7a308b63cca5446db02b2da26a8c9ae5
msgid "In *Shell mode*, ``<date>`` is the JSON representation of a 64-bit signed integer giving the number of milliseconds since epoch UTC."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:151
# e5d399f7a7a24f3d93e12e3d265f4e75
msgid "Timestamp"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:175
# e8f2b3cec0b64fed82402a69d71d1e1d
msgid "``<t>`` is the JSON representation of a 32-bit unsigned integer for seconds since epoch."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:178
# 01763bbbfc6c44b4ac50e39d1e1c0dd1
msgid "``<i>`` is a 32-bit unsigned integer for the increment."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:181
# b275b246fd7f47abb86f85124e2b4765
msgid "Regular Expression"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:205
# ed9c8fbe9bd14bb681a2768374d95b15
msgid "``<sRegex>`` is a string of valid JSON characters."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:207
# edf9108ddd5d44adbbe4a859a006da3a
msgid "``<jRegex>`` is a string that may contain valid JSON characters and unescaped double quote (``\"``) characters, but may not contain unescaped forward slash (``/``) characters."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:211
# 5d4e1658d5014f80b9a923f34b31547f
msgid "``<sOptions>`` is a string containing the regex options represented by the letters of the alphabet."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:214
# f0219aefd3c3490e9cb2d74059fde502
msgid "``<jOptions>`` is a string that may contain only the characters 'g', 'i', 'm' and 's' (added in v1.9). Because the ``JavaScript`` and ``mongo Shell`` representations support a limited range of options, any nonconforming options will be dropped when converting to this representation."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:221
# 120366deb70a46c8960961770aca8168
msgid "OID"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:245
# 77e62f2fb4ed45aa9cb199861bc86746
msgid "``<id>`` is a 24-character hexadecimal string."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:248
# f0e381145ea3409887c8e446368d673b
msgid "DB Reference"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:272
# b8fc0ee2b47045718a1e2f18f7ce6313
msgid "``<name>`` is a string of valid JSON characters."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:274
# fc510c4364534efd85dde5befaf7b64f
msgid "``<id>`` is any valid extended JSON type."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:277
# f35ba1015c1c4fe68615a950c6eeeec8
msgid "Undefined Type"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:301
# 406e6a7445694ba999cfc00a0812f05a
msgid "The representation for the JavaScript/BSON undefined type."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:303
# 047ec7978ef54436b16394485838641d
msgid "You *cannot* use ``undefined`` in query documents. Consider the following document inserted into the ``people`` collection:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:310
# ae90407f7149487484b559742ec63605
msgid "The following queries return an error:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:317
# 93f5e7e980ed4826950412158090235b
msgid "However, you can query for undefined values using :query:`$type`, as in:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:324
# 9c765145842e46f38b8d6dc2042cc19d
msgid "This query returns all documents for which the ``age`` field has value ``undefined``."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:328
# 84fa05333c824a9e84d7e6a45e57bb75
msgid "MinKey"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:352
# 6ece5b81ab49483f95752a7ac8b9a506
msgid "The representation of the MinKey BSON data type that compares lower than all other types. See :ref:`faq-dev-compare-order-for-BSON-types` for more information on comparison order for BSON types."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:358
# e7b400aa364e4a3992faf3ba22c86b37
msgid "MaxKey"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:382
# 37e7d2576e09491bbd61149dce3aebf8
msgid "The representation of the MaxKey BSON data type that compares higher than all other types. See :ref:`faq-dev-compare-order-for-BSON-types` for more information on comparison order for BSON types."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:388
# 0a47382024b44a5388437eb0d3581159
msgid "NumberLong"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:414
# 04b555ce2e0845ee96198b9545617c5e
msgid "``NumberLong`` is a 64 bit signed integer. You must include quotation marks or it will be interpreted as a floating point number, resulting in a loss of accuracy."
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:418
# 44f8cb9bea694ae58192dd70d8be2b7a
msgid "For example, the following commands insert ``9223372036854775807`` as a ``NumberLong`` with and without quotation marks around the integer value:"
msgstr ""

#: ../source/reference/mongodb-extended-json.txt:426
# 69d3b0884b4d4ad0b550123361fda701
msgid "When you retrieve the documents, the value of ``longUnquoted`` has changed, while ``longQuoted`` retains its accuracy:"
msgstr ""

