# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/fsync.txt:3
# f0d78c194b424280a6eb36773fdff265
msgid "fsync"
msgstr ""

#: ../source/reference/command/fsync.txt:8
# 8f4eb8b0d7f14656b66bc5b02cbcb2aa
msgid "Definition"
msgstr ""

#: ../source/reference/command/fsync.txt:12
# 73bc941150054ccd971b78ce8b540376
msgid "Forces the :program:`mongod` process to flush all pending writes from the storage layer to disk. Optionally, you can use :dbcommand:`fsync` to lock the :program:`mongod` instance and block write operations for the purpose of capturing backups."
msgstr ""

#: ../source/reference/command/fsync.txt:17
# acb752da607d4ae4a255f30a35e13692
msgid "As applications write data, MongoDB records the data in the storage layer and then writes the data to disk within the :setting:`~storage.syncPeriodSecs` interval, which is 60 seconds by default. Run :dbcommand:`fsync` when you want to flush writes to disk ahead of that interval."
msgstr ""

#: ../source/reference/command/fsync.txt:22
# 788d838aebfa4e9f8b4377036b3d83d8
msgid "The :dbcommand:`fsync` command has the following syntax:"
msgstr ""

#: ../source/reference/command/fsync.txt:28
# 98d1266fd5bf4a1e8d26fc5f76346e68
msgid "The :dbcommand:`fsync` command has the following fields:"
msgstr ""

#: ../source/reference/command/fsync.txt:33
# c366846a468d46d1bf1ae4f2076bbf1b
msgid "Considerations"
msgstr ""

#: ../source/reference/command/fsync.txt:36
# 71f6c49d073c4ebda3da0d010fdf037b
msgid "Wired Tiger Compatibility"
msgstr ""

#: ../source/includes/extracts/wt-fsync-lock-compatibility-command.rst:1
#: ../source/includes/extracts/wt-fsync-lock-compatibility-command.rst:1
# 9e800b963cad4d288d4fbaae46619117
# 95b3cdf36c1d45d88f740890a4e2f142
msgid "With WiredTiger, the :dbcommand:`fsync` command with the ``lock`` option *cannot* guarantee that the data files do not change. As a result, do not use these methods to ensure consistency for the purposes of creating backups."
msgstr ""

#: ../source/reference/command/fsync.txt:43
# 3c596fa9d8da48eca3482f6ddb8410ec
msgid "Impact on Larger Deployments"
msgstr ""

#: ../source/reference/command/fsync.txt:45
# 4b6aad9f55a54734952f5dd6e6473141
msgid "An :dbcommand:`fsync` lock is only possible on *individual* :program:`mongod` instances of a sharded cluster, not on the entire cluster. To backup an entire sharded cluster, please see :doc:`/administration/backup-sharded-clusters` for more information."
msgstr ""

#: ../source/reference/command/fsync.txt:52
# 394cd6311e2645c4b92e40a7e40fb55a
msgid "Alternatives with Journaling"
msgstr ""

#: ../source/reference/command/fsync.txt:54
# 44c0dacf1a3f4df4949cbcd25fdf09e6
msgid "If your :program:`mongod` has :term:`journaling <journal>` enabled, consider using :ref:`another method <backup-with-journaling>` to create a back up of the data set."
msgstr ""

#: ../source/reference/command/fsync.txt:59
# 11fc4f0137fa4f808eafc3c2c839444b
msgid "Impact on Read Operations"
msgstr ""

#: ../source/reference/command/fsync.txt:61
# 7078140f10094201a0a50b4572781275
msgid "After :dbcommand:`fsync`, with lock, runs on a :program:`mongod`, all write operations will block until a subsequent unlock. Read operations *may* also block. As a result, :dbcommand:`fsync`, with lock, is not a reliable mechanism for making a :program:`mongod` instance operate in a read-only mode."
msgstr ""

#: ../source/reference/command/fsync.txt:69
# b028ef10ed2e4a86b5695721045ce30c
msgid "Blocked read operations prevent verification of authentication. Such reads are necessary to establish new connections to a :program:`mongod` that enforces authorization checks."
msgstr ""

#: ../source/reference/command/fsync.txt:75
# a92b7e5c222c492c927e704a990c97bb
msgid "When calling :dbcommand:`fsync` with lock, ensure that the connection remains open to allow a subsequent call to :method:`db.fsyncUnlock()`."
msgstr ""

#: ../source/reference/command/fsync.txt:78
# 27aafeb907fb42c1a334db5da1271def
msgid "Closing the connection may make it difficult to release the lock."
msgstr ""

#: ../source/reference/command/fsync.txt:81
# 44335af59f244cef8d562e07caa54f11
msgid "Examples"
msgstr ""

#: ../source/reference/command/fsync.txt:84
# fc0e6b0fcebf4a008f9b78f1abefd245
msgid "Run Asynchronously"
msgstr ""

#: ../source/reference/command/fsync.txt:86
# 22b83faf4bd948d58dd1c1634e2f9a7c
msgid "The :dbcommand:`fsync` operation is synchronous by default To run :dbcommand:`fsync` asynchronously, use the ``async`` field set to ``true``:"
msgstr ""

#: ../source/reference/command/fsync.txt:94
# 9ebc1b027e1c4a41a0f5caf488691543
msgid "The operation returns immediately. To view the status of the :dbcommand:`fsync` operation, check the output of :method:`db.currentOp()`."
msgstr ""

#: ../source/reference/command/fsync.txt:99
# 42df0f76e07845da961028c769db0a7d
msgid "Lock ``mongod`` Instance"
msgstr ""

#: ../source/reference/command/fsync.txt:105
# e58d4af7c00243ac9d2b7349fad10442
msgid "The primary use of :dbcommand:`fsync` is to lock the :program:`mongod` instance in order to back up the files within :program:`mongod`\\ 's :setting:`~storage.dbPath`. The operation flushes all data to the storage layer and blocks all write operations until you unlock the :program:`mongod` instance."
msgstr ""

#: ../source/reference/command/fsync.txt:110
# aaeb2de791824d079e553c67327cdea3
msgid "To lock the database, use the ``lock`` field set to ``true``:"
msgstr ""

#: ../source/reference/command/fsync.txt:116
# 6801a6288b194592b537d662c7ccaa6e
msgid "You may continue to perform read operations on a :program:`mongod` instance that has a :dbcommand:`fsync` lock. However, after the first write operation all subsequent read operations wait until you unlock the :program:`mongod` instance."
msgstr ""

#: ../source/reference/command/fsync.txt:121
# 3293a2f0f25b4e1e8f9eaa3ad039ea04
msgid "Unlock ``mongod`` Instance"
msgstr ""

#: ../source/reference/command/fsync.txt:123
# 1f057a70d3e84363997b175480e581af
msgid "To unlock the :program:`mongod`, use :method:`db.fsyncUnlock()`:"
msgstr ""

#: ../source/reference/command/fsync.txt:131
# 66c1c31b0806404f92096aea044c49a6
msgid "Check Lock Status"
msgstr ""

#: ../source/reference/command/fsync.txt:133
# eba9f45e9b1f4b859200efe3448b26ba
msgid "To check the state of the fsync lock, use :method:`db.currentOp()`. Use the following JavaScript function in the shell to test if :program:`mongod` instance is currently locked:"
msgstr ""

#: ../source/reference/command/fsync.txt:147
# 104d6ae7f2cd44e8b5eab795b1d66493
msgid "After loading this function into your :program:`mongo` shell session call it, with the following syntax:"
msgstr ""

#: ../source/reference/command/fsync.txt:154
# e84175b0e82b4ebb814ace5676315f0a
msgid "This function will return ``true`` if the :program:`mongod` instance is currently locked and ``false`` if the :program:`mongod` is not locked."
msgstr ""

