# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/group.txt:3
# c81aae666de04949887dcdeab1e02a6e
msgid "group"
msgstr ""

#: ../source/reference/command/group.txt:0
# 77677c1af8ff4c30865df86117d431a2
msgid "On this page"
msgstr ""

#: ../source/reference/command/group.txt:14
# dd258bf69bbc48f081393cbe83b0b2af
msgid "Definition"
msgstr ""

#: ../source/includes/extracts/admonition-group-command-alternative.rst:2
# ec1e6aaa7edc48178216923781916273
msgid "Because :dbcommand:`group` uses JavaScript, it is subject to a number of performance limitations. For most cases the :pipeline:`$group` operator in the :doc:`aggregation pipeline </core/aggregation-pipeline>` provides a suitable alternative with fewer restrictions."
msgstr ""

#: ../source/reference/command/group.txt:20
# 77e6494431434a5dbb27982253876a7f
msgid "Groups documents in a collection by the specified key and performs simple aggregation functions, such as computing counts and sums. The command is analogous to a ``SELECT <...> GROUP BY`` statement in SQL. The command returns a document with the grouped records as well as the command meta-data."
msgstr ""

#: ../source/reference/command/group.txt:26
# a3044b4221ba44859430afa6c035394f
msgid "The :dbcommand:`group` command takes the following prototype form:"
msgstr ""

#: ../source/reference/command/group.txt:43
# a2134217c61f44f49736bc26c3ea6b3d
msgid "The command accepts a document with the following fields:"
msgstr ""

#: ../source/reference/command/group.txt:49
# 21910bfdd1784f29b00a6e2453e7021c
msgid "For the shell, MongoDB provides a wrapper method :method:`db.collection.group()`. However, the :method:`db.collection.group()` method takes the ``keyf`` field and the ``reduce`` field whereas the :dbcommand:`group` command takes the ``$keyf`` field and the ``$reduce`` field."
msgstr ""

#: ../source/reference/command/group.txt:56
# 99d54a44eb534805baa0b2a6b8a52397
msgid "Behavior"
msgstr ""

#: ../source/reference/command/group.txt:59
# 50f916b62c484a01b18de06983076887
msgid "Limits and Restrictions"
msgstr ""

#: ../source/reference/command/group.txt:61
# 4d0ebfb28e8b41378a51c9f608600496
msgid "The :dbcommand:`group` command does not work with :term:`sharded clusters <sharded cluster>`. Use the :term:`aggregation framework` or :term:`map-reduce` in :term:`sharded environments <sharding>`."
msgstr ""

#: ../source/reference/command/group.txt:65
# 0ced672e60304b1d8f3dd5adf05ff56a
msgid "The result set must fit within the :ref:`maximum BSON document size <limit-bson-document-size>`."
msgstr ""

#: ../source/reference/command/group.txt:68
# 259c835ac2d34ae88a43d377cba733d4
msgid "Additionally, in version 2.2, the returned array can contain at most 20,000 elements; i.e. at most 20,000 unique groupings. For group by operations that results in more than 20,000 unique groupings, use :dbcommand:`mapReduce`. Previous versions had a limit of 10,000 elements."
msgstr ""

#: ../source/reference/command/group.txt:74
# 9c91e82835044e20a84fb4b017fd6c47
msgid "Prior to 2.4, the :dbcommand:`group` command took the :program:`mongod` instance's JavaScript lock which blocked all other JavaScript execution."
msgstr ""

#: ../source/reference/command/group.txt:78
# 1a6fb25995cf4257bade7212d54724bb
msgid "``mongo`` Shell JavaScript Functions/Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# 7aedafbb52bb48b1b70415993bf16b33
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# d89067e3c753460a82b568ec3702c5c1
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# 586fe99b9d6a4fe6bdcec958c9b1d527
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# 3e81b2a0dcca4ec7a68334e9a48ab81e
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# 8e0aaa14164d4ca8b8ca30e89fe62c69
msgid "Available Functions"
msgstr ""

#: ../source/reference/command/group.txt:0
# 6ce34cba37f943049975341f8e2bc837
msgid "``args``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 45c41f39df834190920415dd990f6e39
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 151653896c454db4ab2d83e61ab248c6
msgid "``MinKey``"
msgstr ""

#: ../source/reference/command/group.txt:0
# d52e46ae04024d04b28f9bfa9298aeb2
msgid "``assert()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 11bcd4f77f344e3fac0f8785291b2f5a
msgid "``BinData()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 23a237b9334440c5aa543ba6280c90f3
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# b29628795550477b97f06f62b8fdff35
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 954ef0a54537452d934fac79e9b4c963
msgid "``doassert()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# a30dc4b36ad94e4c8f11bcd2f8e5a9e6
msgid "``emit()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 74338a0319924e78b4a271b5b42b1169
msgid "``gc()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# db7514b0b82c4f55934f2a07d885bbe9
msgid "``HexData()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 8da9a563a22f45a884188a29eee208bd
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 90e10b8ed5a142b185fc51fc052c3cc8
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 602ed5224a1349e4830ce3ea6e603f07
msgid "``isObject()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 95d07727d3a14285aedb578692e832ed
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# cb22acc91acd4db387fb48727948e945
msgid "``isString()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 0221b9e0455e40e9a4031fdbd3e1d09b
msgid "``Map()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 46578650fc524540b1250ce04b436db2
msgid "``MD5()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# c6365bdbe91e4a32bc3361e8dde04745
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 9b1976f97bab45229e2eb663ee65c988
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# b2607e5690c24f0bb553252468b6ece3
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 9683aceaa65a4070a189d6411d8997db
msgid "``print()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 5250f02da00d47599c0c8b84c6eb23e4
msgid "``printjson()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 1935158ed916405293044ae5b1f6b916
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 02be48a8a5a34ac1b46c62f36e2ac72f
msgid "``sleep()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# ebfa2672d2fc41689a5d8fbc88418463
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 8a23ea570ec24b25b57827cbcbf3488a
msgid "``tojson()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 4f1f36220af2490988b9cf33e6de0b51
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 3d3903c0f9214b219c42c70e6f734d2b
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 68f163fa425349db84f21c1d326e9ba9
msgid "``UUID()``"
msgstr ""

#: ../source/reference/command/group.txt:0
# 03c36caa1f7d42f1915ada8b5ce94df3
msgid "``version()``"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-group.rst:3
# 1c9b88bd287342128a18c3368319510b
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-group.rst:5
# a9e63991ad0d4d0b8f1c4da3b0c9bfff
msgid "Although :dbcommand:`group` uses JavaScript, most interactions with MongoDB do not use JavaScript but use an :doc:`idiomatic driver </applications/drivers>` in the language of the interacting application."
msgstr ""

#: ../source/reference/command/group.txt:87
# e70113538ffc48989a8a5e856aaa2ff1
msgid "Examples"
msgstr ""

#: ../source/reference/command/group.txt:89
# c08c6403cbae44c0a6f0937f69a7341f
msgid "The following are examples of the :method:`db.collection.group()` method. The examples assume an ``orders`` collection with documents of the following prototype:"
msgstr ""

#: ../source/reference/command/group.txt:109
# 70a139308b5f4b0a85dc0fc7753cfb20
msgid "Group by Two Fields"
msgstr ""

#: ../source/reference/command/group.txt:111
# 0e5450e6a741493f8f6cae5121ff55ef
msgid "The following example groups by the ``ord_dt`` and ``item.sku`` fields those documents that have ``ord_dt`` greater than ``01/01/2012``:"
msgstr ""

#: ../source/reference/command/group.txt:130
# 712d76996071427599068b02dc59025b
msgid "The result is a document that contain the ``retval`` field which contains the group by records, the ``count`` field which contains the total number of documents grouped, the ``keys`` field which contains the number of unique groupings (i.e. number of elements in the ``retval``), and the ``ok`` field which contains the command status:"
msgstr ""

#: ../source/reference/command/group.txt:157
#: ../source/reference/command/group.txt:213
# 276444e0e0ff4f13be5c2c6cbcfef6c0
# 0ac162f06b8141a39096fb8bb042b9a8
msgid "The method call is analogous to the SQL statement:"
msgstr ""

#: ../source/reference/command/group.txt:167
# 7ea58bc98e1142dc8e87015ce426d8db
msgid "Calculate the Sum"
msgstr ""

#: ../source/reference/command/group.txt:169
# 5f8975be99b24bf2b135c5b65989c35e
msgid "The following example groups by the ``ord_dt`` and ``item.sku`` fields those documents that have ``ord_dt`` greater than ``01/01/2012`` and calculates the sum of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:190
#: ../source/reference/command/group.txt:259
# 11f320b42b7a4a6cbaf9957904a192f7
# f0c389436a2447fab7d535da0f7a7500
msgid "The ``retval`` field of the returned document is an array of documents that contain the group by fields and the calculated aggregation field:"
msgstr ""

#: ../source/reference/command/group.txt:223
# bdc00c4ec3b247e7ac618062ad9e4418
msgid "Calculate Sum, Count, and Average"
msgstr ""

#: ../source/reference/command/group.txt:225
# a2c5950444de42d98c91c9b21eaeb420
msgid "The following example groups by the calculated ``day_of_week`` field, those documents that have ``ord_dt`` greater than ``01/01/2012`` and calculates the sum, count, and average of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:277
# a61766c383374a969cd9102b0c905b56
msgid ":doc:`/core/aggregation-pipeline`"
msgstr ""

