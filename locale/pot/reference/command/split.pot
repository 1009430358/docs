# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/split.txt:3
# cd86baff11dc42328f2615122afa9083
msgid "split"
msgstr ""

#: ../source/reference/command/split.txt:8
# 3c6089c1a0a14abb9b9eadf5531b50c0
msgid "Definition"
msgstr ""

#: ../source/reference/command/split.txt:12
# 9415dd2ab8604be88c868ac9241a788b
msgid "Splits a :term:`chunk` in a :term:`sharded cluster` into two chunks. The :program:`mongos` instance splits and manages chunks automatically, but for exceptional circumstances the :dbcommand:`split` command does allow administrators to manually create splits. See :doc:`/tutorial/split-chunks-in-sharded-cluster` for information on these circumstances, and on the MongoDB shell commands that wrap :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:20
# 3f609a2370064785952d4ba70d84a491
msgid "The :dbcommand:`split` command uses the following form:"
msgstr ""

#: ../source/reference/command/split.txt:27
# 946b8eac2a784dcf95642ea570e6e72a
msgid "The :dbcommand:`split` command takes a document with the following fields:"
msgstr ""

#: ../source/reference/command/split.txt:33
# 325f3ffbff334c25ab0b85942f069889
msgid "Considerations"
msgstr ""

#: ../source/reference/command/split.txt:35
# a11d3548829a4206bbf0d445820b7fc9
msgid "When used with either the ``find`` or the ``bounds`` option, the :dbcommand:`split` command splits the chunk along the median. As such, the command cannot use the ``find`` or the ``bounds`` option to split an empty chunk since an empty chunk has no median."
msgstr ""

#: ../source/reference/command/split.txt:40
# e91d531709ee49d2b9eb5b0d167e9b15
msgid "To create splits in empty chunks, use either the ``middle`` option with the :dbcommand:`split` command or use the :dbcommand:`splitAt` command."
msgstr ""

#: ../source/reference/command/split.txt:44
# a770752a2d6b4d0e871e5594a12d5157
msgid "Command Formats"
msgstr ""

#: ../source/reference/command/split.txt:46
# 4d04985bf8de4125b59d21191fa25fd9
msgid "To create a chunk split, connect to a :program:`mongos` instance, and issue the following command to the ``admin`` database:"
msgstr ""

#: ../source/reference/command/split.txt:54
#: ../source/reference/command/split.txt:61
# cb383b65487f42838db87bf7cfae52d2
# 0a33c8ee597b4d1581a8b57d62c049c4
msgid "Or:"
msgstr ""

#: ../source/reference/command/split.txt:68
# 2579addea25e44f28f5f8a5ec0c35e78
msgid "To create a split for a collection that uses a :term:`hashed shard key`, use the ``bounds`` parameter. Do *not* use the ``middle`` parameter for this purpose."
msgstr ""

#: ../source/includes/warning-splitting-chunks.rst:3
# e6164a07de3b4e0ab9179db22f8d7db3
msgid "Be careful when splitting data in a sharded collection to create new chunks. When you shard a collection that has existing data, MongoDB automatically creates chunks to evenly distribute the collection. To split data effectively in a sharded cluster you must consider the number of documents in a chunk and the average document size to create a uniform chunk size. When chunks have irregular sizes, shards may have an equal number of chunks but have very different data sizes. Avoid creating splits that lead to a collection with differently sized chunks."
msgstr ""

#: ../source/reference/command/split.txt:74
# 1b24332505574436bcd542146b9ef9d8
msgid ":dbcommand:`moveChunk`, :method:`sh.moveChunk()`, :method:`sh.splitAt()`, and :method:`sh.splitFind()`, which wrap the functionality of :dbcommand:`split`."
msgstr ""

#: ../source/reference/command/split.txt:79
# fe2a842fbe33490ea4c4e9976caaa211
msgid "Examples"
msgstr ""

#: ../source/reference/command/split.txt:81
# d22de95c5d5f4d879ca89b4699217e57
msgid "The following sections provide examples of the :dbcommand:`split` command."
msgstr ""

#: ../source/reference/command/split.txt:84
# 4d69e7091d664964b8835c2a7e7b75e4
msgid "Split a Chunk in Half"
msgstr ""

#: ../source/reference/command/split.txt:90
# 3e92bdba46584219b822235c38426286
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that holds documents that match ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks of equal size."
msgstr ""

#: ../source/reference/command/split.txt:96
# 6923a6ac227549d094c222ac0510271a
msgid ":dbcommand:`split` creates two equal chunks by range as opposed to size, and does not use the selected point as a boundary for the new chunks"
msgstr ""

#: ../source/reference/command/split.txt:101
# 906dae523e274a559fd684bad9ee7322
msgid "Define an Arbitrary Split Point"
msgstr ""

#: ../source/reference/command/split.txt:103
# 9ad11f6230d24a4a83662774d139c754
msgid "To define an arbitrary split point, use the following form:"
msgstr ""

#: ../source/reference/command/split.txt:109
# 6a383194e8e94bd3974a3acb74c98550
msgid "The :dbcommand:`split` command identifies the chunk in the ``people`` collection of the ``test`` database, that would hold documents matching the query ``{ _id : 99 }``. :dbcommand:`split` does not require that a match exist, in order to identify the appropriate chunk. Then the command splits it into two chunks, with the matching document as the lower bound of one of the split chunks."
msgstr ""

#: ../source/reference/command/split.txt:116
# 5a2ebf487e6f4550bbc6cf58b876ce89
msgid "This form is typically used when :term:`pre-splitting` data in a collection."
msgstr ""

#: ../source/reference/command/split.txt:120
# b593a92e6a1542d3a77a33a4dff98425
msgid "Split a Chunk Using Values of a Hashed Shard Key"
msgstr ""

#: ../source/reference/command/split.txt:122
# bee67e8ae5994766b8f6468d96ed9f4d
msgid "This example uses the :term:`hashed shard key` ``userid`` in a ``people`` collection of a ``test`` database. The following command uses an array holding two single-field documents to represent the minimum and maximum values of the hashed shard key to split the chunk:"
msgstr ""

#: ../source/reference/command/split.txt:134
# 00806681697e406ba5f3f43719ca92f1
msgid "MongoDB uses the 64-bit :ref:`NumberLong <shell-type-long>` type to represent the hashed value."
msgstr ""

#: ../source/reference/command/split.txt:137
# b21c39d923be4ea78f0d90ef0a30c30c
msgid "Use :method:`sh.status()` to see the existing bounds of the shard keys."
msgstr ""

#: ../source/reference/command/split.txt:140
# 8a925da3eeac47b4918a1b15d38d8dcd
msgid "Metadata Lock Error"
msgstr ""

#: ../source/reference/command/split.txt:142
# df2099780b28457cb726fd89f1c68696
msgid "If another process in the :program:`mongos`, such as a balancer process, changes metadata while :dbcommand:`split` is running, you may see a ``metadata lock error``."
msgstr ""

#: ../source/reference/command/split.txt:150
# aeb10f9aa9d54c3e8d7dd7193f059031
msgid "This message indicates that the split has failed with no side effects. Retry the :dbcommand:`split` command."
msgstr ""

