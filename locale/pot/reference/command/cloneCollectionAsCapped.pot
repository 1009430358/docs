# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/cloneCollectionAsCapped.txt:3
# 763baa2b2f08475e9bf48fb8637adda4
msgid "cloneCollectionAsCapped"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:0
# 50bf488f89c24806ba2197c48397cc3b
msgid "On this page"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:14
# bbd514c64f7c4f24b411fb76908d34f5
msgid "Definition"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:18
# fe8bcf555078402e896ae5b2b710c264
msgid "The :dbcommand:`cloneCollectionAsCapped` command creates a new :term:`capped collection` from an existing, non-capped collection within the same database. The operation does not affect the original non-capped collection."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:23
# 42e2e4add3fb487796ad0948cbfd9671
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:29
# a10cff282efe42479b5ae21bebd2dcd0
msgid "The command copies an ``existing collection`` and creates a new ``capped collection`` with a maximum size specified by the ``capped size`` in bytes."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:33
# 0a3362666ce6439982aea3e7a0ad1bb3
msgid "The name of the new capped collection must be distinct and cannot be the same as that of the original existing collection."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:37
# 8ce7138fc09f4a84b4b4d192177433c5
msgid "To replace the original non-capped collection with a capped collection, use the :dbcommand:`convertToCapped` command."
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:41
# c01ed729f8184d70813dd000f0340f93
msgid "Behavior"
msgstr ""

#: ../source/reference/command/cloneCollectionAsCapped.txt:43
# 28243763f65848f5a21893223cd128a1
msgid "If the ``capped size`` is less than the size of the source collection, then not all documents in the source collection will exist in the destination capped collection."
msgstr ""

