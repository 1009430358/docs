# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/repairDatabase.txt:3
# 38b72cc6306b482a9beab5c87c7d6a98
msgid "repairDatabase"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:8
# a7537cf9960b4403b9d4606d83d1921b
msgid "Definition"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:12
# a7b7ed2a09e24e01853c58bcd45661e2
msgid "Checks and repairs errors and inconsistencies in data storage. :dbcommand:`repairDatabase` is analogous to a ``fsck`` command for file systems. Run the :dbcommand:`repairDatabase` command to ensure data integrity after the system experiences an unexpected system restart or crash, if:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:18
# ad4e6539709e4941802621ed7c02be69
msgid "The :program:`mongod` instance is not running with :term:`journaling <journal>` enabled."
msgstr ""

#: ../source/includes/note-repair.rst:1
# fc1ce3cf62144bfd9dac85113597e7d4
msgid "When using :term:`journaling <journal>`, there is almost never any need to run :dbcommand:`repairDatabase`. In the event of an unclean shutdown, the server will be able to restore the data files to a pristine state automatically."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:23
# 91617f778bf34779a076f45b57b7b922
msgid "There are *no* other intact :term:`replica set` members with a complete data set."
msgstr ""

#: ../source/includes/warning-repair.rst:3
# b1829b6bdfc8467d9723578f5475acb4
msgid "During normal operations, only use the :dbcommand:`repairDatabase` command and wrappers including :method:`db.repairDatabase()` in the :program:`mongo` shell and :option:`mongod --repair`, to compact database files and/or reclaim disk space. Be aware that these operations remove and do not save any corrupt data during the repair process."
msgstr ""

#: ../source/includes/warning-repair.rst:10
# 8fd9ab460e8a45ed8957e6d579f0c225
msgid "If you are trying to repair a :term:`replica set` member, and you have access to an intact copy of your data (e.g. a recent backup or an intact member of the :term:`replica set`), you should restore from that intact copy, and **not** use :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:28
# 1797fa72604a46cfa56b08b0482b01ff
msgid ":dbcommand:`repairDatabase` takes the following form:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:34
# e39a77328762485e809b0771b7cb15c5
msgid ":dbcommand:`repairDatabase` has the following fields:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:38
# bc78ed339ff14e8f921af3b4e421a1ff
msgid "You can explicitly set the options as follows:"
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# dbdf64a85ed94d86b3e52edcf25ed8e4
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:48
# 25e5eebff7374535895360093da090e6
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. When mounting a separate volume for :dbcommand:`repairDatabase` you must run :dbcommand:`repairDatabase` from the command line and use the :option:`--repairpath <mongod --repairpath>` switch to specify the folder in which to store temporary repair files."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:58
# 4b42ea85fe5148c89e76bc6331f27863
msgid "See :option:`mongod --repair` and :option:`mongodump --repair` for information on these related options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:62
# 08d7c38dddbe4986a4e6f1fa60ddbdfb
msgid "Behavior"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:66
# 3c3737b18bb84b089086863bbc67c716
msgid "The :dbcommand:`repairDatabase` command is now available for secondary as well as primary members of replica sets."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:69
# 25bf8d000971483a90db091f588919f3
msgid "The :dbcommand:`repairDatabase` command compacts all collections in the database. It is identical to running the :dbcommand:`compact` command on each collection individually."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:73
# d899ba7aafe7462189f57ca172e5033a
msgid ":dbcommand:`repairDatabase` reduces the total size of the data files on disk. It also recreates all indexes in the database."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:76
# 0a741a9e3201410eb1e4fa3c12e08835
msgid "The time requirement for :dbcommand:`repairDatabase` depends on the size of the data set."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:79
# 245cdff952a24ebda2f25fda8f26f8e0
msgid "You may invoke :dbcommand:`repairDatabase` from multiple contexts:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:81
# f006c7b18573418b967b0501c4699878
msgid "Use the :program:`mongo` shell to run the command, as above."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:83
# 8b48af5eccc14f74afa1f20574cea197
msgid "Use the :method:`db.repairDatabase()` in the :program:`mongo` shell."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:86
# 6d83f0b80b18458794c0617d353f0dc5
msgid "Run :program:`mongod` directly from your system's shell. Make sure that :program:`mongod` isn't already running, and that you invoke :program:`mongod` as a user that has access to MongoDB's data files. Run as:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:95
# baee4ee57ec247f2a6481eb3f49fb714
msgid "To add a repair path:"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:101
# c3bdef1d88224f2cab2501f7031bf504
msgid "See :setting:`~storage.repairPath` for more information."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:105
# 89aa0d928b23415bac91a6c7f68085fc
msgid ":option:`mongod --repair <mongod --repair>` will fail if your database is not a master or primary. In most cases, you should recover a corrupt secondary using the data from an existing intact node. To run repair on a secondary/slave restart the instance in standalone mode without the :option:`--replSet <mongod --replSet>` or :option:`--slave <mongod --slave>` options."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:113
# ecf98f1332b3446aafe580ecc750df52
msgid "Example"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:120
# 55d7a64e0f6b443086ae4b7a888b8115
msgid "Using ``repairDatabase`` to Reclaim Disk Space"
msgstr ""

#: ../source/reference/command/repairDatabase.txt:122
# 844242f5806f460fb7046b5269dab692
msgid "You should not use :dbcommand:`repairDatabase` for data recovery unless you have no other option."
msgstr ""

#: ../source/reference/command/repairDatabase.txt:125
# a90aecb9b7a84f4b8b20d3dadbdfeafa
msgid "However, if you trust that there is no corruption and you have enough free space, then :dbcommand:`repairDatabase` is the appropriate and the only way to reclaim disk space."
msgstr ""

