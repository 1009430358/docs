# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/compact.txt:5
# 82e482524e704f1c963f32b3f56b4e90
msgid "compact"
msgstr ""

#: ../source/reference/command/compact.txt:10
# 06f0cf5b2f5043ecab3b2bf098bec2a7
msgid "Definition"
msgstr ""

#: ../source/reference/command/compact.txt:16
# 5b8a8fe9d27d47e3bebf99574fed5bc1
msgid "Rewrites and defragments all data in a collection, as well as all of the indexes on that collection. :dbcommand:`compact` has the following form:"
msgstr ""

#: ../source/reference/command/compact.txt:24
# fe6f8adb388d4705a9da604ebda89bc9
msgid ":dbcommand:`compact` has the following fields:"
msgstr ""

#: ../source/reference/command/compact.txt:28
# f580f2d0572c4823aee1cfe297a82f21
msgid ":dbcommand:`compact` is similar to :dbcommand:`repairDatabase`; however, :dbcommand:`repairDatabase` operates on an entire database."
msgstr ""

#: ../source/reference/command/compact.txt:32
# 824fe09f34e5487c8a6194d1cad7f341
msgid "Always have an up-to-date backup before performing server maintenance such as the :dbcommand:`compact` operation."
msgstr ""

#: ../source/reference/command/compact.txt:38
# 89145934f6574574b33ffb4662615796
msgid "paddingFactor"
msgstr ""

#: ../source/reference/command/compact.txt:44
# 46634fd5de144e418438e138f647edf8
msgid "Applicable for the MMAPv1 storage engine only; specifying ``paddingFactor`` has no effect when used with the WiredTiger storage engine."
msgstr ""

#: ../source/reference/command/compact.txt:48
# 770eebdd07f940899c8e517fb7276853
msgid "The ``paddingFactor`` field takes the following range of values:"
msgstr ""

#: ../source/reference/command/compact.txt:50
# 490e08efaf4a444b95a55a9ff2c1cb17
msgid "Default: ``1.0``"
msgstr ""

#: ../source/reference/command/compact.txt:52
# 05ae18e950444f0ca3370b553620405f
msgid "Minimum: ``1.0`` (no padding)"
msgstr ""

#: ../source/reference/command/compact.txt:54
# 2a23d9bddf3c4a39af088643e2340c88
msgid "Maximum: ``4.0``"
msgstr ""

#: ../source/reference/command/compact.txt:56
# 34464d6bbbb6479db3f417ed6d6bdc9e
msgid "If your updates increase the size of the documents, padding will increase the amount of space allocated to each document and avoid expensive document relocation operations within the data files."
msgstr ""

#: ../source/reference/command/compact.txt:60
# 9b869b93d9db4734b1294104133e67f1
msgid "You can calculate the padding size by subtracting the document size from the record size or, in terms of the ``paddingFactor``, by subtracting ``1`` from the ``paddingFactor``:"
msgstr ""

#: ../source/reference/command/compact.txt:68
# d10bf712e9a54ed4b46f3637ad9560ff
msgid "For example, a ``paddingFactor`` of ``1.0`` specifies a padding size of ``0`` whereas a ``paddingFactor`` of ``1.2`` specifies a padding size of ``0.2`` or 20 percent (20%) of the document size."
msgstr ""

#: ../source/reference/command/compact.txt:72
# 095fbcd57110423b93b0b74cbb745ea8
msgid "With the following command, you can use the ``paddingFactor`` option of the :dbcommand:`compact` command to set the record size to ``1.1`` of the document size, or a padding factor of 10 percent (10%):"
msgstr ""

#: ../source/reference/command/compact.txt:80
# 650319961955482ca592a96edb6c14ff
msgid ":dbcommand:`compact` compacts existing documents but does not reset ``paddingFactor`` statistics for the collection. After the :dbcommand:`compact` MongoDB will use the existing ``paddingFactor`` when allocating new records for documents in this collection."
msgstr ""

#: ../source/reference/command/compact.txt:88
# 260807b0d8f84af1a991fb75a26d528c
msgid "paddingBytes"
msgstr ""

#: ../source/reference/command/compact.txt:94
# 8cbef7b422354db492b2a41ee35be63f
msgid "Applicable for the MMAPv1 storage engine only; specifying ``paddingBytes`` has no effect when used with the WiredTiger storage engine."
msgstr ""

#: ../source/reference/command/compact.txt:98
# 5680bca9f4cc4ed6950efb812dbcef32
msgid "Specifying ``paddingBytes`` can be useful if your documents start small but then increase in size significantly. For example, if your documents are initially 40 bytes long and you grow them by 1KB, using ``paddingBytes: 1024`` might be reasonable since using ``paddingFactor: 4.0`` would specify a record size of 160 bytes (``4.0`` times the initial document size), which would only provide a padding of 120 bytes (i.e. record size of 160 bytes minus the document size)."
msgstr ""

#: ../source/reference/command/compact.txt:106
# 9acf681999004cd49d3c3bf055bbcf4e
msgid "With the following command, you can use the ``paddingBytes`` option of the :dbcommand:`compact` command to set the padding size to ``100`` bytes on the collection named by ``<collection>``:"
msgstr ""

#: ../source/reference/command/compact.txt:115
# cc5a0c2defc24bb4947d821db28d977e
msgid "Behaviors"
msgstr ""

#: ../source/reference/command/compact.txt:118
# a3cf0d3944d44205872ea052b26ee94b
msgid "Blocking"
msgstr ""

#: ../source/reference/command/compact.txt:120
# 0dd92ffbaf1b48688a30c65d8fcb575e
msgid "In MongoDB 2.2, :dbcommand:`compact` blocks activities only for its database. Prior to 2.2, the command blocked all activities."
msgstr ""

#: ../source/reference/command/compact.txt:123
# c48bdb3f7e4d49789b99ee5f3332efea
msgid "You may view the intermediate progress either by viewing the :program:`mongod` log file or by running the :method:`db.currentOp()` in another shell instance."
msgstr ""

#: ../source/reference/command/compact.txt:128
# 6eb82ee36def43f5aeb510b83641af4d
msgid "Operation Termination"
msgstr ""

#: ../source/reference/command/compact.txt:130
# fceb5e8c7d7f42e080ea15401580b9a1
msgid "If you terminate the operation with the :method:`db.killOp() <db.killOp()>` method or restart the server before the :dbcommand:`compact` operation has finished:"
msgstr ""

#: ../source/reference/command/compact.txt:134
# 069b9322886947da9112ecb4095b96c8
msgid "If you have journaling enabled, the data remains valid and usable, regardless of the state of the :dbcommand:`compact` operation. You may have to manually rebuild the indexes."
msgstr ""

#: ../source/reference/command/compact.txt:138
# b005eb7eb1634b42bf1de7561eed222a
msgid "If you do not have journaling enabled and the :program:`mongod` or :dbcommand:`compact` terminates during the operation, it is impossible to guarantee that the data is in a valid state."
msgstr ""

#: ../source/reference/command/compact.txt:142
# 4b4717a545f14c258ff40394e7da3110
msgid "In either case, much of the existing free space in the collection may become un-reusable. In this scenario, you should rerun the compaction to completion to restore the use of this free space."
msgstr ""

#: ../source/reference/command/compact.txt:147
# f6edccb3398f4e2a870aab14f896bc96
msgid "Disk Space"
msgstr ""

#: ../source/reference/command/compact.txt:149
# 85707587dce849438186bdf05fecf886
msgid ":dbcommand:`compact` generally uses less disk space than :dbcommand:`repairDatabase` and is faster. However, the :dbcommand:`compact` command is still slow and blocks other database use. Only use :dbcommand:`compact` during scheduled maintenance periods."
msgstr ""

#: ../source/reference/command/compact.txt:154
# fa4a8a12c6b5416890681ab92df6f2ba
msgid ":dbcommand:`compact` requires up to 2 gigabytes of additional disk space while running. Unlike :dbcommand:`repairDatabase`, :dbcommand:`compact` does *not* free space on the file system."
msgstr ""

#: ../source/reference/command/compact.txt:158
# 9ae0bf834da247588338fe87320f0dea
msgid "To see how the storage space changes for the collection, run the :dbcommand:`collStats` command before and after compaction."
msgstr ""

#: ../source/reference/command/compact.txt:162
# 9257b4c53fde423b99b3b902004a7d5d
msgid "Size and Number of Data Files"
msgstr ""

#: ../source/reference/command/compact.txt:164
# ffc28eada4c741588711bca8cc87d8be
msgid ":dbcommand:`compact` may increase the total size and number of your data files, especially when run for the first time. However, this will not increase the total collection storage space since storage size is the amount of data allocated within the database files, and not the size/number of the files on the file system."
msgstr ""

#: ../source/reference/command/compact.txt:171
# 60d1bb338d4c49c4b63151ef1228077a
msgid "Replica Sets"
msgstr ""

#: ../source/reference/command/compact.txt:173
# 4682bcc109584308a3b824a824409792
msgid ":dbcommand:`compact` commands do not replicate to secondaries in a :term:`replica set`:"
msgstr ""

#: ../source/reference/command/compact.txt:176
# 9677954b747549d9bbbbf2be885928b5
msgid "Compact each member separately."
msgstr ""

#: ../source/reference/command/compact.txt:178
# 5ace1aa57a0d4cc4ae0a313765ac2d64
msgid "Ideally run :dbcommand:`compact` on a secondary. See option ``force:true`` above for information regarding compacting the primary."
msgstr ""

#: ../source/includes/extracts/fact-command-puts-secondary-into-recovering-compact.rst:3
# c0205166000744209039938b1b35f846
msgid "On secondaries, the  command forces the secondary to enter :replstate:`RECOVERING` state. Read operations issued to an instance in the :replstate:`RECOVERING` state will fail.  This prevents clients from reading during the operation. When the operation completes, the secondary returns to :replstate:`SECONDARY` state."
msgstr ""

#: ../source/includes/extracts/fact-command-puts-secondary-into-recovering-compact.rst:10
# 46c2a65c6ac04554825b34b2690ea9c2
msgid "See :doc:`/reference/replica-states/` for more information about replica set member states."
msgstr ""

#: ../source/includes/extracts/fact-command-puts-secondary-into-recovering-compact.rst:13
# a0805a20a7a84509abfd705816d31a74
msgid "See :doc:`/tutorial/perform-maintence-on-replica-set-members` for an example replica set maintenance procedure to maximize availability during maintenance operations."
msgstr ""

#: ../source/reference/command/compact.txt:184
# b8b805c432af4027b5b627b041123c65
msgid "Sharded Clusters"
msgstr ""

#: ../source/reference/command/compact.txt:186
# ef466fbbc5f34d35b37536b0ea53a3a3
msgid ":dbcommand:`compact` is a command issued to a :program:`mongod`. In a sharded environment, run :dbcommand:`compact` on each shard separately as a maintenance operation."
msgstr ""

#: ../source/reference/command/compact.txt:190
# 141e520603d546e988a85022429a5086
msgid "You cannot issue :dbcommand:`compact` against a :program:`mongos` instance."
msgstr ""

#: ../source/reference/command/compact.txt:193
# b116b599173945409896fc7f18352f84
msgid "Capped Collections"
msgstr ""

#: ../source/reference/command/compact.txt:195
# dd9f1af51af8483ba8a11cf3fcbff5a3
msgid "It is not possible to compact :term:`capped collections <capped collection>` because they don't have padding, and documents cannot grow in these collections. However, the documents of a :term:`capped collection` are not subject to fragmentation."
msgstr ""

#: ../source/reference/command/compact.txt:201
# 4c7182359c684e4183eef8086d8753b3
msgid "Index Building"
msgstr ""

#: ../source/reference/command/compact.txt:205
# 2eb527104d9e444ba482094c29ec20c1
msgid ":program:`mongod` rebuilds all indexes in parallel following the :dbcommand:`compact` operation."
msgstr ""

