# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
# 6ecda54b40914474b0783e42f827831a
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:12
# e8fb40c15dc14d3c8377e0368b5e08e3
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:16
# ffac9e00a7044439bb2a3c619e5eb64e
msgid "Modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option. The :method:`~db.collection.findAndModify()` method is a shell helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:23
# ccdfdeaa34d44cf9867681d0b0038685
msgid "The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:38
# 33d46ebfd2e14b95bd76f96e46795002
msgid "The :method:`db.collection.findAndModify()` method takes a document parameter with the following embedded document fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:46
# cd9af5de602f4a81a6ec1d8d8e6d41c4
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:48
# 096b40c50d284ce9ba55cc5891d35dfa
msgid "The :method:`~db.collection.findAndModify()` method returns either: the pre-modification document or, if ``new: true`` is set, the modified document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:54
# 2d633b9c361b46d39bc4f84555226469
msgid "If the query finds no document for ``update`` or ``remove`` operations, :method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:58
# ac4a81b47dd14f58bebde78fda872867
msgid "If the query finds no document for an ``update`` with an ``upsert`` operation, :method:`~db.collection.findAndModify()` creates a new document. If ``new`` is ``false``, **and** the ``sort`` option is **NOT** specified, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:63
# 12986608f5ca4483a2095b976a634f23
msgid "If the query finds no document for an ``update`` with an ``upsert`` operation, :method:`~db.collection.findAndModify()` creates a new document. If ``new`` is ``false``, **and** a ``sort`` option, the method returns an empty document ``{}``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:69
# db2d7f82001f42278dbfddf007a82b54
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:74
# b2e8722c0c994f3c9fb1e3ed4d61d88c
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:76
# 3fc446fd79414b90bb9051820da0801c
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:80
# 3d8531d7789c453d9780a72244c69e65
msgid "In the following example, no document with the name ``Andy`` exists, and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:92
# 4cbc94f3d8ec4beca6e9ed74a93ba4e6
msgid "Then, if these clients' :method:`~db.collection.findAndModify()` methods finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert, creating multiple duplicate documents."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:98
# 6e079ce54f3a4ad9b28a3c093d9b679c
msgid "To prevent the creation of multiple duplicate documents, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With the unique index in place, the multiple methods will exhibit one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:103
# 3c98e020fb804c0c836df1bba290cfab
msgid "Exactly one :method:`~db.collection.findAndModify()` successfully inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:106
# 6a911f24cf73490ea7b90096bb9087b0
msgid "Zero or more :method:`~db.collection.findAndModify()` methods update the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:109
# ea020e8d81254444bf0507640b5e2777
msgid "Zero or more :method:`~db.collection.findAndModify()` methods fail when they attempt to insert a duplicate. If the method fails due to a unique index constraint violation, you can retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:116
# dba9c6be249f4c208b1777006726b74e
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:118
# 00f1db821407444bb619279f5dc365bb
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` **must** contain the :term:`shard key` for all operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:122
# cfd76a082ff6491a8e28cfc798f0b946
msgid ":dbcommand:`findAndModify` operations issued against :program:`mongos` instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:128
# 12754f35f0fb4df99443abec0a1ced65
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# 65995b35992044099c644cab084a8e7f
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# 4e8fba809a5a49a08f43ed1eb998da4d
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# bb1c1100a8da49608ae61080828dbcba
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# 01c7209bd9d84aad9f2347118705d918
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# 1189734df4b8458383f98e3bc71157e8
msgid "By default, |operation| method returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# f3f02cdf80a14b2ba2fb9b6354c2c3e9
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# 37e6c0dcec684e6faae9538b517e841e
msgid "You cannot specify a :doc:`write concern </core/write-concern>` to |operation| to override the default write concern whereas, starting in MongoDB 2.6, you can specify a write concern to the :method:`~db.collection.update()` method."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:32
# d916868ebc2e4487989e797b0af1ea81
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/core/write-operations-atomicity` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:136
# 53b4eff227424e7d8175c726d3061d6f
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:139
# dae3bf93e1ff45d1a8a0aec4f8d7f946
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:141
# 541679a9b6d04b37a26ce275615e2bf2
msgid "The following method updates and returns an existing document in the people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:152
# 447a2c1b9fca475f97b042321bb3ca85
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:154
# 01845679719a45d3ad3b482a1526eb5c
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:159
# e8cb3cba39c447f88038731f95e6dd8e
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the method will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:164
# bf1ab0d850b6418585a1124b2350710e
msgid "The update :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:167
# 440e4411b0354ce4896d075a61f9ea17
msgid "The method returns the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:180
# 1e56f0c2c67041e7a6b5c59f2af8ec8a
msgid "To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:183
# 26a4b322affb423c98794c0801d4ad27
msgid "If no document matched the ``query`` condition, the method returns ``null``:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:191
# 3213722f2ad642a4b6d8d1dac3fdfaf7
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:193
# 066c1424b0684df296555d1e230d0206
msgid "The following method includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:207
# 1ddf8441e6ec4ae4b1e8bd766c40c319
msgid "If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:209
# 5a31f0687b694fd39d968e5b8ae755ce
msgid "If the method does **not** find a matching document, the method creates a new document. Because the method included the ``sort`` option, it returns an empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:218
# 5e9909f90dce4cc584d105d16b108818
msgid "If the method did **not** include a ``sort`` option, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:226
# 3eb5fd5bc03942da8030b474bbdeb2b8
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:228
# c3eff93e7a5b4f83ab0ba18e4cf5d543
msgid "The following method includes both the ``upsert: true`` option and the ``new:true`` option. The method either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:234
# 9610bebe475340cf9d560a3605c75455
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:247
# 383896c13ed641e4a524e593ed8b0081
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:262
# f1e14c69737c4ff1b1028dcf8190c562
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:264
# 8738eeba8a44436fbfc09ccd3cc172c2
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:279
# 7645e255e0f64a74bffd39b0a82e889e
msgid "The method returns the deleted document:"
msgstr ""

