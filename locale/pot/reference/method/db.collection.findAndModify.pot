# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.findAndModify.txt:3
# f656d401efd34aa59a8ca60ad0c862e5
msgid "db.collection.findAndModify()"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:0
# e7e6badc6fe14d3683148a327e7a0d7e
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:18
# dab41917bd654fcfb1856121130a83ae
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:22
# d3f6b458c3424d56b5f04bb8a70c64e0
msgid "Modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the ``new`` option. The :method:`~db.collection.findAndModify()` method is a shell helper around the :dbcommand:`findAndModify` command."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:29
# cbdd0213095449539ea0bada115a2b45
msgid "The :method:`~db.collection.findAndModify()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:46
# 2db2a1b585454e13b7b13f90ccf6b6a6
msgid "The :method:`db.collection.findAndModify()` method takes a document parameter with the following embedded document fields:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:54
# 3a92c181256f43608a053807070c063d
msgid "Return Data"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:56
# 2df5f758514141b78068286d02dc9b5d
msgid "For remove operations, if the query matches a document, :method:`~db.collection.findAndModify()` returns the removed document. If the query does not match a document to remove, :method:`~db.collection.findAndModify()` returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:61
# f737012c695d435a92a5c615a13e1839
msgid "For update operations, :method:`~db.collection.findAndModify()` returns one of the following:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:1
# 00b16e9d68f444988de2b5c14d7c956a
msgid "If the ``new`` parameter is not set or is ``false``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:3
# 843db44903704246a4042463476307b8
msgid "the pre-modification document if the query matches a document;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:5
#: ../source/includes/extracts/fact-findandmodify-method-return.rst:13
# 31d5e901c1ba4fd3a5beb158bbd3c887
# 47948cdf43f54214997df839672287fa
msgid "otherwise, ``null``."
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:7
# 0380784929484173bf9afaba37a45d45
msgid "If ``new`` is ``true``:"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:9
# 548b57bc32a14c0e82b244ac1449a1cc
msgid "the modified document if the query returns a match;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:11
# 3375f050bab9420796fabbb988387162
msgid "the inserted document if ``upsert: true`` and no document matches the query;"
msgstr ""

#: ../source/includes/extracts/fact-findandmodify-method-return.rst:17
# 92341a6e688a4bbcaa345c9ae496d3c1
msgid "In previous versions, if for the update, ``sort`` is specified, and ``upsert: true``, and the ``new`` option is not set or ``new: false``, :method:`db.collection.findAndModify()` returns an empty document ``{}`` instead of ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:67
# 5ea17934ae8a4bc0986e1a56c2366d60
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:72
# 81962ae87cef4214a387d3c811ddf3b1
msgid "Upsert and Unique Index"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:74
# 0d5f91fc0d784643b43303dc7630655e
msgid "When :method:`~db.collection.findAndModify()` includes the ``upsert: true`` option **and** the query field(s) is not uniquely indexed, the method could insert a document multiple times in certain circumstances."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:78
# 9af110eca441438f92cbf766e9bace60
msgid "In the following example, no document with the name ``Andy`` exists, and multiple clients issue the following command:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:90
# f1bd68141f41453697a3b4d2e1bc8b59
msgid "Then, if these clients' :method:`~db.collection.findAndModify()` methods finish the ``query`` phase before any command starts the ``modify`` phase, **and** there is no unique index on the ``name`` field, the commands may all perform an upsert, creating multiple duplicate documents."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:96
# 12242e21bf88466dba21f75d0aaba028
msgid "To prevent the creation of multiple duplicate documents with the same name, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With this unique index in place, the multiple methods will exhibit one of the following behaviors:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:101
# 6f3bc4786a9d43b7bc8c38b82105df12
msgid "Exactly one :method:`~db.collection.findAndModify()` successfully inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:104
# b62bb05f1004496da61317768237e1fb
msgid "Zero or more :method:`~db.collection.findAndModify()` methods update the newly inserted document."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:107
# e5bbfe3cfca5476e8ea7d39976e93b3e
msgid "Zero or more :method:`~db.collection.findAndModify()` methods fail when they attempt to insert documents with the same name. If the method fails due to the unique index constraint violation on the ``name`` field, you can retry the method. Absent a delete of the document, the retry should not fail."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:114
# a29ad6ba6e784350b7490edaa1c69195
msgid "Sharded Collections"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:116
# b72e423aa35540d6a156eac114cd44c2
msgid "When using :dbcommand:`findAndModify` in a :term:`sharded <sharding>` environment, the ``query`` **must** contain the :term:`shard key` for all operations against the shard cluster for the *sharded* collections."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:120
# 0d1f36f44fc84defa02cfe634cabfb88
msgid ":dbcommand:`findAndModify` operations issued against :program:`mongos` instances for *non-sharded* collections function normally."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:124
# 857476a6cd0c40fa91a373c68f2a7c1e
msgid "Document Validation"
msgstr ""

#: ../source/includes/extracts/bypassDocumentValidation-db.collection.findAndModify.rst:1
# 28d174ae4e494937ac7ae536448d5905
msgid "The :method:`db.collection.findAndModify()` method adds support for the ``bypassDocumentValidation`` option, which lets you bypass :ref:`document validation <3.2-rel-notes-document-validation>` when inserting or updating documents in a collection with validation rules."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:131
# 40b9c1f385eb49a28f3a1dda544eace5
msgid "Comparisons with the ``update`` Method"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:1
# f27891b348404e65afc444d663c40f05
msgid "When updating a document, |operation| and the :method:`~db.collection.update()` method operate differently:"
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:4
# e85c7af2998343f89d84fc478b16bdd9
msgid "By default, both operations modify a single document. However, the :method:`~db.collection.update()` method with its ``multi`` option can modify more than one document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:8
# a57159590aa34ebaa7fabfa900099d1e
msgid "If multiple documents match the update criteria, for |operation|, you can specify a ``sort`` to provide some measure of control on which document to update."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:12
# 38a0f7ed990e4e84995f84b7bcecf399
msgid "With the default behavior of the :method:`~db.collection.update()` method, you cannot specify which single document to update when multiple documents match."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:16
# 8afe65eebd844ef2b49b72b8193dcdf5
msgid "By default, |operation| returns |return-object|. To obtain the updated document, use the ``new`` option."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:19
# 54f992e30f8044a49bcba19341555f9c
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. To return the updated document, use the :method:`~db.collection.find()` method. However, other updates may have modified the document between your update and the document retrieval. Also, if the update modified only a single document but multiple documents matched, you will need to use additional logic to identify the updated document."
msgstr ""

#: ../source/includes/fact-findAndModify-update-comparison.rst:27
# 1a04bae0f281408e8e7545e95aacae50
msgid "When modifying a *single* document, both |operation| and the :method:`~db.collection.update()` method *atomically* update the document. See :doc:`/core/write-operations-atomicity` for more details about interactions and order of operations of these methods."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:139
# 3b361c41db3d423c8eca24d58630caa8
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:142
# 320a37102f4a4387a563c349fa755da6
msgid "Update and Return"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:144
# d67f90549e874c4fbc952a04eeb1c366
msgid "The following method updates and returns an existing document in the people collection where the document matches the query criteria:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:155
# 91a4be2d2d6747cd85c11834fc053443
msgid "This method performs the following actions:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:157
# e7fd064521904abaaebaa51d961e8504
msgid "The ``query`` finds a document in the ``people`` collection where the ``name`` field has the value ``Tom``, the ``state`` field has the value ``active`` and the ``rating`` field has a value :operator:`greater than <$gt>` 10."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:162
# 71f0b4b80dcd48bcae521440f4439b06
msgid "The ``sort`` orders the results of the query in ascending order. If multiple documents meet the ``query`` condition, the method will select for modification the first document as ordered by this ``sort``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:167
# 483fc6c4f5c0405e8da5e0091ee5834a
msgid "The update :operator:`increments <$inc>` the value of the ``score`` field by 1."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:170
# 8f06eb580225424b9731664de1748092
msgid "The method returns the original (i.e. pre-modification) document selected for this update:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:183
# e750a670cde94f91a05aa1e88efb7167
msgid "To return the modified document, add the ``new:true`` option to the method."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:186
# 42a03d946d6149af957bbef000301d19
msgid "If no document matched the ``query`` condition, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:190
# d58c073a891f47eca6b32736d4587470
msgid "Upsert"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:192
# 9378a0f8b3884af1b50f8044fcaff30e
msgid "The following method includes the ``upsert: true`` option for the ``update`` operation to either update a matching document or, if no matching document exists, create a new document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:206
# 3f414098b8554df0b43d1c5c9413f09f
msgid "If the method finds a matching document, the method performs an update."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:208
# af80a5cd44f949acbbb4bd270c0c3610
msgid "If the method does **not** find a matching document, the method creates a new document. Because the method included the ``sort`` option, it returns an empty document ``{ }`` as the original (pre-modification) document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:217
# d490049274e64f11bc870fbbe04c90ac
msgid "If the method did **not** include a ``sort`` option, the method returns ``null``."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:225
# e991e4fdad834c7984d5242d0d7818a1
msgid "Return New Document"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:227
# 6fd83b23b6564d44b470b22d5573ae16
msgid "The following method includes both the ``upsert: true`` option and the ``new:true`` option. The method either updates a matching document and returns the updated document or, if no matching document exists, inserts a document and returns the newly inserted document in the ``value`` field."
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:233
# 2d453dadf71b49dfb620a3c911526184
msgid "In the following example, no document in the ``people`` collection matches the ``query`` condition:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:246
# f5ad7d951ca742b7b4b6fdd4e829e016
msgid "The method returns the newly inserted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:261
# 781494e9651a4930a48beb9fb68f5a6e
msgid "Sort and Remove"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:263
# 2ed9ec5be78e4b07a00d571285a7d26c
msgid "By including a ``sort`` specification on the ``rating`` field, the following example removes from the ``people`` collection a single document with the ``state`` value of ``active`` and the lowest ``rating`` among the matching documents:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:278
# cc54dc26fe4142a9a1627cf93b1f21a0
msgid "The method returns the deleted document:"
msgstr ""

#: ../source/reference/method/db.collection.findAndModify.txt:290
# c2e42a13d9734320988d6212a68250bb
msgid ":doc:`/tutorial/perform-findAndModify-quorum-reads`"
msgstr ""

