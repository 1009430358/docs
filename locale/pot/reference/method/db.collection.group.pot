# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.group.txt:3
# a587afa310564faab16b0fbf68f4d4c1
msgid "db.collection.group()"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 8ce1cabc0f1f4bd8a1cb805e2e88047f
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:14
# 44a9285629aa490a982feb8423a00bd4
msgid "Definition"
msgstr ""

#: ../source/includes/extracts/admonition-group-method-alternative.rst:2
# fcfe9cd4c2ab4787ab52644c0eb99e79
msgid "Because :method:`db.collection.group()` uses JavaScript, it is subject to a number of performance limitations. For most cases the :pipeline:`$group` operator in the :doc:`aggregation pipeline </core/aggregation-pipeline>` provides a suitable alternative with fewer restrictions."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:20
# 9cc1689583a84f0a98475e1153b778f0
msgid "Groups documents in a collection by the specified keys and performs simple aggregation functions such as computing counts and sums. The method is analogous to a ``SELECT <...> GROUP BY`` statement in SQL. The :method:`~db.collection.group()` method returns an array."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:26
# 433a2e7d464b4f88b0c0d1e4503c817a
msgid "The :method:`db.collection.group()` accepts a single :term:`document` that contains the following:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:33
# 2ebc470242c040aa8e1a43a9d98ff9c6
msgid "The :method:`db.collection.group()` method is a shell wrapper for the :dbcommand:`group` command. However, the :method:`db.collection.group()` method takes the ``keyf`` field and the ``reduce`` field whereas the :dbcommand:`group` command takes the ``$keyf`` field and the ``$reduce`` field."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:40
# fa96db5b7c5645fe8e16182a84906da8
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:43
# 1a66ce00593f435695ae73db59dab0d0
msgid "Limits and Restrictions"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:45
# bec56c4124854f189d68823a310dc43f
msgid "The :method:`db.collection.group()` method does not work with :term:`sharded clusters <sharded cluster>`. Use the :term:`aggregation framework` or :term:`map-reduce` in :term:`sharded environments <sharding>`."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:50
# c519cb4f031149fab32a5ddf67aae247
msgid "The result set must fit within the :ref:`maximum BSON document size <limit-bson-document-size>`."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:53
# b310db885d03469ca6b53c353d1f35e8
msgid "In version 2.2, the returned array can contain at most 20,000 elements; i.e. at most 20,000 unique groupings. For group by operations that results in more than 20,000 unique groupings, use :dbcommand:`mapReduce`. Previous versions had a limit of 10,000 elements."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:59
# 00cd3c2b69824dee91b1853f6f6e073d
msgid "Prior to 2.4, the :method:`db.collection.group()` method took the :program:`mongod` instance's JavaScript lock, which blocked all other JavaScript execution."
msgstr ""

#: ../source/reference/method/db.collection.group.txt:64
# e32b4e7d0ba7476e88a0a51a41098c0d
msgid "``mongo`` Shell JavaScript Functions/Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
# 3ee61829b872437b8a094ac954424a2f
msgid "In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions **cannot** access certain global functions or properties, such as ``db``, that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
# 0c989a37c0a64792b0b6f8843dd1aa01
msgid "When upgrading to MongoDB 2.4, you will need to refactor your code if your :dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands, or :query:`$where` operator expressions include any global shell functions or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
# 6480e3ec25ad4054840bccaf68775aa3
msgid "The following JavaScript functions and properties **are available** to :dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
# a7739b0fea4944b3ac76d9575c6d1f01
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
# feedd88e579c4f948820f4dcfdb62d98
msgid "Available Functions"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 1c8b9ca7d54045d5b11839e38ccd4a21
msgid "``args``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 055919fe6d7d48bb9f1f0b5119228d18
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# edb60304f2e24406a6bc16fa7e3790df
msgid "``MinKey``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 8d28bf3ca942465abd881adaddbf8cfb
msgid "``assert()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# fd01d0a735d54103a1418e433b695b50
msgid "``BinData()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 163574426769470890e8bc0666c84448
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 74433c3564804985b2caf68eca963ef6
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# ab55f58f521342dd8233b420576b0f71
msgid "``doassert()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# afd918e1e2484320b504ad26286e8204
msgid "``emit()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 0ad3a5bad0fc42acaeb725af2e951bde
msgid "``gc()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# aed282f3fa1747de82303e490a3f2aaa
msgid "``HexData()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# adc448c6bdac45b4a58009be41daacb2
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 93be3a1c0e244543a6899208f29ba4d1
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 38807b86ffaa41fc92e74705f5352463
msgid "``isObject()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 1c952bf3daa142ffbf37c142adce5450
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 49cca08d8a8b4e29880fb757f9cd9052
msgid "``isString()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 507b6dda67384bb2b7113f2e68e5b6dc
msgid "``Map()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 7c2979ff5a8344769c46b761d9c8bd6b
msgid "``MD5()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# f28adfbf61c344a89b0433abdfd577f2
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 3299fd50b85042e3b504582baf06405a
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 93220b0b20e44f969326657024f01c77
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# fde6da7437804bbdb9fdb9b257397005
msgid "``print()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 69c1714a8fb6411cbe990bc1d829d6aa
msgid "``printjson()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 7e0610d2c9f94f9d895d31b939c090fe
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# ac67f2a314cd403195d9142e9ff9869c
msgid "``sleep()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 756db60b26724969be7524acd2974add
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# e64a41bc38c04bbd851e1c7482dcfe00
msgid "``tojson()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# d605716f8aff48b09d7d2addd2c24162
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 03f63e2818454c9389844b798dc629aa
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 7f1cbdb43d83449b9e614d77ae682f1e
msgid "``UUID()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:0
# 5754d29bf6904e38a0e37caa5e055f92
msgid "``version()``"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:71
# d3c6612150074209aab980590856a8a5
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:73
# 46170ea9ed6a4541b7b6a240a44de92c
msgid "The following examples assume an ``orders`` collection with documents of the following prototype:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:89
# 97aa284dff764f52afc0be55663727b6
msgid "Group by Two Fields"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:91
# 05db36a04d1e43a284c609fb2f842fbf
msgid "The following example groups by the ``ord_dt`` and ``item.sku`` fields those documents that have ``ord_dt`` greater than ``01/01/2011``:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:106
# 37a00a335d7241c38778a9daa5457f93
msgid "The result is an array of documents that contain the group by fields:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:124
#: ../source/reference/method/db.collection.group.txt:171
# dadc8998afc24776bc11d9247763b710
# 95d3bcdb4b584485a9241025b6181ea6
msgid "The method call is analogous to the SQL statement:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:134
# 4b7cd28f18d34688bc424937d4085a47
msgid "Calculate the Sum"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:136
# 3c814783aeb54feea647375f98d931cc
msgid "The following example groups by the ``ord_dt`` and ``item.sku`` fields, those documents that have ``ord_dt`` greater than ``01/01/2011`` and calculates the sum of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:154
#: ../source/reference/method/db.collection.group.txt:214
# 7dd56e057c104c0eba264d6ebb3aefec
# 1ed694ea9bfc41249a3dc07fc388f530
msgid "The result is an array of documents that contain the group by fields and the calculated aggregation field:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:182
# b3986a3ded764ac7a1ea4b82e91fa681
msgid "Calculate Sum, Count, and Average"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:184
# 138ab91fc4324f2f84a06eee3f98ebcb
msgid "The following example groups by the calculated ``day_of_week`` field, those documents that have ``ord_dt`` greater than ``01/01/2011`` and calculates the sum, count, and average of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/method/db.collection.group.txt:225
# eebc27590ecf4f15afdf94d793e4a302
msgid ":doc:`/aggregation`"
msgstr ""

