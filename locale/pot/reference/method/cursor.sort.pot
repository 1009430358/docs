# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.sort.txt:3
# d3e7de7ecd714ed19ffe5fec855ecb20
msgid "cursor.sort()"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:0
# 257c2240e8da452797680f5d33845757
msgid "On this page"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:14
# f9a326adcd0e46eca5e5250444186e8f
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:18
# 659a999b7ea54d849d936645a7d94b2a
msgid "Specifies the order in which the query returns matching documents. You must apply :method:`~cursor.sort()` to the cursor before retrieving any documents from the database."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:22
# 44702d4303a749ff9c66d7147f1b3955
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:26
# 8fd3777ea67f454e8db330cf9733edf8
msgid "The ``sort`` parameter contains field and value pairs, in the following form:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:33
# aaca761d964b4f0cab916d0a93cc6950
msgid "The sort document can specify :ref:`ascending or descending sort on existing fields <sort-asc-desc>` or :ref:`sort on computed metadata <sort-metadata>`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:38
# e1d3bdbea41246bb838758e925de7cc4
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:41
# ce99c856a8ac45be887e2aad2878617a
msgid "Result Ordering"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:43
# 53aebf7893e64a838b50d99d1f131bc8
msgid "Unless you specify the :method:`~cursor.sort()` method or use the :query:`$near` operator, MongoDB does **not** guarantee the order of query results."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:50
# f43a0e6926e04138abd24c1a9d28b9af
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:52
# 87b3b4158ab644edb1670fd3707e39ba
msgid "Specify in the sort parameter the field or fields to sort by and a value of ``1`` or ``-1`` to specify an ascending or descending sort respectively."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:56
# 0b58af945bb04853a736c82e4423ebd0
msgid "The following sample document specifies a descending sort by the ``age`` field and then an ascending sort by the ``posts`` field:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# a5f88c01448c448da99992c840ca9e5c
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# 8d3ee5e415aa483089eb4f60c549a5fe
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
# bffef634a28546a8bae02e307b0882d7
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# 01b1d4f5bfdd4a8ba088c3ec2788a825
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# d90e48be06f44f408bcb246543ae1752
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
# 2f2edee6e20046b19055f585d7bf2c48
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
# d72cc5a20d024e35ae3a2d9c49882621
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# 45549f0e3e2247f09c80f69faa3c5df0
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
# d4cc7b941a6c4885b3e256367bc6ec34
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
# 6359e99b71a741119a8937bf3543114d
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# 30ff44c17f1b438cb86e55a4c1c1d398
msgid "Date"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
# f45875d8bd474e35ac6c7ae4ffb3857e
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# f404149a30554f0e8f82d127e801f581
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
# f96151b0d06449bea36812f393d5e37c
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
# 21a37b0086154701b66b85732a03c630
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
# 10817ac784174e618c8f812883f9afe5
msgid "Date objects sort before Timestamp objects. Previously Date and Timestamp objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
# 7be72f50d10240298ca80504fd468cfc
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
# d0adb870e8d241659e7657c124f2a160
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
# 269072a17c884d9e9cdfa9f5b9598fcf
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
# 3449ce6ea05e42abb5e3cc117e7af942
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
# 3940f823cdff495ebf31fd77d50882cd
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
# e6996f445cb640718d141704bf251be1
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:68
# a35a11fa28d641c28ec7db16bbc9cd4f
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:70
# 43faf12fdb4b46e891c3c9cb740ce498
msgid "Specify in the sort parameter a new field name for the computed metadata and specify the :projection:`$meta` expression as its value."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:74
# 37c16c9bad314951b58af1fe25287c2e
msgid "The following sample document specifies a descending sort by the ``\"textScore\"`` metadata:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:81
# b5cedf936c37406eb9e1e4ae9f372c97
msgid "The specified metadata determines the sort order. For example, the ``\"textScore\"`` metadata sorts in descending order. See :projection:`$meta` for details."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:86
# 5198f9de7b6c4aa9a191dbcca5223b73
msgid "Restrictions"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:88
# 378dd64e2dae4463bbac4d08ea5d6eda
msgid "When unable to obtain the sort order from an index, MongoDB will sort the results in memory, which requires that the result set being sorted is less than 32 megabytes."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:92
# c03e8e270a454bd59328c5b5e0a2b4f2
msgid "When the sort operation consumes more than 32 megabytes, MongoDB returns an error. To avoid this error, either create an index supporting the sort operation (see :ref:`sort-index-use`) or use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()` (see :ref:`sort-limit-results`)."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:101
# 81b76baad3724dbe88d837c5823651ce
msgid "Sort and Index Use"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:103
# 4c34bc1895e24c719eebdda3e27e77ec
msgid "The sort can sometimes be satisfied by scanning an index in order. If the query plan uses an index to provide the requested sort order, MongoDB does not perform an in-memory sorting of the result set. For more information, see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:111
# 295239ff55744e8ca34ca54a56fc0009
msgid "Limit Results"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:113
# de23a84e2f33402496e702e7314fe2cc
msgid "You can use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()` to return the first (in terms of the sort order) ``k`` documents, where ``k`` is the specified limit."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:117
# 70df2d790d404b8ca5a2f086b31901d4
msgid "If MongoDB cannot obtain the sort order via an index scan, then MongoDB uses a top-k sort algorithm. This algorithm buffers the first ``k`` results (or last, depending on the sort order) seen so far by the underlying index or collection access. If at any point the memory footprint of these ``k`` results exceeds 32 megabytes, the query will fail."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:127
# 4f98534728b849bd9e42c4b9f2daf448
msgid "Interaction with :term:`Projection`"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:129
# 3ea0859483ea4a699e970061f9bebcda
msgid "When a set of results are both sorted and projected, the MongoDB query engine will always apply the sorting **first**."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:133
# f4cfa7bef0d54df1a06c1fafff005206
msgid "Examples"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:135
# 52182bf200ac4d7cab5cb8ac1c38dea0
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:146
# 20a96ad79b6042b78b710f035508e87d
msgid "The following query, which returns all documents from the ``orders`` collection, does not specify a sort order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:153
# 72537cf4caaa4339a1776f91d5ab7483
msgid "The query returns the documents in indeterminate order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:164
# 0dcde5257ce24ff2aba2796649ecbb24
msgid "The following query specifies a sort on the ``amount`` field in descending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:171
# e0e8a15db52440f3b856d16b94cb8fae
msgid "The query returns the following documents, in descending order of ``amount``:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:183
# 34edb567f4c246109abf2c8f395654a3
msgid "The following query specifies the sort order using the fields from an embedded document ``item``. The query sorts first by the ``category`` field in ascending order, and then within each ``category``, by the ``type`` field in ascending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:192
# 0b0fcbead49b4d28a14b6da782c0b8b6
msgid "The query returns the following documents, ordered first by the ``category`` field, and within each category, by the ``type`` field:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:208
# da5c08973aca429f974425cf25a324fb
msgid "Return in Natural Order"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:210
# 281bb0ad11bb4c78be3e830e4e11e9aa
msgid "The :operator:`$natural` parameter returns items according to their :term:`natural order` within the database. This ordering is an internal implementation feature, and you should not rely on any particular structure within it."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:216
# 6454982bdf53474eacdea2de8b003f1c
msgid "Index Use"
msgstr ""

#: ../source/includes/fact-natural-parameter.rst:1
# 158cf492d5d44c25bdecd85d2c38e60b
msgid "Queries that include a sort by :operator:`$natural` order do **not** use indexes to fulfill the query predicate with the following exception: If the query predicate is an equality condition on the ``_id`` field ``{ _id: <value> }``, then the query with the sort by :operator:`$natural` order can use the ``_id`` index."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:221
# 61c9f4fcd5b54437bc4ed69101987950
msgid "MMAPv1"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:223
# 8ef81f2e3b7f43dd941393586fedce2a
msgid "Typically, the natural order reflects insertion order with the following exception for the MMAPv1 storage engine. For the MMAPv1 storage engine, the natural order does not reflect insertion order if the documents relocate because of :ref:`document growth <data-model-document-growth>` or remove operations free up space which are then taken up by newly inserted documents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:230
# 74e215e8b4ee49c5aed131e88b1bc430
msgid "Consider to following example which uses the MMAPv1 storage engine."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:232
# 512a3ba0b0f4418cba33a2f6db679f5f
msgid "The following sequence of operations inserts documents into the ``trees`` collection:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:242
# eb4709147c1f4b07b3341b9cc7e087cd
msgid "The following query returns the documents in the natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:248
# 65bbb905405c4ddf9a229ddec1849914
msgid "The documents return in the following order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:257
# 9abaf939cb3948cea0cb798cb7325e10
msgid "Update a document such that the document outgrows its current allotted space:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:267
# a7e3afb17a63412c8e120e6f9a635143
msgid "Rerun the query to returns the documents in natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:273
# c5d98bfb2755452c968d1832a7b75d50
msgid "For MongoDB instances using MMAPv1, the documents return in the following natural order, which no longer reflects the insertion order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:283
# ae5d39718644470c838228adb2aa6895
msgid ":operator:`$natural`"
msgstr ""

