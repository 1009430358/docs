# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.sort.txt:3
# 6ddb527a48854b35bde063dbd34af5f8
msgid "cursor.sort()"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:8
# 3599564c593246b5a705a4e6f92e78a4
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:12
# e04ce2be8bb94864865534fd737bd8f3
msgid "Specifies the order in which the query returns matching documents. You must apply :method:`~cursor.sort()` to the cursor before retrieving any documents from the database."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:16
# ce0295dc6b994728bc12b39ba11d75d9
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:20
# 1ffc8fc4c9734111851d7cb3702214c5
msgid "The ``sort`` parameter contains field and value pairs, in the following form:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:27
# d9406705c35f484fa3e5eca4450f6a09
msgid "The sort document can specify :ref:`ascending or descending sort on existing fields <sort-asc-desc>` or :ref:`sort on computed metadata <sort-metadata>`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:32
# 373b4443c25e474c8445feed06599357
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:35
# 4a44020d115e4239b2a24521ddb9aa4d
msgid "Result Ordering"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:37
# ee0a6193fabc43b3b014e5f31d6f6c49
msgid "Unless you specify the :method:`~cursor.sort()` method or use the :query:`$near` operator, MongoDB does **not** guarantee the order of query results."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:44
# 467bddc5c41045279256e89cead78c60
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:46
# 4131c5cc67e1460e93e40ee049d81ce5
msgid "Specify in the sort parameter the field or fields to sort by and a value of ``1`` or ``-1`` to specify an ascending or descending sort respectively."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:50
# 6d4017d73ee249bf8c5692e31e49dc60
msgid "The following sample document specifies a descending sort by the ``age`` field and then an ascending sort by the ``posts`` field:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
# ba3c4cc9ff19481480a9340c1bcb3fe4
msgid "When comparing values of different :term:`BSON` types, MongoDB uses the following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
# 1b089b014adb4d568cc913e7897834e0
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
# 814b0e4f55e745869ad86a112650648b
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
# c09a9fd43a5c418a89a96bb41d264950
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
# b53bdb19690a41a2823cfa6784023167
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
# 6970914eb757431f9bfeaf0eb6d9fa3a
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
# f4c23a58c4bd4043aa0f4227ea319a45
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
# 3759012d5c6d40129e8c5ab9e20007b9
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
# 97e9629c56a644ffa64f12a638fc25c0
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
# c18a679aef434b16b4350032d5695182
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
# 0f71494cfc794007a08fa92565b1b808
msgid "Date"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
# 7f7c8d5aa48f4bccbb4c7e5063e2a667
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
# 4ca2f58ba01b485199569eb7964bfa75
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
# 3a2ddfb7c69545a2854bfb9f040beea3
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
# e3be862f58384973bd7d6baa1a59b66c
msgid "MongoDB treats some types as equivalent for comparison purposes. For instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
# e5dd029e4550425fa24187cfa27ef036
msgid "Date objects sort before Timestamp objects. Previously Date and Timestamp objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
# 162374c6183d4122888a3223ee27f940
msgid "The comparison treats a non-existent field as it would an empty BSON Object. As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }`` would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
# e56f8ed4b608432fa9d056217c288821
msgid "With arrays, a less-than comparison or an ascending sort compares the smallest element of arrays, and a greater-than comparison or a descending sort compares the largest element of the arrays. As such, when comparing a field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison of an empty array (e.g. ``[ ]``) treats the empty array as less than ``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
# 7ecfbc4cbda54943aeeab1c33667adbf
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
# d99e846b274b4487a2bce85f8bc886e4
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
# b9502024774044908f28aa1224302460
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
# f2863ad5670544b292c91bf96a8a5eba
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:62
# 1519fc578d744ffd8980fb5ad9333b94
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:64
# 6834425ea3f14bc2849bf18fd20f795c
msgid "Specify in the sort parameter a new field name for the computed metadata and specify the :projection:`$meta` expression as its value."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:68
# 5b30a9929a6046b2835fb5a849871f83
msgid "The following sample document specifies a descending sort by the ``\"textScore\"`` metadata:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:75
# a39c96dee8b9417da9b44c04390ee4e6
msgid "The specified metadata determines the sort order. For example, the ``\"textScore\"`` metadata sorts in descending order. See :projection:`$meta` for details."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:80
# 86f6e87154874f5f850799fb48493a6d
msgid "Restrictions"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:82
# 18cc34f340da44258ae3b93efac6efce
msgid "When unable to obtain the sort order from an index, MongoDB will sort the results in memory, which requires that the result set being sorted is less than 32 megabytes."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:86
# da949caf06854891a3b58ce360b05033
msgid "When the sort operation consumes more than 32 megabytes, MongoDB returns an error. To avoid this error, either create an index supporting the sort operation (see :ref:`sort-index-use`) or use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()` (see :ref:`sort-limit-results`)."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:95
# 05802f9f7a6c4671a98e363fb8c17246
msgid "Sort and Index Use"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:97
# ed56c8689bb748d9be854d6a492f5c97
msgid "The sort can sometimes be satisfied by scanning an index in order. If the query plan uses an index to provide the requested sort order, MongoDB does not perform an in-memory sorting of the result set. For more information, see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:105
# 30618b14281b4aa9be64492c1fa71ea4
msgid "Limit Results"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:107
# d4ce7cabf3e74e10a99cb229db244937
msgid "You can use :method:`~cursor.sort()` in conjunction with :method:`~cursor.limit()` to return the first (in terms of the sort order) ``k`` documents, where ``k`` is the specified limit."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:111
# 6216b58189db410bbfe18f7496a3b7d1
msgid "If MongoDB cannot obtain the sort order via an index scan, then MongoDB uses a top-k sort algorithm. This algorithm buffers the first ``k`` results (or last, depending on the sort order) seen so far by the underlying index or collection access. If at any point the memory footprint of these ``k`` results exceeds 32 megabytes, the query will fail."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:121
# 8aaa8e15867e49f7b05c1533be309a2e
msgid "Interaction with :term:`Projection`"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:123
# 1068141d99ca4655bf9b5374521929ed
msgid "When a set of results are both sorted and projected, the MongoDB query engine will always apply the sorting **first**."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:127
# 4fba924c2f9f4d4f839e3bb7804b3704
msgid "Examples"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:129
# 07ba6ff493a747be9ffc33e7dbac20a1
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:140
# 20ca0a65544840b18d08566cb44c8ce9
msgid "The following query, which returns all documents from the ``orders`` collection, does not specify a sort order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:147
# e009dc41700046bfb48decf01f0b10f3
msgid "The query returns the documents in indeterminate order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:158
# 4b973500f63b43b2a33119f63f24202a
msgid "The following query specifies a sort on the ``amount`` field in descending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:165
# 8f09f62611934f529cd1a49f1365e56a
msgid "The query returns the following documents, in descending order of ``amount``:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:177
# d10aa57581cf40c9941d0ff348f48ecb
msgid "The following query specifies the sort order using the fields from an embedded document ``item``. The query sorts first by the ``category`` field in ascending order, and then within each ``category``, by the ``type`` field in ascending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:186
# d6d2ccaa677f4516b3829fed8ecb5f83
msgid "The query returns the following documents, ordered first by the ``category`` field, and within each category, by the ``type`` field:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:202
# c1084b791d3e4e14a82ef90cb6be7460
msgid "Return in Natural Order"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:204
# dd060d6ae2ed4eaca399a61e4820aaf0
msgid "The :operator:`$natural` parameter returns items according to their :term:`natural order` within the database. This ordering is an internal implementation feature, and you should not rely on any particular structure within it."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:210
# e4179ebf760c467786297f027a1bdd20
msgid "Index Use"
msgstr ""

#: ../source/includes/fact-natural-parameter.rst:1
# 18692e754acf4c0991157fc05cb9de27
msgid "Queries that include a sort by :operator:`$natural` order do **not** use indexes to fulfill the query predicate with the following exception: If the query predicate is an equality condition on the ``_id`` field ``{ _id: <value> }``, then the query with the sort by :operator:`$natural` order can use the ``_id`` index."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:215
# 7a544d8b0224421ca796bc69d2700272
msgid "MMAPv1"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:217
# 517be65883aa47b5804638aed422b15e
msgid "Typically, the natural order reflects insertion order with the following exception for the MMAPv1 storage engine. For the MMAPv1 storage engine, the natural order does not reflect insertion order if the documents relocate because of :ref:`document growth <data-model-document-growth>` or remove operations free up space which are then taken up by newly inserted documents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:224
# a43c25615a24475e9dfee2cd5fa21319
msgid "Consider to following example which uses the MMAPv1 storage engine."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:226
# f7a1b476269d4b0faaad539a42ddfb62
msgid "The following sequence of operations inserts documents into the ``trees`` collection:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:236
# 30a042d209c44dd0b5aeb3086760d995
msgid "The following query returns the documents in the natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:242
# 68267c12ad5e4b96b77c3a48bd70909c
msgid "The documents return in the following order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:251
# 327547e5054c41c0a474cc1edc6b00bc
msgid "Update a document such that the document outgrows its current allotted space:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:261
# c87eb1366fea41edbb7f3cb9776a13b2
msgid "Rerun the query to returns the documents in natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:267
# fed945ecf5864057b95f3c0aba61a4ba
msgid "For MongoDB instances using MMAPv1, the documents return in the following natural order, which no longer reflects the insertion order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:277
# 934549e253944cd1ba6da0f84e5331c3
msgid ":operator:`$natural`"
msgstr ""

