# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.update.txt:3
# b2628efeaf4243b49e2432d4b4b1c2cf
msgid "db.collection.update()"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:8
# 2ca27af3f56544b8af53ab8f13f089c9
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:12
# 41debd8c54e54ffe9871ecce5deb5cbb
msgid "Modifies an existing document or documents in a collection. The method can modify specific fields of an existing document or documents or replace an existing document entirely, depending on the :ref:`update parameter <update-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:17
# 2c3125c6bef74771b810ea743c6dbe4e
msgid "By default, the :method:`~db.collection.update()` method updates a **single** document. Set the :ref:`multi-parameter` to update all documents that match the query criteria."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:21
# 8e7a210adc774d24bad3b08f7bd109d9
msgid "The :method:`~db.collection.update()` method has the following form:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:37
# 3cfbc6f6ef634c21a55d7180de412b25
msgid "The :method:`~db.collection.update()` method takes the following parameters:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:42
# 6aece94db6ae4de8a3d6e0476a7f51aa
msgid "The :method:`~db.collection.update()` method returns an object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:46
# 554e65d5a2d44fb582616ab3edc17ab7
msgid "A :ref:`writeresults-update` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:50
# a9efd42c9db84ef5be6f9ac851d2697d
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:55
# a23e7390c6e54d1db1c3043286dbc8d9
msgid "Safe Writes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:59
# 708be0af60e941eb8b06ece9c81ae109
msgid "The :method:`~db.collection.update()` method uses the :dbcommand:`update` command, which uses the default write concern. To specify a different write concern, include the ``writeConcern`` option in the options parameter. See :ref:`example-update-write-concern` for an example."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:68
# f6898448942c4eb09c6cb3e0d6bc7cd8
msgid "Update Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:70
# 2141ed5a4f984582af666b6418d6d61b
msgid "The :method:`~db.collection.update()` method either modifies specific fields in existing documents or replaces an existing document entirely."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:74
#: ../source/reference/method/db.collection.update.txt:230
# 797151ad25914f41922fa721a132eb7a
# 8ff145d4e463422fa6fb5b586f44f618
msgid "Update Specific Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:76
# 3dbe590ef5cd4972bbbd3fbf73b3ea91
msgid "If the ``<update>`` document contains :ref:`update operator <update-operators>` modifiers, such as those using the :update:`$set` modifier, then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:80
# 73d8688d7c8a4358b217c3f4e3052a1e
msgid "The ``<update>`` document must contain *only* :ref:`update operator <update-operators>` expressions."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:83
# 6c4181de5f2e45d2b9d3f4f3f877dc1b
msgid "The :method:`~db.collection.update()` method updates only the corresponding fields in the document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:86
# 78ed2045d9234db6b7ab5ecfce4f1a1a
msgid "To update an embedded document or an array as a whole, specify the replacement value for the field. To update particular fields in an embedded document or in an array, use :ref:`dot notation <document-dot-notation>` to specify the field."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:92
# f34db31169e84f488c54493e33bf8c09
msgid "Replace a Document Entirely"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:94
# 5801ad1eb86c432f811922b9098f613a
msgid "If the ``<update>`` document contains *only* ``field:value`` expressions, then:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:97
# 68f7e7056c0d4cf490be247e1e571629
msgid "The :method:`~db.collection.update()` method *replaces* the matching document with the ``<update>`` document. The :method:`~db.collection.update()` method *does not* replace the ``_id`` value. For an example, see :ref:`example-update-replace-fields`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:103
# 17bd8366f5894e03a8a98188f998411b
msgid ":method:`~db.collection.update()` *cannot* :ref:`update multiple documents <multi-parameter>`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:109
# af252b663f3e478c8bb1fbe6756d1ca3
msgid "Upsert Option"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:112
# 8719edaa54b34811a71ac58691cf1f35
msgid "Upsert Behavior"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:114
# 2fe8744e530a40979a5b97495ee92973
msgid "If ``upsert`` is ``true`` and no document matches the query criteria, :method:`~db.collection.update()` inserts a *single* document. The update creates the new document with either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:118
# 840600b688b34fe58e13109608b37a5b
msgid "The fields and values of the ``<update>`` parameter if the ``<update>`` parameter contains only field and value pairs, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:121
# 170d23f0e3354a9c8cbcdc5017c8c04d
msgid "The fields and values of both the ``<query>`` and ``<update>`` parameters if the ``<update>`` parameter contains :ref:`update operator <update-operators>` expressions. The update creates a base document from the equality clauses in the ``<query>`` parameter, and then applies the update expressions from the ``<update>`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:127
# 57eb237116d54026bb3033a2c2dde7a2
msgid "If ``upsert`` is ``true`` and there are documents that match the query criteria, :method:`~db.collection.update()` performs an update."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:130
# 050366a7d33d4670b7bbfac7a91f55a4
msgid ":update:`$setOnInsert`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:135
# 2523bc9481d44571bab5eefa9c177a4e
msgid "Use Unique Indexes"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:137
# ad9e7ecabfec442890915936fdcc28d2
msgid "To avoid inserting the same document more than once, only use ``upsert: true`` if the ``query`` field is uniquely indexed."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:141
# cd921288025c4800a1a03d287f38146f
msgid "Given a collection named ``people`` where no documents have a ``name`` field that holds the value ``Andy``. Consider when multiple clients issue the following *update* with ``upsert: true`` at the same time:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:158
# 0c285c85f0704ca8a9c0ed818e73c5d6
msgid "If all :method:`~db.collection.update()` operations complete the ``query`` portion before any client successfully inserts data, **and** there is no unique index on the ``name`` field, then each update operation may result in an insert."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:163
# 2025c14a37d240fea15cfdb5bd1c516f
msgid "To prevent MongoDB from inserting the same document more than once, create a :ref:`unique index <index-type-unique>` on the ``name`` field. With a unique index, if multiple applications issue the same update with ``upsert: true``, *exactly one* :method:`~db.collection.update()` would successfully insert a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:170
# c02006cd4f304b72a63ba62042877407
msgid "The remaining operations would either:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:172
# 4929c349331f4b75b1a9849f3e8a9fa6
msgid "update the newly inserted document, or"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:174
# 37bcceb950494ed0828e9e8e8099b9a1
msgid "fail when they attempted to insert a duplicate."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:176
# 9049a79757444a8a903e9a985add19c2
msgid "If the operation fails because of a duplicate index key error, applications may retry the operation which will succeed as an update operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:183
# 8e66e90cb8b946b88a35d8621578f8a4
msgid "``upsert:true`` with a Dotted ``_id`` Query"
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id.rst:1
# d6993909ade14677b1ffe299c63c9b24
msgid "When you execute an :method:`~db.collection.update()` with ``upsert: true`` and the query matches no existing document, MongoDB will refuse to insert a new document if the query specifies conditions on the ``_id`` field using :ref:`dot notation <document-dot-notation>`."
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id.rst:8
# 54361180aa9e44b6a9d67cea03aaa184
msgid "This restriction ensures that the order of fields embedded in the ``_id`` document is well-defined and not bound to the order specified in the query"
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id.rst:11
# bb0c486c242b4731a78dd6e44e50c2a4
msgid "If you attempt to insert a document in this way, MongoDB will raise an error."
msgstr ""

#: ../source/includes/fact-mongodb30-upsert-id-example.rst:1
# 81f91a4900fa4d5ab4aed179617b8568
msgid "For example, consider the following update operation. Since the update operation specifies ``upsert:true`` and the query specifies conditions on the ``_id`` field using dot notation, then the update will result in an error when constructing the document to insert."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:193
# 55aa602b48ac4fe199880be3e5d31c23
msgid "Multi Parameter"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:195
# c6aa643b4144440cb338bbd2930f49cc
msgid "If ``multi`` is set to ``true``, the :method:`~db.collection.update()` method updates all documents that meet the ``<query>`` criteria. The ``multi`` update operation may interleave with other operations, both read and/or write operations. For unsharded collections, you can override this behavior with the :update:`$isolated` operator, which isolates the update operation and disallows yielding during the operation. This isolates the update so that no client can see the updated documents until they are all processed, or an error stops the update operation."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:205
# a51df31cca2f4ac3a223e06847ce7000
msgid "If the :ref:`\\<update\\> <update-parameter>` document contains *only* ``field:value`` expressions, then :method:`~db.collection.update()` *cannot* update multiple documents."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:209
# e905583bfd1e40efb6a326870e8dbe49
msgid "For an example, see :ref:`example-update-multi`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:212
# cc891186c47a43a18bb967fb4dac8f87
msgid "Sharded Collections"
msgstr ""

#: ../source/includes/fact-single-modification-in-sharded-collections.rst:1
# 91b4309845084cb7a0ee991c1aaaa24c
msgid "All |single-modification-operation-names| operations for a sharded collection that specify the |single-modification-operation-option| option must include the :term:`shard key` *or* the ``_id`` field in the query specification. |single-modification-operation-names| operations specifying |single-modification-operation-option| in a sharded collection without the :term:`shard key` *or* the ``_id`` field return an error."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:220
# 61f2cedf5af2447186e6830146ef4829
msgid ":method:`~db.collection.findAndModify()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:225
# 4197c3078c8e41cbac87a6bfefded750
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:232
# a457968229974bacb7e368f6ef9df75e
msgid "To update specific fields in a document, use :ref:`update operators <update-operators>` in the ``<update>`` parameter."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:235
# bbb1d38b75604356a5ce61e38cc6d005
msgid "For example, given a ``books`` collection with the following document:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:249
# 95b4fb01986344068b8778a8bd418fdb
msgid "The following operation uses:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:251
# ef2dc6c7d0f949d1bf42622fcd4d2095
msgid "the :update:`$inc` operator to increment the ``stock`` field; and"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:253
# 8a638d1cccff41c0bc3bd2a96eb9fc07
msgid "the :update:`$set` operator to replace the value of the ``item`` field, the ``publisher`` field in the ``info`` embedded document, the ``tags`` field, and the second element in the ``ratings`` array."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:272
# 81845b5ba12f4db399359dbdf02c17ca
msgid "The updated document is the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:286
# 79c1f96d26f64aaeb74e9e5461ff2965
msgid ":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`, :ref:`dot notation <document-dot-notation>`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:291
# 8a0390a1dfa040c8ac37b82812fe3c88
msgid "Remove Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:293
# 33c89df725a84d91a09b07eeea7ed954
msgid "The following operation uses the :update:`$unset` operator to remove the ``tags`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:300
# 39964e2204214c2581561b37c99df7a2
msgid ":update:`$unset`, :update:`$rename`, :doc:`/reference/operator/update`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:305
# 21e18e1653744c8f8da77769101e3e59
msgid "Replace All Fields"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:307
# 7e06e249aee149ad86cc00be38f56b97
msgid "Given the following document in the ``books`` collection:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:321
# f3f9cf2742ce4bf3be694692ff9fd7da
msgid "The following operation passes an ``<update>`` document that contains only field and value pairs. The ``<update>`` document completely replaces the original document except for the ``_id`` field."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:337
# 83ab689e01374284945d07b6fd672d33
msgid "The updated document contains *only* the fields from the replacement document and the ``_id`` field. That is, the fields ``ratings`` and ``reorder`` no longer exist in the updated document since the fields were not in the replacement document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:355
# 3869976f82354ee285f70d8b6ee62473
msgid "Insert a New Document if No Match Exists"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:358
# 59926c6721cb4ddea4e94316d46a1d4f
msgid "The following update sets the :ref:`upsert <upsert-parameter>` option to ``true`` so that :method:`~db.collection.update()` creates a new document in the ``books`` collection if no document matches the ``<query>`` parameter:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:375
# 3ba349e91dcf473ba0fa82b10df6d135
msgid "If no document matches the ``<query>`` parameter, the update operation inserts a document with *only* the fields and values of the ``<update>`` document and a new unique ``ObjectId`` for the ``_id`` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:389
#: ../source/reference/method/db.collection.update.txt:507
# 4218ebf1eeb447189e5e0db2ccf763f9
# 674d31ee16be4efc8d17b9aad5289b97
msgid "For more information on ``upsert`` option and the inserted document, :ref:`upsert-parameter`."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:395
# ad0c732f480e469397cc1f05cf5512ac
msgid "Update Multiple Documents"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:397
# e513610366b64596b89fec7c7bbd8c88
msgid "To update multiple documents, set the ``multi`` option to ``true``. For example, the following operation updates all documents where ``stock`` is less than or equal to ``10``:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:409
# d4d90649f7a1473eb4ed3e9bb1ae710f
msgid "If the ``reorder`` field does not exist in the matching document(s), the :update:`$set` operator will add the field with the specified value. See :update:`$set` for more information."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:416
# 2db7e972639545ccaad8105b4f0cb2d3
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:418
# 957c17302f92487c9cbee4f393d89e21
msgid "The following operation on a replica set specifies a :doc:`write concern </reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of 5000 milliseconds such that the method returns after the write propagates to a majority of the voting replica set members or the method times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
# f7dc9bf2608d48439733fa17cae1bf4c
msgid "In previous versions, ``majority`` referred to the majority of all members of the replica set."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:438
# 92ac817b6dc24a7b8ed419f11e82f9ac
msgid "Combine the ``upsert`` and ``multi`` Options"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:440
# fc5d8b78f69a4d3e8496d4988faeeb43
msgid "Given a ``books`` collection that includes the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:459
# 60bf36360eee4847b3c8b97bd861b2f2
msgid "The following operation specifies both the ``multi`` option and the ``upsert`` option. If matching documents exist, the operation updates all matching documents. If no matching documents exist, the operation inserts a new document."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:472
# 602e99a161504fc9a75d4c9b392c138e
msgid "The operation updates all matching documents and results in the following:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:494
# 7cf2dc3986d14e698807e22c9bae6ebc
msgid "If the collection had *no* matching document, the operation would result in the insertion of a document using the fields from both the ``<query>`` and the ``<update>`` specifications:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:513
# baab70ea702d4d6c916d3e6dcdec0506
msgid "WriteResult"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:518
# f17c5adbde6e47d99c052d008d91567a
msgid "Successful Results"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:520
# 0e888f295bf34d118b72b8735eb796d2
msgid "The :method:`~db.collection.update()` method returns a :method:`WriteResult` object that contains the status of the operation. Upon success, the :method:`WriteResult` object contains the number of documents that matched the query condition, the number of documents inserted by the update, and the number of documents modified:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:0
# d7b9c5b6d0f84097a7510b32682a6317
msgid "See"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:534
# ab89227d28dd4a4399bb57bc64301a54
msgid "Write Concern Errors"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:536
# 1dc29affa9c9401bb3df45132f90162f
msgid "If the :method:`~db.collection.update()` method encounters write concern errors, the results include the :data:`WriteResult.writeConcernError` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:552
# 2b378749a0024e7d9dc4529dbd3039cb
msgid ":method:`WriteResult.hasWriteConcernError()`"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:555
# 73488b66991a45959176e47a560fd99d
msgid "Errors Unrelated to Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:557
# d1f30a87b0d343c5a4dd83b3e3d16521
msgid "If the :method:`~db.collection.update()` method encounters a non-write concern error, the results include the :data:`WriteResult.writeError` field:"
msgstr ""

#: ../source/reference/method/db.collection.update.txt:573
# 44aa363a88c446de9cc28121734da4d7
msgid ":method:`WriteResult.hasWriteError()`"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:4
# 8a0b7a29ac5b4a0192fc3fea4199dae2
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:6
# af740b3aa51a4a619b9b1249bf67b125
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

