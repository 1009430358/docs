# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.eval.txt:3
# bf6951811a424eaebaa30be6d9c7d2dd
msgid "db.eval()"
msgstr ""

#: ../source/reference/method/db.eval.txt:0
# 75286091a20440d09711420c16b10c5f
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.eval.txt:17
# 2ea2402ba6ad4e96905e181cbf34fe9b
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.eval.txt:23
# 266be6275c92490bbaea818cd5bc3459
msgid "Provides the ability to run JavaScript code on the MongoDB server."
msgstr ""

#: ../source/includes/fact-eval-helper-method.rst:1
# 27d378b9be2243e5b3a7ae4ac5760a90
msgid "The helper :method:`db.eval()` in the :program:`mongo` shell wraps the :dbcommand:`eval` command. Therefore, the helper method shares the characteristics and behavior of the underlying command with *one exception*: :method:`db.eval()` method does not support the ``nolock`` option."
msgstr ""

#: ../source/reference/method/db.eval.txt:29
# e28954373b1d4e7d9e6f1dd993529491
msgid "The method accepts the following parameters:"
msgstr ""

#: ../source/reference/method/db.eval.txt:33
# d9ed2c0092cb4779a745fcfbf4161c37
msgid "The JavaScript function need not take any arguments, as in the first example, or may optionally take arguments as in the second:"
msgstr ""

#: ../source/reference/method/db.eval.txt:49
# dfef5f757181443ab387f27c9b5b7366
msgid "Behavior"
msgstr ""

#: ../source/includes/admonitions-eval.rst:5
# d34aa88342ca4bbda08fc236c2bfda3a
msgid "Write Lock"
msgstr ""

#: ../source/includes/fact-eval-lock.rst:1
# 26fab1b138f7453999ac23280726cef5
msgid "By default, |object| takes a global write lock while evaluating the JavaScript function. As a result, |object| blocks all other read and write operations to the database while the |object| operation runs."
msgstr ""

#: ../source/includes/fact-eval-lock.rst:5
# f77030ed9fb54f3aa42276bebc4c7665
msgid "To prevent the taking of the global write lock while evaluating the JavaScript code, use the |nolockobject| with ``nolock`` set to ``true``. ``nolock`` does not impact whether the operations within the JavaScript code take write locks."
msgstr ""

#: ../source/includes/admonitions-eval.rst:9
# 0b1a0d19c24c4b7e999ab5350e1d3035
msgid "For long running |object| operation, consider using either the :command:`eval` command with ``nolock: true`` or using :doc:`other server side code execution options </core/server-side-javascript>`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:14
# 9659d644e2214f6aaa51fb478b5a6ad1
msgid "Sharded Data"
msgstr ""

#: ../source/includes/admonitions-eval.rst:16
# 2261c121aa4f4f55b98b7328ce7137f3
msgid "You can not use |object| with :term:`sharded <sharding>` collections. In general, you should avoid using |object| in :term:`sharded clusters <sharded cluster>`; nevertheless, it is possible to use |object| with non-sharded collections and databases stored in a :term:`sharded cluster`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:23
# 05a4a5d753804c76a2372b7e84513d8c
msgid "Access Control"
msgstr ""

#: ../source/includes/extracts/access-eval-eval.rst:1
# a8915de7fceb46e8a1f887ff2455de10
msgid "If authorization is enabled, you must have access to all actions on all resources in order to run :dbcommand:`eval`. Providing such access is not recommended, but if your organization requires a user to run :dbcommand:`eval`, create a role that grants :authaction:`anyAction` on :ref:`resource-anyresource`. Do not assign this role to any other user."
msgstr ""

#: ../source/reference/method/db.eval.txt:56
# e4becf5346a24576b2b98fd85473c0ee
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.eval.txt:58
# 0e44e0baff9c44ccb3f88b594327d77c
msgid "The following is an example of the :method:`db.eval()` method:"
msgstr ""

#: ../source/reference/method/db.eval.txt:63
# 0ad88a9dbb2443b883f9da65da943153
msgid "The ``db`` in the function refers to the current database."
msgstr ""

#: ../source/reference/method/db.eval.txt:65
# e1e1a2e7cf324336a703cd88b744b1f2
msgid "``\"eliot\"`` is the argument passed to the function, and corresponds to the ``name`` argument."
msgstr ""

#: ../source/reference/method/db.eval.txt:68
# f66d6c561afb44998e82a0acc234fba5
msgid "``5`` is an argument to the function and corresponds to the ``incAmount`` field."
msgstr ""

#: ../source/reference/method/db.eval.txt:71
# 61ba914a73cd41e1b6a31661eee506dd
msgid "If you want to use the server's interpreter, you must run :method:`db.eval()`. Otherwise, the :program:`mongo` shell's JavaScript interpreter evaluates functions entered directly into the shell."
msgstr ""

#: ../source/reference/method/db.eval.txt:75
# 3e6931ab288a4fe69048cbf317ee291e
msgid "If an error occurs, :method:`db.eval()` throws an exception. The following is an example of an invalid function that uses the variable ``x`` without declaring it as an argument:"
msgstr ""

#: ../source/reference/method/db.eval.txt:83
# 2bd2f08dcf204ab2970bcc11f4e2998e
msgid "The statement results in the following exception:"
msgstr ""

#: ../source/reference/method/db.eval.txt:95
# cbf41b299665494090f645a8e815f1fb
msgid ":doc:`/core/server-side-javascript`"
msgstr ""

