# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.eval.txt:3
# 2566ef39499843fcb95ccb80ed3e0d8d
msgid "db.eval()"
msgstr ""

#: ../source/reference/method/db.eval.txt:11
# afce84585f5d41a18429eae8469af792
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.eval.txt:17
# 3eb92f22635f4f9b92c30b849d349575
msgid "Provides the ability to run JavaScript code on the MongoDB server."
msgstr ""

#: ../source/includes/fact-eval-helper-method.rst:1
# b38681ac423c4892be5c59f0616bfd0b
msgid "The helper :method:`db.eval()` in the :program:`mongo` shell wraps the :dbcommand:`eval` command. Therefore, the helper method shares the characteristics and behavior of the underlying command with *one exception*: :method:`db.eval()` method does not support the ``nolock`` option."
msgstr ""

#: ../source/reference/method/db.eval.txt:23
# ec200290320145a1947136fe157006db
msgid "The method accepts the following parameters:"
msgstr ""

#: ../source/reference/method/db.eval.txt:27
# 6243ebdaf1044f6884a8b3829d9e6a1e
msgid "The JavaScript function need not take any arguments, as in the first example, or may optionally take arguments as in the second:"
msgstr ""

#: ../source/reference/method/db.eval.txt:43
# 182c1244920c45adb19fbc3303efc598
msgid "Behavior"
msgstr ""

#: ../source/includes/admonitions-eval.rst:5
# 4c4083774e4e4db9b0c521b7444263c0
msgid "Write Lock"
msgstr ""

#: ../source/includes/fact-eval-lock.rst:1
# 553c66fedb2240edbe8d80f4b92dc4f1
msgid "By default, |object| takes a global write lock while evaluating the JavaScript function. As a result, |object| blocks all other read and write operations to the database while the |object| operation runs."
msgstr ""

#: ../source/includes/fact-eval-lock.rst:5
# 052fe20d491a4ace9f4af0dab53ef1d0
msgid "To prevent the taking of the global write lock while evaluating the JavaScript code, use the |nolockobject| with ``nolock`` set to ``true``. ``nolock`` does not impact whether the operations within the JavaScript code take write locks."
msgstr ""

#: ../source/includes/admonitions-eval.rst:9
# 8c05097a027c4920b4a91642a7499ec4
msgid "For long running |object| operation, consider using either the :command:`eval` command with ``nolock: true`` or using :doc:`other server side code execution options </core/server-side-javascript>`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:14
# cfcdfbfeba644152b4fa0075439ed469
msgid "Sharded Data"
msgstr ""

#: ../source/includes/admonitions-eval.rst:16
# 04f99a392557492badc69f284769db72
msgid "You can not use |object| with :term:`sharded <sharding>` collections. In general, you should avoid using |object| in :term:`sharded clusters <sharded cluster>`; nevertheless, it is possible to use |object| with non-sharded collections and databases stored in a :term:`sharded cluster`."
msgstr ""

#: ../source/includes/admonitions-eval.rst:23
# 35a493f63f114d5293db37ecc46add48
msgid "Access Control"
msgstr ""

#: ../source/includes/extracts/access-eval-eval.rst:1
# 8cd1582044c34cd196d35d4803764171
msgid "If authorization is enabled, you must have access to all actions on all resources in order to run :dbcommand:`eval`. Providing such access is not recommended, but if your organization requires a user to run :dbcommand:`eval`, create a role that grants :authaction:`anyAction` on :ref:`resource-anyresource`. Do not assign this role to any other user."
msgstr ""

#: ../source/includes/admonitions-eval.rst:30
# 6e74a903fc6648fbbf452adffdb5f66e
msgid "JavaScript Engine"
msgstr ""

#: ../source/includes/admonitions-eval.rst:34
# f91cf4c472de4872874c7601cc6cce39
msgid "The V8 JavaScript engine, which became the default in 2.4, allows multiple JavaScript operations to execute at the same time. Prior to 2.4, |object| executed in a single thread."
msgstr ""

#: ../source/reference/method/db.eval.txt:50
# 5ef3096ec21e4c848d1095e5d80bb95f
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.eval.txt:52
# 4ad25c59a27f4d5aa00f7941fb953505
msgid "The following is an example of the :method:`db.eval()` method:"
msgstr ""

#: ../source/reference/method/db.eval.txt:57
# b9f76d6a9cb5477ebc5c372caf9e7a50
msgid "The ``db`` in the function refers to the current database."
msgstr ""

#: ../source/reference/method/db.eval.txt:59
# 1f46ba17386249088957a1fc3c6d0f2c
msgid "``\"eliot\"`` is the argument passed to the function, and corresponds to the ``name`` argument."
msgstr ""

#: ../source/reference/method/db.eval.txt:62
# d22389b7d4c14153bc628d1679cefa4f
msgid "``5`` is an argument to the function and corresponds to the ``incAmount`` field."
msgstr ""

#: ../source/reference/method/db.eval.txt:65
# 4ee6bbbafcf744fb810b2356b7a35f83
msgid "If you want to use the server's interpreter, you must run :method:`db.eval()`. Otherwise, the :program:`mongo` shell's JavaScript interpreter evaluates functions entered directly into the shell."
msgstr ""

#: ../source/reference/method/db.eval.txt:69
# 52b0b18d18f44cc89517a14eb1cf4b08
msgid "If an error occurs, :method:`db.eval()` throws an exception. The following is an example of an invalid function that uses the variable ``x`` without declaring it as an argument:"
msgstr ""

#: ../source/reference/method/db.eval.txt:77
# 1fc2d4f270ac48d1adabc16fdc49467f
msgid "The statement results in the following exception:"
msgstr ""

#: ../source/reference/method/db.eval.txt:89
# 03715fc597fc413e8dccdc4ea5ff8035
msgid ":doc:`/core/server-side-javascript`"
msgstr ""

