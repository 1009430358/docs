# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.getCollection.txt:3
# 9142a771fa81492c8231047af682dad3
msgid "db.getCollection()"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:0
# 5d1ed9b5d7414da295d81342cc6013a4
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:14
# efbf673a15ae493a90d178f45d87cbcc
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:18
# 0aff2f7dda3b4278bcfad7509a808eb3
msgid "Returns a :term:`collection` object that is functionally equivalent to using the ``db.<collectionName>`` syntax. The method is useful for a collection whose name might interact with the shell itself, such as names that begin with ``_`` or that match a :doc:`database shell method </reference/method/js-database>`."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:24
# 39b6ab7c11564fcbb48b7fd6f956aac1
msgid "The :method:`db.getCollection()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:29
# 0f3bea21089c46579f033846b2e93aca
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:31
# 25f7d2d401e24b0d8e6bb95b217ffeed
msgid "The :method:`db.getCollection()` object can access any :doc:`collection methods</reference/method/js-collection>`."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:34
# 393420b25436478dab16bffe6bf93edd
msgid "The collection specified may or may not exist on the server.  If the collection does not exist, MongoDB creates it implicitly as part of :doc:`write operations </crud>` like :method:`db.collection.insertOne()`."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:40
# 2162db2355064c6eb2933b719e2d19c9
msgid "Example"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:42
# 94903c58a1cc46619ab3c7e5b273b9a2
msgid "The following example uses :method:`db.getCollection()` to access the ``auth`` collection and insert a document into it."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:59
# 39f740eeedc3425993b3ca63966d5e6a
msgid "This returns:"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:68
# ca7d0b5d05c94e8ca5cef417f9fb7032
msgid "The previous example requires the use of :method:`db.getCollection(\"auth\")<db.getCollection()>` because of a name conflict with the database method :method:`db.auth()`.  Calling ``db.auth`` directly to perform an insert operation would reference the :method:`db.auth()` method and would error."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:74
# 69b133e2eaab4821a0adf5731c7a548b
msgid "The following example attempts the same operation, but without using the :method:`db.getCollection()` method:"
msgstr ""

#: ../source/reference/method/db.getCollection.txt:89
# cdebc22d55e94538abd3e7724160c6db
msgid "The operation errors as ``db.auth()`` method has no ``insertOne`` method."
msgstr ""

#: ../source/reference/method/db.getCollection.txt:92
# 7e0c23915fd44e6c98829cefaf3ba5dc
msgid ":doc:`/reference/method/js-collection`"
msgstr ""

