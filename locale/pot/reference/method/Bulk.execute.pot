# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Bulk.execute.txt:3
# 8963e9cee0fb43e0b797701c55f5ad62
msgid "Bulk.execute()"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:8
# 63795b5cfac24a6a8649fa9008947087
msgid "Description"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:14
# 1420d0b9aff148cb8e58f2e306290612
msgid "Executes the list of operations built by the :method:`Bulk()` operations builder."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:17
# ea55ce1fc7b547c38bad6c3c2c84762f
msgid ":method:`Bulk.execute()` accepts the following parameter:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:21
# 556c6783cede4159acdefeded9161815
msgid "A :method:`BulkWriteResult` object that contains the status of the operation."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:24
# 0012de13586d4748a8b43050603b6395
msgid "After execution, you cannot re-execute the :method:`Bulk()` object without reinitializing. See :method:`db.collection.initializeUnorderedBulkOp()` and :method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:32
# 64f48d45116d46018aa453c031f1e9de
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:35
# e50e266284ea4e518c6d0bf1a94cb8e7
msgid "Ordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
# 3c563e04696d4831aee2791e1736f1c6
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups the operations by the :data:`operation type <batchType>` and contiguity; i.e. *contiguous* operations of the same type are grouped together. For example, if an ordered list has two insert operations followed by an update operation followed by another insert operation, MongoDB groups the operations into three separate groups: first group contains the two insert operations, second group contains the update operation, and the third group contains the last insert operation. This behavior is subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
#: ../source/includes/fact-bulk-operation-batches.rst:1
# 502047d1653a4b1b9a200ab2534c6a0c
# 82793fa0671e4ac9aadbc95aa6a73d22
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
#: ../source/includes/fact-bulk-operation-batches.rst:7
# cd8ee09582b8417eb4c0add41a9e5750
# 5a3ea69b08d34070baf289fadd7b70f1
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
#: ../source/includes/fact-bulk-operation-batches.rst:10
# 70ebd60f3d974cbbb978038cbd4d6226
# e5826e549c034e26ae958a024de5aff4
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
# b183682d4fa641469383c4443d823bcc
msgid "Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations on a sharded collection will generally be slower than executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:44
# 5fe84dfaa7ca4b80b30c3461caed2035
msgid "Unordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-unordered-list.rst:1
# bc8bb0fe664d4b5ca3cfd1762c239de1
msgid "When executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB groups the operations. With an unordered bulk operation, the operations in the list may be reordered to increase performance. As such, applications should not depend on the ordering when performing :method:`unordered <db.collection.initializeUnorderedBulkOp()>` bulk operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:51
# b0a625d0431e429eb5dc8a3aa014f749
msgid "Examples"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:54
# b0b9b0d076b943c38d5cbac50f8917d9
msgid "Execute Bulk Operations"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:56
# 912757d5ead945768ebbd68a107f9187
msgid "The following initializes a :method:`Bulk()` operations builder on the ``items`` collection, adds a series of insert operations, and executes the operations:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:67
#: ../source/reference/method/Bulk.execute.txt:105
# 09564ddc8e5d413bb8346607f8765fb3
# da0f384da2e4433d9c6de4228aace9a4
msgid "The operation returns the following :method:`BulkWriteResult()` object:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:82
# ea0a9d6e66464c2bbb25d198d648aff7
msgid "For details on the return object, see :method:`BulkWriteResult()`. For details on the batches executed, see :method:`Bulk.getOperations()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:88
# 86edf2df8e6345a6b930966f63975636
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:90
# dd522986800c467b84c7aba5e50ecb2a
msgid "The following operation to a replica set specifies a :doc:`write concern </reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of 5000 milliseconds such that the method returns after the writes propagate to a majority of the voting replica set members or the method times out after 5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
# 503f35fc1c0c4c46bdf5ccf67938f6ba
msgid "In previous versions, ``majority`` referred to the majority of all members of the replica set."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:0
# e29367bd837e4b749c9838e8cf13c607
msgid "See"
msgstr ""

