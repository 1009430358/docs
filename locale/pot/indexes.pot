# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/indexes.txt:5
# 304ff37242ea4734959fe0b602ee300f
msgid "Indexes"
msgstr ""

#: ../source/indexes.txt:0
# c80142b9609d4eb89675ed6ce667b16e
msgid "On this page"
msgstr ""

#: ../source/indexes.txt:15
# b6e1eca00c4545adac23dae50e171de3
msgid "Indexes support the efficient execution of queries in MongoDB. Without indexes, MongoDB must perform a *collection scan*, i.e. scan every document in a collection, to select those documents that match the query statement. If an appropriate index exists for a query, MongoDB can use the index to limit the number of documents it must inspect."
msgstr ""

#: ../source/indexes.txt:22
# 2f11d690c5b84476ad4218984bf70f1a
msgid "Indexes are special data structures [#b-tree]_ that store a small portion of the collection's data set in an easy to traverse form. The index stores the value of a specific field or set of fields, ordered by the value of the field. The ordering of the index entries supports efficient equality matches and range-based query operations. In addition, MongoDB can return sorted results by using the ordering in the index."
msgstr ""

#: ../source/indexes.txt:30
# 126076f64e3442a2bdc004b3ba2eb477
msgid "The following diagram illustrates a query that selects and orders the matching documents using an index:"
msgstr ""

#: ../source/indexes.txt:35
# 9b2b680d44a843d0b87273b1da2e5d09
msgid "Fundamentally, indexes in MongoDB are similar to indexes in other database systems. MongoDB defines indexes at the :term:`collection` level and supports indexes on any field or sub-field of the documents in a MongoDB collection."
msgstr ""

#: ../source/indexes.txt:47
# 9088af690c80449d84574eb89be16b24
msgid "Default ``_id`` Index"
msgstr ""

#: ../source/indexes.txt:49
# 8cd6cec9c15a49e7ac3d2cb4b9c8f3fd
msgid "MongoDB creates a :ref:`unique index <index-type-unique>` on the :ref:`_id <document-id-field>` field during the creation of a collection. The ``_id`` index prevents clients from inserting two documents with the same value for the ``_id`` field. You cannot drop this index on the ``_id`` field."
msgstr ""

#: ../source/indexes.txt:57
# 7e606e1d39d24ad8b47c801e308d7ba8
msgid "In :term:`sharded clusters <sharded cluster>`, if you do *not* use the ``_id`` field as the :term:`shard key`, then your application **must** ensure the uniqueness of the values in the ``_id`` field to prevent errors.  This is most-often done by using a standard auto-generated :term:`ObjectId`."
msgstr ""

#: ../source/indexes.txt:64
# 5a5e471c2aae4b06a914c3c00845c704
msgid "Create an Index"
msgstr ""

#: ../source/indexes.txt:66
# 3632d8166d374694be9bd97109c1c823
msgid "To create an index, use :method:`db.collection.createIndex()` or a similar :api:`method from your driver <>`."
msgstr ""

#: ../source/indexes.txt:73
# fd8bce19b928458caaafea9cfd2ec096
msgid "The :method:`db.collection.createIndex()` method only creates an index if an index of the same specification does not already exist."
msgstr ""

#: ../source/indexes.txt:76
# dcbccf8bbc1f438eaa88c25da5e7ff2e
msgid "MongoDB indexes use a B-tree data structure."
msgstr ""

#: ../source/indexes.txt:81
# 6ee3dad8c2b94144a46f7ce7307aa4ee
msgid "Index Types"
msgstr ""

#: ../source/indexes.txt:83
# a6401a5437ab4669b17513c1f029731f
msgid "MongoDB provides a number of different index types to support specific types of data and queries."
msgstr ""

#: ../source/indexes.txt:89
# a8b233e03679419ab1e4925fbbe06161
msgid "Single Field"
msgstr ""

#: ../source/indexes.txt:91
# 132d45b3ec774aedbcf9e01725e6648c
msgid "In addition to the MongoDB-defined ``_id`` index, MongoDB supports the creation of user-defined ascending/descending indexes on a :doc:`single field of a document </core/index-single>`."
msgstr ""

#: ../source/indexes.txt:97
# 62158fa7ae6343b2a63045c59a9fcc9d
msgid "For a single-field index and sort operations, the sort order (i.e. ascending or descending) of the index key does not matter because MongoDB can traverse the index in either direction."
msgstr ""

#: ../source/indexes.txt:101
# 130d4be3804f4cc8883806cddc79756c
msgid "See :doc:`/core/index-single` and :ref:`sort-results-single-field` for more information on single-field indexes."
msgstr ""

#: ../source/indexes.txt:105
# da9e7b119fa44c13840a910b712fec2e
msgid "Compound Index"
msgstr ""

#: ../source/indexes.txt:107
# 8fb4e4ad34604555acc9fef5bef8ac60
msgid "MongoDB also supports user-defined indexes on multiple fields, i.e. :doc:`compound indexes </core/index-compound>`."
msgstr ""

#: ../source/indexes.txt:110
# 88427bc212db4a91848c3d7285f0741d
msgid "The order of fields listed in a compound index has significance. For instance, if a compound index consists of ``{ userid: 1, score: -1 }``, the index sorts first by ``userid`` and then, within each ``userid`` value, sorts by ``score``."
msgstr ""

#: ../source/indexes.txt:117
# f9497368f6c945eea3f83a10e1955bcd
msgid "For compound indexes and sort operations, the sort order (i.e. ascending or descending) of the index keys can determine whether the index can support a sort operation. See :ref:`index-ascending-and-descending` for more information on the impact of index order on results in compound indexes."
msgstr ""

#: ../source/indexes.txt:123
# e0b18f5aa0db4acdbd8d022f25567179
msgid "See :doc:`/core/index-compound` and :ref:`sort-on-multiple-fields` for more information on compound indexes."
msgstr ""

#: ../source/indexes.txt:127
# f1fc4ed824b14735ba1897a1aff19bdc
msgid "Multikey Index"
msgstr ""

#: ../source/indexes.txt:129
# d610579decae48d8ac6bf8c4449ab83a
msgid "MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the content stored in arrays. If you index a field that holds an array value, MongoDB creates separate index entries for *every* element of the array. These :doc:`multikey indexes </core/index-multikey>` allow queries to select documents that contain arrays by matching on element or elements of the arrays. MongoDB automatically determines whether to create a multikey index if the indexed field contains an array value; you do not need to explicitly specify the multikey type."
msgstr ""

#: ../source/indexes.txt:140
# f37f88a4007f4c43a6aab7e0eb0792ea
msgid "See :doc:`/core/index-multikey` and :doc:`/core/multikey-index-bounds` for more information on multikey indexes."
msgstr ""

#: ../source/indexes.txt:144
# 6d155c9ffe2346cb9eaafe5cca355946
msgid "Geospatial Index"
msgstr ""

#: ../source/indexes.txt:146
# 122efdd577aa428faf0fe6160e43fde5
msgid "To support efficient queries of geospatial coordinate data, MongoDB provides two special indexes: :doc:`2d indexes </core/2d>` that uses planar geometry when returning results and :doc:`2sphere indexes </core/2dsphere>` that use spherical geometry to return results."
msgstr ""

#: ../source/indexes.txt:151
# 178ef2d2d020497996013af0b70b2a5e
msgid "See :doc:`/core/geospatial-indexes` for a high level introduction to geospatial indexes."
msgstr ""

#: ../source/indexes.txt:155
# 14683c2d891642df93140d0aeeb1f1d5
msgid "Text Indexes"
msgstr ""

#: ../source/indexes.txt:157
# 01076654900a403f93892c2e5f61d760
msgid "MongoDB provides a ``text`` index type that supports searching for string content in a collection. These text indexes do not store language-specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in a collection to only store root words."
msgstr ""

#: ../source/indexes.txt:162
# fee51203beac46a3ae97d6c33a874752
msgid "See :doc:`/core/index-text` for more information on text indexes and search."
msgstr ""

#: ../source/indexes.txt:166
# b35e75e7463e4720b871efb65a1538f0
msgid "Hashed Indexes"
msgstr ""

#: ../source/indexes.txt:168
# f712be1b2ed34dcc89065018e8be1b36
msgid "To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB provides a :doc:`hashed index </core/index-hashed>` type, which indexes the hash of the value of a field. These indexes have a more random distribution of values along their range, but *only* support equality matches and cannot support range-based queries."
msgstr ""

#: ../source/indexes.txt:175
# 5cf7b1f019e3475ea762932be6ee19d0
msgid "Index Properties"
msgstr ""

#: ../source/indexes.txt:178
# aeb8e068798f4aa99125ed44b8e331c8
msgid "Unique Indexes"
msgstr ""

#: ../source/indexes.txt:180
# 70d9c87fd94b41f6a5286dd1c3842059
msgid "The :doc:`unique </core/index-unique>` property for an index causes MongoDB to reject duplicate values for the indexed field. Other than the unique constraint, unique indexes are functionally interchangeable with other MongoDB indexes."
msgstr ""

#: ../source/indexes.txt:186
# b653d0096c7f4feb96722d8ac689fd45
msgid "Partial Indexes"
msgstr ""

#: ../source/indexes.txt:190
# 062a7042afd5446e9c9b5e30b65ac4c2
msgid ":doc:`Partial indexes </core/index-partial>` only index the documents in a collection that meet a specified filter expression. By indexing a subset of the documents in a collection, partial indexes have lower storage requirements and reduced performance costs for index creation and maintenance."
msgstr ""

#: ../source/indexes.txt:196
# baf672a78c234db980e8c2a1b91bf347
msgid "Partial indexes offer a superset of the functionality of sparse indexes and should be preferred over sparse indexes."
msgstr ""

#: ../source/indexes.txt:200
# 76b9c4f85d614b58a906bca1edf97f99
msgid "Sparse Indexes"
msgstr ""

#: ../source/indexes.txt:202
# e8a966f8301c423ba57c9de692c6de9d
msgid "The :doc:`sparse </core/index-sparse>` property of an index ensures that the index only contain entries for documents that have the indexed field. The index skips documents that *do not* have the indexed field."
msgstr ""

#: ../source/indexes.txt:206
# 3530b512c5a84a54a12cebe115916019
msgid "You can combine the sparse index option with the unique index option to reject documents that have duplicate values for a field but ignore documents that do not have the indexed key."
msgstr ""

#: ../source/indexes.txt:211
# 145f7f45eb9c4750a3019d3ade005e3e
msgid "TTL Indexes"
msgstr ""

#: ../source/indexes.txt:213
# 2c51db3f35a4492a80304d43589f2086
msgid ":doc:`TTL indexes </core/index-ttl>` are special indexes that MongoDB can use to automatically remove documents from a collection after a certain amount of time. This is ideal for certain types of information like machine generated event data, logs, and session information that only need to persist in a database for a finite amount of time."
msgstr ""

#: ../source/indexes.txt:219
# e4bf82aa8c5f4c34971c573053c5041b
msgid "See: :doc:`/tutorial/expire-data` for implementation instructions."
msgstr ""

#: ../source/indexes.txt:222
# c82ef7c8fffc4e70a106f7187b3c3b09
msgid "Index Use"
msgstr ""

#: ../source/indexes.txt:224
# d1b4c7d7f89d40c69e37ef1cb066c238
msgid "Indexes can improve the efficiency of read operations. The :doc:`/tutorial/analyze-query-plan` tutorial provides an example of the execution statistics of a query with and without an index."
msgstr ""

#: ../source/indexes.txt:228
# 5ce31e71aaef4299aa47479199b3a6d9
msgid "For information on how MongoDB chooses an index to use, see :ref:`query optimizer <read-operations-query-optimization>`."
msgstr ""

#: ../source/indexes.txt:232
# 256da4593ecb41d9b6cc7b81faa6d835
msgid "Covered Queries"
msgstr ""

#: ../source/indexes.txt:234
# 8b5084cc4e674912b57130ef9ee121e9
msgid "When the query criteria and the :term:`projection` of a query include *only* the indexed fields, MongoDB will return results directly from the index *without* scanning any documents or bringing documents into memory. These covered queries can be *very* efficient."
msgstr ""

#: ../source/indexes.txt:241
# ca780ce9dfea4b69b1f56d43c0b191c2
msgid "For more information on covered queries, see :ref:`read-operations-covered-query`."
msgstr ""

#: ../source/indexes.txt:245
# 057fc9f5ddb54f7c8a1f8bb883a7f10c
msgid "Index Intersection"
msgstr ""

#: ../source/indexes.txt:249
# 2753cd67ec5444da9072adb6f71acadd
msgid "MongoDB can use the :doc:`intersection of indexes </core/index-intersection>` to fulfill queries. For queries that specify compound query conditions, if one index can fulfill a part of a query condition, and another index can fulfill another part of the query condition, then MongoDB can use the intersection of the two indexes to fulfill the query. Whether the use of a compound index or the use of an index intersection is more efficient depends on the particular query and the system."
msgstr ""

#: ../source/indexes.txt:258
# bdbbc903f10742b2afbcceb5adebe016
msgid "For details on index intersection, see :doc:`/core/index-intersection`."
msgstr ""

#: ../source/indexes.txt:261
# 6cc38930a0d74171a35dd09788f6a9d7
msgid "Restrictions"
msgstr ""

#: ../source/indexes.txt:263
# 26681290070c460486f7526c2309f81d
msgid "Certain restrictions apply to indexes, such as the length of the index keys or the number of indexes per collection. See :ref:`Index Limitations <index-limitations>` for details."
msgstr ""

#: ../source/indexes.txt:268
# c92e0aa644e845a88dece09c12e5471e
msgid "Additional Considerations"
msgstr ""

#: ../source/indexes.txt:270
# 9cae1aea7c1a44c6a55df60df13e5c9f
msgid "Although indexes can improve query performances, indexes also present some operational considerations. See :ref:`Operational Considerations for Indexes <data-model-indexes>` for more information."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:1
# c1b7f6ac6b60460a89c7dbf354740b14
msgid "If your collection holds a large amount of data, and your application needs to be able to access the data while building the index, consider building the index in the background, as described in :ref:`index-creation-background`."
msgstr ""

#: ../source/includes/note-build-indexes-on-replica-sets.rst:1
# 3cef130effc64636aeabf174fa50f53e
msgid "To build or rebuild indexes for a :term:`replica set`, see :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:8
# 70344a5627bd4ce29edc7a0079214281
msgid "Some drivers may specify indexes, using ``NumberLong(1)`` rather than ``1`` as the specification. This does not have any affect on the resulting index."
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:4
# 845a2fffd8ec483d8e98e70615844d8c
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-quick-reference.rst:6
# 208ac4ac0feb4c0c877e4c8770b2d0ab
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

#: ../source/indexes.txt:40
# af6f6e560f8849d59132a6a8cbadbf26
msgid "_id index"
msgstr ""

#: ../source/indexes.txt:41
#: ../source/indexes.txt:42
# 577d55c2874d46e9a2f4c6120e3127c1
# acfd6fe8761f4550a9f2add7210e81f6
msgid "_id"
msgstr ""

#: ../source/indexes.txt:42
# acfd6fe8761f4550a9f2add7210e81f6
msgid "index"
msgstr ""

#: ../source/indexes.txt:43
# ab975979f0ca4dad9a7b48bcd7c52366
msgid "index types"
msgstr ""

#: ../source/indexes.txt:43
# ab975979f0ca4dad9a7b48bcd7c52366
msgid "primary key"
msgstr ""

