# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/aggregation.txt:3
# 27c60c31efbe426ab3fb2d126afee987
msgid "Aggregation"
msgstr ""

#: ../source/aggregation.txt:0
# 620575dfa5fe4aa68310dfc6245afca2
msgid "On this page"
msgstr ""

#: ../source/aggregation.txt:13
# 706ca2e2899949e18c3bdc25ea5c4836
msgid "Aggregations operations process data records and return computed results. Aggregation operations group values from multiple documents together, and can perform a variety of operations on the grouped data to return a single result. MongoDB provides three ways to perform aggregation: the :ref:`aggregation pipeline <aggregation-framework>`, the :ref:`map-reduce function <aggregation-map-reduce>`, and :ref:`single purpose aggregation methods <single-purpose-agg-operations>`."
msgstr ""

#: ../source/aggregation.txt:25
# e99eff6ff0bc4541933d5f3bb9fea15b
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/aggregation.txt:27
# f5fcb0d458224ce991eb95d9739e23e0
msgid "MongoDB's :doc:`aggregation framework </core/aggregation-pipeline>` is modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into an aggregated result."
msgstr ""

#: ../source/aggregation.txt:32
# f86e6695c5564867a099718bd0b2a1d5
msgid "The most basic pipeline stages provide *filters* that operate like queries and *document transformations* that modify the form of the output document."
msgstr ""

#: ../source/aggregation.txt:36
# c6b49e17f03a4e4d9e017150096ad966
msgid "Other pipeline operations provide tools for grouping and sorting documents by specific field or fields as well as tools for aggregating the contents of arrays, including arrays of documents. In addition, pipeline stages can use :ref:`operators <aggregation-expression-operators>` for tasks such as calculating the average or concatenating a string."
msgstr ""

#: ../source/aggregation.txt:43
# 71aca394c61743039dffc4d4e736bc43
msgid "The pipeline provides efficient data aggregation using native operations within MongoDB, and is the preferred method for data aggregation in MongoDB."
msgstr ""

#: ../source/aggregation.txt:47
# ea947ef85c954524b33673e4c861d30d
msgid "The aggregation pipeline can operate on a :doc:`sharded collection </core/sharding-introduction>`."
msgstr ""

#: ../source/aggregation.txt:50
# a881a647261a4774821b0671725da6aa
msgid "The aggregation pipeline can use indexes to improve its performance during some of its stages. In addition, the aggregation pipeline has an internal optimization phase. See :ref:`aggregation-pipeline-operators-and-performance` and :doc:`/core/aggregation-pipeline-optimization` for details."
msgstr ""

#: ../source/aggregation.txt:61
# 7136e4ee6a3d4b7084583a49c4b34f9e
msgid "Map-Reduce"
msgstr ""

#: ../source/aggregation.txt:63
# f3ddbe37e6664353a9082c65e90cf706
msgid "MongoDB also provides :doc:`map-reduce </core/map-reduce>` operations to perform aggregation. In general, map-reduce operations have two phases: a *map* stage that processes each document and *emits* one or more objects for each input document, and *reduce* phase that combines the output of the map operation. Optionally, map-reduce can have a *finalize* stage to make final modifications to the result. Like other aggregation operations, map-reduce can specify a query condition to select the input documents as well as sort and limit the results."
msgstr ""

#: ../source/aggregation.txt:72
# fb1fc355aa39469e82fb4b59ba888f48
msgid "Map-reduce uses custom JavaScript functions to perform the map and reduce operations, as well as the optional *finalize* operation. While the custom JavaScript provide great flexibility compared to the aggregation pipeline, in general, map-reduce is less efficient and more complex than the aggregation pipeline."
msgstr ""

#: ../source/aggregation.txt:78
# 32dfe50b41484c728e0e4464a414dd87
msgid "Map-reduce can operate on a :doc:`sharded collection </core/sharding-introduction>`. Map reduce operations can also output to a sharded collection. See :doc:`/core/aggregation-pipeline-sharded-collections` and :doc:`/core/map-reduce-sharded-collections` for details."
msgstr ""

#: ../source/aggregation.txt:84
# 1cf49cec982c4f3cbf3b2a0f0d1aa411
msgid "Starting in MongoDB 2.4, certain :program:`mongo` shell functions and properties are inaccessible in map-reduce operations. MongoDB 2.4 also provides support for multiple JavaScript operations to run at the same time. Before MongoDB 2.4, JavaScript code executed in a single thread, raising concurrency issues for map-reduce."
msgstr ""

#: ../source/aggregation.txt:96
# dda4577a1004430b84106a26fe800874
msgid "Single Purpose Aggregation Operations"
msgstr ""

#: ../source/aggregation.txt:98
# 523f39774f914bdd8f01ae608b8ab572
msgid "MongoDB also provides :method:`db.collection.count()`, :method:`db.collection.group()`, :method:`db.collection.distinct()`. special purpose database commands."
msgstr ""

#: ../source/aggregation.txt:102
# ba31a51f1bf44a7cb152b4d5d82e4cb3
msgid "All of these operations aggregate documents from a single collection. While these operations provide simple access to common aggregation processes, they lack the flexibility and capabilities of the aggregation pipeline and map-reduce."
msgstr ""

#: ../source/aggregation.txt:110
# f6bc5845c1a7461581b408703b835741
msgid "Additional Features and Behaviors"
msgstr ""

#: ../source/aggregation.txt:112
# fc8c12930f3347bb99742938deeead2b
msgid "For a feature comparison of the aggregation pipeline, map-reduce, and the special group functionality, see :doc:`/reference/aggregation-commands-comparison`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
# 3e98efa9685942a78bfe2b713b844210
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
# 428229b6f5e94f7681fd63d927c7e38f
msgid "`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics and Visualization Using Flight Data <http://www.mongodb.com/presentations/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
# 96fd68e516654638af3eb53f7ebee423
msgid "`MongoDB for Time Series Data: Analyzing Time Series Data Using the Aggregation Framework and Hadoop <http://www.mongodb.com/presentations/mongodb-time-series-data-part-2-analyzing-time-series-data-using-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
# 74be92a0814e41478236e995328f3fdb
msgid "`The Aggregation Framework <https://www.mongodb.com/presentations/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
# 2413c2002fcc4c76ac18bb0b09d13f37
msgid "`Webinar: Exploring the Aggregation Framework <https://www.mongodb.com/webinar/exploring-the-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
# 3d3c96923e6b4748b6ef8c941279068c
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

