# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/force-member-to-be-primary.txt:3
# cf4ccbf0b8b2414fb68766097044d8a8
msgid "Force a Member to Become Primary"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:8
# 50482cf1bd334bc1ae65ee02e5e2156a
msgid "Overview"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:10
# 5e7f0b25b3954be1bbe65d62935ad839
msgid "You can force a :term:`replica set` member to become :term:`primary` by giving it a higher :data:`~replSetGetConfig.members[n].priority` value than any other member in the set."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:15
# 49627f8a80bf4320b40efb8504a0363b
msgid "Optionally, you also can force a member never to become primary by setting its :data:`~replSetGetConfig.members[n].priority` value to ``0``, which means the member can never seek :ref:`election <replica-set-elections>` as primary. For more information, see :ref:`replica-set-secondary-only-members`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:21
# 011212c287c54c168a86405ce12c79b8
msgid "For more information on priorities, see :data:`~replSetGetConfig.members[n].priority`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:25
# a7ac0b427d9e4ae491c658d6bc0bd85f
msgid "Consideration"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:27
# 42f87a6631e94c92a9de5eec73c277e4
msgid "A majority of the configured members of a replica set *must* be available for a set to reconfigure a set or elect a primary. See :doc:`/core/replica-set-elections` for more information."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:32
# 9b5c8273c7364efbb5e2feac0723baf7
msgid "Procedures"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:37
# 6ff24e884b6d48218278dc08b5c91659
msgid "Force a Member to be Primary by Setting its Priority High"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:39
# b344d4051dcb487db0d79fa0589d0c05
msgid "This procedure assumes your current :term:`primary` is ``m1.example.net`` and that you'd like to instead make ``m3.example.net`` primary. The procedure also assumes you have a three-member :term:`replica set` with the configuration below. For more information on configurations, see :ref:`Replica Set Configuration Use <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:45
# ca2956cb0fc2416e9ca2e4aae02dec8e
msgid "This procedure assumes this configuration:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:68
# d8d13b4850ee42e48dfcf8807ca84c46
msgid "In a :program:`mongo` shell connected to the primary, use the following sequence of operations to make ``m3.example.net`` the primary:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:79
# 784c0c8b93b54c5c870741d50d85eb5c
msgid "The last statement calls :method:`rs.reconfig()` with the modified configuration document to configure ``m3.example.net`` to have a higher :data:`replSetGetConfig.members[n].priority` value than the other :program:`mongod` instances."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:84
# 1453be8e054949b784b4f33633054117
msgid "The following sequence of events occur:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:86
# 8824841027f346aa877497dd0df18611
msgid "``m3.example.net`` and ``m2.example.net`` sync with ``m1.example.net`` (typically within 10 seconds)."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:89
# 842fa47f79ad4048854c99e6aeb50b65
msgid "``m1.example.net`` sees that it no longer has highest priority and, in most cases, steps down. ``m1.example.net`` *does not* step down if ``m3.example.net``'s sync is far behind. In that case, ``m1.example.net`` waits until ``m3.example.net`` is within 10 seconds of its optime and then steps down. This minimizes the amount of time with no primary following failover."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:96
# 0327c5b8aaf84beb9034e2eaedc9535d
msgid "The step down forces on election in which ``m3.example.net`` becomes primary based on its :data:`priority <replSetGetConfig.members[n].priority>` setting."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:100
# f1a4438f494f4c2bb1513c2256cb29de
msgid "Optionally, if ``m3.example.net`` is more than 10 seconds behind ``m1.example.net``'s optime, and if you don't need to have a primary designated within 10 seconds, you can force ``m1.example.net`` to step down by running:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:109
# a5d7a75cb81a46269efb63c064b6a6d0
msgid "This prevents ``m1.example.net`` from being primary for 86,400 seconds (24 hours), even if there is no other member that can become primary. When ``m3.example.net`` catches up with ``m1.example.net`` it will become primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:114
# a07e08981c5a4a718ca5cd3f6f29cea6
msgid "If you later want to make ``m1.example.net`` primary again while it waits for ``m3.example.net`` to catch up, issue the following command to make ``m1.example.net`` seek election again:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:123
# 87bcb2ebf6d749e889401d9fab263365
msgid "The :method:`rs.freeze()` provides a wrapper around the :dbcommand:`replSetFreeze` database command."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:129
# 11bfb5c1f63e4d5c9028d56366526b5d
msgid "Force a Member to be Primary Using Database Commands"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:133
# 1326e21a91bd4b38943fdda296f039a3
msgid "Consider a :term:`replica set` with the following members:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:135
# 7a5fd20420514839906c915a80f5d082
msgid "``mdb0.example.net`` - the  current :term:`primary`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:136
# 969809df8a074c7888be1bd3b445193a
msgid "``mdb1.example.net`` - a :term:`secondary`."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:137
# 09bdffd40e9e4b838a78adb794f4fabe
msgid "``mdb2.example.net`` - a secondary ."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:139
# ad2eb9e70819447586abbd99fc93f854
msgid "To force a member to become primary use the following procedure:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:141
# e4ea1dea7a9644d989b1cfcd247e95a6
msgid "In a :program:`mongo` shell, run :method:`rs.status()` to ensure your replica set is running as expected."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:144
# 68312aa9a2ae4f999748f3b78c024016
msgid "In a :program:`mongo` shell connected to the :program:`mongod` instance running on ``mdb2.example.net``, freeze ``mdb2.example.net`` so that it does not attempt to become primary for 120 seconds."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:153
# 0f8ab88517dc4c75958ff3121d3dc6b0
msgid "In a :program:`mongo` shell connected the :program:`mongod` running on ``mdb0.example.net``, step down this instance that the :program:`mongod` is not eligible to become primary for 120 seconds:"
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:162
# 6442e2b423994a9aa41ecfb2db7686dc
msgid "``mdb1.example.net`` becomes primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:164
# e0b509b6bbd8481ba423bda6dc8d1a67
msgid "During the transition, there is a short window where the set does not have a primary."
msgstr ""

#: ../source/tutorial/force-member-to-be-primary.txt:167
# 6d71a4e4d83a4cb6b6861cf53d9522d1
msgid "For more information, consider the :method:`rs.freeze()` and :method:`rs.stepDown()` methods that wrap the :dbcommand:`replSetFreeze` and :dbcommand:`replSetStepDown` commands."
msgstr ""

