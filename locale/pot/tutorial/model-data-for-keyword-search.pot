# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-data-for-keyword-search.txt:3
# c0edbe77c2954b5e84fe38760c9ce4f7
msgid "Model Data to Support Keyword Search"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:0
# e78d32eaffa84d66a96044faf2f15626
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:15
# 0d93a45710294a159d30bb072a8ac566
msgid "Keyword search is *not* the same as text search or full text search, and does not provide stemming or other text-processing features. See the :ref:`limit-keyword-indexes` section for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:20
# b5de765c7ff247358d13f57a0642e85c
msgid "In 2.4, MongoDB provides a text search feature. See :doc:`/core/index-text` for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:23
# 7198d409c30a42fca08ca20632c8132f
msgid "If your application needs to perform queries on the content of a field that holds text you can perform exact matches on the text or use :query:`$regex` to use regular expression pattern matches. However, for many operations on text, these methods do not satisfy application requirements."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:29
# 518f2e8867d340f5a0bc2ceec39a16a4
msgid "This pattern describes one method for supporting keyword search using MongoDB to support application search functionality, that uses keywords stored in an array in the same document as the text field. Combined with a :ref:`multi-key index <index-type-multikey>`, this pattern can support application's keyword search operations."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:36
# 76174fb7f57b40239f758fc3fb820348
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:38
# 2affa089be5f4aaf96c1bcff51fac484
msgid "To add structures to your document to support keyword-based queries, create an array field in your documents and add the keywords as strings in the array. You can then create a :ref:`multi-key index <index-type-multi-key>` on the array and create queries that select values from the array."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:0
# 21f9c00a42e24e918b5dddee7b593632
msgid "Example"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:46
# 41575b8c3f924d78bca378f80e7431de
msgid "Given a collection of library volumes that you want to provide topic-based search. For each volume, you add the array ``topics``, and you add as many keywords as needed for a given volume."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:50
# ef535b37370c414190f5706ade5d9d12
msgid "For the ``Moby-Dick`` volume you might have the following document:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:62
# 5df51424ad72422d98c9596bd8c1be29
msgid "You then create a multi-key index on the ``topics`` array:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:68
# e2b4a6acc0074b6bb70a1cce91cf2606
msgid "The multi-key index creates separate index entries for each keyword in the ``topics`` array. For example the index contains one entry for ``whaling`` and another for ``allegory``."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:72
# 3b04a80735c34c9f8551ddc106e971c7
msgid "You then query based on the keywords. For example:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:78
# 3656ad2c1ee04129962950636b8012b1
msgid "An array with a large number of elements, such as one with several hundreds or thousands of keywords will incur greater indexing costs on insertion."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:85
# 95ed2dfd74f64d90a6d060308b5a79c3
msgid "Limitations of Keyword Indexes"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:87
# 2f4de61cc41c495faf057dd874dc4406
msgid "MongoDB can support keyword searches using specific data models and :ref:`multi-key indexes <index-type-multikey>`; however, these keyword indexes are not sufficient or comparable to full-text products in the following respects:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:92
# 689b42f47b0446cda2e7db5482499a89
msgid "*Stemming*. Keyword queries in MongoDB can not parse keywords for root or related words."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:95
# df923b1252a144c0921e7fa42242c688
msgid "*Synonyms*. Keyword-based search features must provide support for synonym or related queries in the application layer."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:98
# d7c5d4f3c9e740a6aa4a57c0202cf76c
msgid "*Ranking*. The keyword look ups described in this document do not provide a way to weight results."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:101
# ffdf6f15b6504a7ba35604992678b128
msgid "*Asynchronous Indexing*. MongoDB builds indexes synchronously, which means that the indexes used for keyword indexes are always current and can operate in real-time. However, asynchronous bulk indexes may be more efficient for some kinds of content and workloads."
msgstr ""

