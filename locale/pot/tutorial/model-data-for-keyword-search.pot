# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-data-for-keyword-search.txt:3
# 7183e296d04b461a8678636f226eac7e
msgid "Model Data to Support Keyword Search"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:9
# 179956e76f37427ca8cee36c900811a6
msgid "Keyword search is *not* the same as text search or full text search, and does not provide stemming or other text-processing features. See the :ref:`limit-keyword-indexes` section for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:14
# 0eed2c58a97f406cac579d372306b2cc
msgid "In 2.4, MongoDB provides a text search feature. See :doc:`/core/index-text` for more information."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:17
# 6ec8d96d87924f4db5c4d21c630eabee
msgid "If your application needs to perform queries on the content of a field that holds text you can perform exact matches on the text or use :query:`$regex` to use regular expression pattern matches. However, for many operations on text, these methods do not satisfy application requirements."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:23
# 811367fd93f747f99aaa0798841a6f73
msgid "This pattern describes one method for supporting keyword search using MongoDB to support application search functionality, that uses keywords stored in an array in the same document as the text field. Combined with a :ref:`multi-key index <index-type-multikey>`, this pattern can support application's keyword search operations."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:30
# 87d026c884dd494da233ecb4a7e7f5ee
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:32
# 0641be33e57d4da9a1920f0128184afd
msgid "To add structures to your document to support keyword-based queries, create an array field in your documents and add the keywords as strings in the array. You can then create a :ref:`multi-key index <index-type-multi-key>` on the array and create queries that select values from the array."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:0
# 2ff2a26cce644e34bce9ac1504ed57a0
msgid "Example"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:40
# fa16364b7a47478c936db4cdc7de2ad2
msgid "Given a collection of library volumes that you want to provide topic-based search. For each volume, you add the array ``topics``, and you add as many keywords as needed for a given volume."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:44
# 6c54bd6ed0ee48f4be9c9e3c089333df
msgid "For the ``Moby-Dick`` volume you might have the following document:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:56
# 0daa116dc8704ea299ab8a1de11120c5
msgid "You then create a multi-key index on the ``topics`` array:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:62
# 74fb71a3e7c8474fb745d2fb6a7c3bb4
msgid "The multi-key index creates separate index entries for each keyword in the ``topics`` array. For example the index contains one entry for ``whaling`` and another for ``allegory``."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:66
# 376ceab61182423ba411c5ebca7395e5
msgid "You then query based on the keywords. For example:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:72
# 5b7e8335ca5a4a998b1c7ec67c09fdd9
msgid "An array with a large number of elements, such as one with several hundreds or thousands of keywords will incur greater indexing costs on insertion."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:79
# 292f6a79bfc64e7d95c049b639e13ef0
msgid "Limitations of Keyword Indexes"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:81
# 56d384a1f1284ba0a98d48fe3834e169
msgid "MongoDB can support keyword searches using specific data models and :ref:`multi-key indexes <index-type-multikey>`; however, these keyword indexes are not sufficient or comparable to full-text products in the following respects:"
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:86
# 767eaca0b9cb4d428eb93e7ce30f6640
msgid "*Stemming*. Keyword queries in MongoDB can not parse keywords for root or related words."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:89
# eac2130a3b48483c9308b4ad94b2876a
msgid "*Synonyms*. Keyword-based search features must provide support for synonym or related queries in the application layer."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:92
# 50cf0bb7b7c34d12b530fb73d972494b
msgid "*Ranking*. The keyword look ups described in this document do not provide a way to weight results."
msgstr ""

#: ../source/tutorial/model-data-for-keyword-search.txt:95
# 483dfc04bff44dbf9400f15b2ed60078
msgid "*Asynchronous Indexing*. MongoDB builds indexes synchronously, which means that the indexes used for keyword indexes are always current and can operate in real-time. However, asynchronous bulk indexes may be more efficient for some kinds of content and workloads."
msgstr ""

