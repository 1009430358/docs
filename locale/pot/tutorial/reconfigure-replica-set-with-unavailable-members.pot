# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:3
# e54939eccbb041afba629572561c5e3a
msgid "Reconfigure a Replica Set with Unavailable Members"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:7
# b1eca0189aed4de3a93ec89ce5002998
msgid "To reconfigure a :term:`replica set` when a **majority** of members are available, use the :method:`rs.reconfig()` operation on the current :term:`primary`, following the example in the :ref:`Replica Set Reconfiguration Procedure <replica-set-reconfiguration-usage>`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:14
# cc62726d803d451ba4bc674d117490d2
msgid "This document provides the following options for re-configuring a replica set when *only* a **minority** of members are accessible:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:17
# d45777280f3d4f5cbbceb0e3b81b5b44
msgid ":ref:`replica-set-force-reconfiguration`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:18
# c8193755030f4060aa1ed79776243e9d
msgid ":ref:`replica-set-reconfigure-by-replacing`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:20
# 8e184efa14194a97aecbeaea50da3de8
msgid "You may need to use one of these procedures, for example, in a geographically distributed replica set, where *no* local group of members can reach a majority. See :ref:`replica-set-elections` for more information on this situation."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:29
# 7771da23d510445d97fb6cfd4b6bf670
msgid "Reconfigure by Forcing the Reconfiguration"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:33
# 42d20a69a6424899910aa55088fadb81
msgid "This procedure lets you recover while a majority of :term:`replica set` members are down or unreachable. You connect to any surviving member and use the ``force`` option to the :method:`rs.reconfig()`  method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:37
# 2a3516a3d64e44e481f65946893ea76a
msgid "The ``force`` option forces a new configuration onto the member. Use this procedure only to recover from catastrophic interruptions. Do not use ``force`` every time you reconfigure. Also, do not use the ``force`` option in any automatic scripts and do not use ``force`` when there is still a :term:`primary`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:42
# 592f680da301489382dc555c5db6fc96
msgid "To force reconfiguration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:44
# 29404dc48085421990e5c5b981f80127
msgid "Back up a surviving member."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:46
# 28377608348946f2ab14da1ce0442dd2
msgid "Connect to a surviving member and save the current configuration. Consider the following example commands for saving the configuration:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:55
# c2ed03f4c5e54621b5d1911846e67ffa
msgid "On the same member, remove the down and unreachable members of the replica set from the :data:`~replSetGetConfig.members` array by setting the array equal to the surviving members alone. Consider the following example, which uses the ``cfg`` variable created in the previous step:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:65
# b3b3b04834b845bc8d9fe8c625382cfe
msgid "On the same member, reconfigure the set by using the :method:`rs.reconfig()` command with the ``force`` option set to ``true``:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:73
# d923e4be675b4f2dbd3570f699c32b84
msgid "This operation forces the secondary to use the new configuration. The configuration is then propagated to all the surviving members listed in the ``members`` array. The replica set then elects a new primary."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:79
# 62ee226a15aa40a190eef0dd1d96fdc0
msgid "When you use ``force : true``, the version number in the replica set configuration increases significantly, by tens or hundreds of thousands. This is normal and designed to prevent set version collisions if you accidentally force re-configurations on both sides of a network partition and then the network partitioning ends."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:86
# 3662d2aa10ed45c49eaedb4edc01189a
msgid "If the failure or partition was only temporary, shut down or decommission the removed members as soon as possible."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:92
# 6f67d0204ceb42db92683895ba76e283
msgid "Reconfigure by Replacing the Replica Set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:94
# cdb28661f9f6428692fbdc51a04e0ed7
msgid "Use the following procedure **only** for versions of MongoDB prior to version 2.0. If you're running MongoDB 2.0 or later, use the above procedure, :ref:`replica-set-force-reconfiguration`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:98
# cd4bbfb828a94245b6fe8ea517b71fc4
msgid "These procedures are for situations where a *majority* of the :term:`replica set` members are down or unreachable. If a majority is *running*, then skip these procedures and instead use the :method:`rs.reconfig()` command according to the examples in :ref:`replica-set-reconfiguration-usage`."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:104
# 18ba98ec38204871b5c246a9bb1b5ce3
msgid "If you run a pre-2.0 version and a majority of your replica set is down, you have the two options described here. Both involve replacing the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:109
# b0e5ded7b04343e08570b8353e3e3a12
msgid "Reconfigure by Turning Off Replication"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:111
# a5d9b642284141f98f5f71564e7fdebf
msgid "This option replaces the :term:`replica set` with a :term:`standalone` server."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:113
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:151
# 81c69dacf25e43f5b9dbdd2713936dc0
# 441147d40c0d42dcae052416a952182c
msgid "Stop the surviving :program:`mongod` instances. To ensure a clean shutdown, use an existing :term:`control script` or use the :method:`db.shutdownServer()` method."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:116
#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:155
# d63022650e3441c1b2e60f405c844fd0
# e36960899dcb42d6888a859d9771b738
msgid "For example, to use the :method:`db.shutdownServer()` method, connect to the server using the :program:`mongo` shell and issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:125
# 986f7bcebcbf45a9b586c30f75fe869d
msgid "Create a backup of the data directory (i.e. :setting:`~storage.dbPath`) of the surviving members of the set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:0
# 4d8ec9d806944068891bfe6c1de33f13
msgid "Optional"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:131
# e276700dbb564606aa018416f89d0fef
msgid "Restart one of the :program:`mongod` instances *without* the :option:`--replSet <mongod --replSet>` parameter."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:134
# eb7939e7bf274a5391b4fbc3a55eca45
msgid "The data is now accessible and provided by a single server that is not a replica set member. Clients can use this server for both reads and writes."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:138
# 00ea156dd9844f4081c7a2566b04046a
msgid "When possible, re-deploy a replica set to provide redundancy and to protect your deployment from operational interruption."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:144
# d9b232a588564ebd961af1473a73356f
msgid "Reconfigure by \"Breaking the Mirror\""
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:146
# ba87a6d3e1fb4a7b873718ca97c8a543
msgid "This option selects a surviving :term:`replica set` member to be the new :term:`primary` and to \"seed\" a new replica set. In the following procedure, the new primary is ``db0.example.net``. MongoDB copies the data from ``db0.example.net`` to all the other members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:164
# 64d756ccba274e1ebb613d9b7a67a117
msgid "Move the data directories (i.e. :setting:`~storage.dbPath`) for all the members except ``db0.example.net``, so that all the members except ``db0.example.net`` have empty data directories. For example:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:173
# a53948b0786e4f8d88cf18fe50db5f17
msgid "Move the data files for ``local`` database (i.e. ``local.*``) so that ``db0.example.net`` has no local database. For example"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:181
# 877f402bffda4767ad04bb4ad2dbae7f
msgid "Start each member of the replica set normally."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:183
# c6786a76d8764ca8937fae882c9d5091
msgid "Connect to ``db0.example.net`` in a :program:`mongo` shell and run :method:`rs.initiate()` to initiate the replica set."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:186
# 3c74307a2ffe4f2eac60fa3e262f8c29
msgid "Add the other set members using :method:`rs.add()`. For example, to add a member running on ``db1.example.net`` at port ``27017``, issue the following command:"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:194
# 7e3c5a6671ac41e3aaf8ead234057126
msgid "MongoDB performs an initial sync on the added members by copying all data from ``db0.example.net`` to the added members."
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:197
# c9988fd98ed54a0d88a008b3c76f99de
msgid ":doc:`/tutorial/resync-replica-set-member`"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 3cf2f0e6c7604f9cab3365f77e09b377
msgid "replica set"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:25
# 3cf2f0e6c7604f9cab3365f77e09b377
msgid "reconfiguration"
msgstr ""

