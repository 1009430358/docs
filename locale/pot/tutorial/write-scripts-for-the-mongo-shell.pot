# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:3
# b8de83924e514c058eb9f6ab80c862cf
msgid "Write Scripts for the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:0
# 5b0554adac86455aaf7f88c7157648c3
msgid "On this page"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:13
# 18fddc80a72245e2a00ff182c771c7f0
msgid "You can write scripts for the :program:`mongo` shell in JavaScript that manipulate data in MongoDB or perform administrative operation. For more information about the :program:`mongo` shell, see the :ref:`running-js-scripts-in-mongo-on-mongod-host` section for more information about using these :program:`mongo` script."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:19
# 4971be422e06478b9a6b2e6929029eb8
msgid "This tutorial provides an introduction to writing JavaScript that uses the :program:`mongo` shell to access MongoDB."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:25
# 2becb9ef3f8d4172a0583695c20e3d62
msgid "Opening New Connections"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:27
# 069f9464003f4de09dbfe6d3f0c6d05d
msgid "From the :program:`mongo` shell or from a JavaScript file, you can instantiate database connections using the :method:`Mongo()` constructor:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:37
# a507532de13e4a08aa7c7e073b941593
msgid "Consider the following example that instantiates a new connection to the MongoDB instance running on localhost on the default port and sets the global ``db`` variable to ``myDatabase`` using the :method:`~Mongo.getDB()` method:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:47
# a3c016e54dd9498cafa12c23b2fb6baa
msgid "If connecting to a MongoDB instance that has enforces access control, you can use the :method:`db.auth()` method to authenticate."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:50
# d8708db7f303498a842af8e1e02972b6
msgid "Additionally, you can use the :method:`connect()` method to connect to the MongoDB instance. The following example connects to the MongoDB instance that is running on ``localhost`` with the non-default port ``27020`` and set the global ``db`` variable:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:59
# 53e7945b221948ff8e782a546b81b18b
msgid ":doc:`/reference/method/`"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:62
# e20c4efa74a840f1806bcdb428c4e6cb
msgid "Differences Between Interactive and Scripted ``mongo``"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:64
# c2c2de5d1595444d93c17adfd0480ee1
msgid "When writing scripts for the :program:`mongo` shell, consider the following:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:67
# 799b60646b004157a2037f2c22c1ac2f
msgid "To set the ``db`` global variable, use the :method:`~Mongo.getDB()` method or the :method:`connect()` method. You can assign the database reference to a variable other than ``db``."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:71
# 66e45bfdbb3040d4a5cf87326793ff01
msgid "Write operations in the :program:`mongo` shell use a write concern of :ref:`{ w: 1 } <wc-w>` by default. If performing bulk operations, use the :method:`Bulk()` methods. See :ref:`write-methods-incompatibility` for more information."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:76
# d4d76972d2bc4d9bac82ecbe649942ff
msgid "Before MongoDB 2.6, call :method:`db.getLastError()` explicitly to wait for the result of :doc:`write operations </crud>`."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:81
# 0c43a75be022442593b276f2d8e3ce7a
msgid "You **cannot** use any shell helper (e.g. ``use <dbname>``, ``show dbs``, etc.) inside the JavaScript file because they are not valid JavaScript."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:85
# b74a783293d64768bee5a21fff5b4d81
msgid "The following table maps the most common :program:`mongo` shell helpers to their JavaScript equivalents."
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:4
# 80254c45c64d42d68ca386272ab4e816
msgid "Shell Helpers"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:6
# 9c7a4fa6e158413cb9bdbbf004778eeb
msgid "JavaScript Equivalents"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:8
# bdbb316de3814b28ba9e6df4e465b6fa
msgid "``show dbs``, ``show databases``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:16
# 08f29a1a5194423da1d24fc9ab0225a0
msgid "``use <db>``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:24
# 13a79119989941f8b65eac5fd9223931
msgid "``show collections``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:32
# 489b6b0fdd1b4db4a32d9f475e4352cb
msgid "``show users``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:40
# 9122aa75f0a34f93b3fd46acc55d432b
msgid "``show roles``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:48
# f8a373b2409749479bd09f21f6c910e1
msgid "``show log <logname>``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:56
# 044bfaef27a14412ba22b7423a541566
msgid "``show logs``"
msgstr ""

#: ../source/includes/table/helpers-to-javascript.rst:64
# 383ae8c9ffba4778bec03f2789034d95
msgid "``it``"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:90
# 0d83da4509454c57912948bc7c21991d
msgid "In interactive mode, :program:`mongo` prints the results of operations including the content of all cursors. In scripts, either use the JavaScript ``print()`` function or the :program:`mongo` specific ``printjson()`` function which returns formatted JSON."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:0
# a54dc01674a340cc95a10ed8b41d4e75
msgid "Example"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:97
# 6d9134723d1248c3a144d01bebeec1c3
msgid "To print all items in a result cursor in :program:`mongo` shell scripts, use the following idiom:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:110
# 6d34ea0d0fc14dff975b16c55aeb0dd3
msgid "Scripting"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:112
# dcc4003463ed4147885beba27e00ff7b
msgid "From the system prompt, use :program:`mongo` to evaluate JavaScript."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:115
# f038072d10b94363919bfde695daec88
msgid "``--eval`` option"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:117
# 6b572973ae2f44faa148096c3f648c3f
msgid "Use the :option:`--eval <mongo --eval>` option to :program:`mongo` to pass the shell a JavaScript fragment, as in the following:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:124
# 52d716255f0248f097df1f9f0bbde890
msgid "This returns the output of :method:`db.getCollectionNames()` using the :program:`mongo` shell connected to the :program:`mongod` or :program:`mongos` instance running on port ``27017`` on the ``localhost`` interface."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:132
# aec16a70fd1145b78276062e4f750754
msgid "Execute a JavaScript file"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:134
# d116026790df4d438330806e7686e2cb
msgid "You can specify a ``.js`` file to the :program:`mongo` shell, and :program:`mongo` will execute the JavaScript directly. Consider the following example:"
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:142
# 358a8193217145dd9a1965368a633cd7
msgid "This operation executes the ``myjsfile.js`` script in a :program:`mongo` shell that connects to the ``test`` :term:`database` on the :program:`mongod` instance accessible via the ``localhost`` interface on port ``27017``."
msgstr ""

#: ../source/tutorial/write-scripts-for-the-mongo-shell.txt:147
# 8b345b403c8a4d36a0a5c04f80b262f1
msgid "Alternately, you can specify the mongodb connection parameters inside of the javascript file using the ``Mongo()`` constructor. See :ref:`mongo-shell-new-connections` for more information."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:1
# 83e6e6fa27de4276b8c97a89582ef7e0
msgid "You can execute a ``.js`` file from within the :program:`mongo` shell, using the :method:`load()` function, as in the following:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:8
# e5cf5043480d4362a7f125183d270163
msgid "This function loads and executes the :file:`myjstest.js` file."
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:10
# 70104fd816064e3abf03a0c274bca08c
msgid "The :method:`load()` method accepts relative and absolute paths. If the current working directory of the :program:`mongo` shell is :file:`/data/db`, and the :file:`myjstest.js` resides in the :file:`/data/db/scripts` directory, then the following calls within the :program:`mongo` shell would be equivalent:"
msgstr ""

#: ../source/includes/fact-execute-javascript-from-shell.rst:21
# 4015f8694b244193a3a5a444d4e7d005
msgid "There is no search path for the :method:`load()` function. If the desired script is not in the current working directory or the full specified path, :program:`mongo` will not be able to access the file."
msgstr ""

