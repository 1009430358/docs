# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/iterate-a-cursor.txt:5
# 340675c9b4a7436ea9a8d4d431f7c381
msgid "Iterate a Cursor in the ``mongo`` Shell"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:0
# a22bc193df064959a48c1af620b8c4a0
msgid "On this page"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:15
# c5ab0112e1a94121a75dd189df93f5f1
msgid "The :method:`db.collection.find()` method returns a cursor. To access the documents, you need to iterate the cursor. However, in the :program:`mongo` shell, if the returned cursor is not assigned to a variable using the ``var`` keyword, then the cursor is automatically iterated up to 20 times [#set-shell-batch-size]_ to print up to the first 20 documents in the results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:22
# b75967a0270b4f6aad9a0af56d2fbae6
msgid "The following examples describe ways to manually iterate the cursor to access the documents or to use the iterator index."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:26
# 961c4d5bccde44f6bd579e366fb674f1
msgid "Manually Iterate the Cursor"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:28
# 3c435a05ecd946aaa41c430263b1eab2
msgid "In the :program:`mongo` shell, when you assign the cursor returned from the :method:`find() <db.collection.find()>` method to a variable using the ``var`` keyword, the cursor does not automatically iterate."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:32
# df10a2e7ef434515ac4d41ef2ddef668
msgid "You can call the cursor variable in the shell to iterate up to 20 times [#set-shell-batch-size]_ and print the matching documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:42
# 3812db643fd94bcab180eb7ba14650a5
msgid "You can also use the cursor method :method:`next() <cursor.next()>` to access the documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:53
# a046f6437e004e4384f3cde39c4fad18
msgid "As an alternative print operation, consider the ``printjson()`` helper method to replace ``print(tojson())``:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:64
# fdd13e444411408dba9ebfca8b6d7c03
msgid "You can use the cursor method :method:`forEach() <cursor.forEach()>` to iterate the cursor and access the documents, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:74
# 343b94659b7a4e66bf6e018881f0b2e8
msgid "See :ref:`JavaScript cursor methods <js-query-cursor-methods>` and your :doc:`driver </applications/drivers>` documentation for more information on cursor methods."
msgstr ""

#: ../source/includes/footnote-set-shell-batch-size.rst:1
# 268b2ac65f3a42efb42bbbd16c39bdb3
msgid "You can use the ``DBQuery.shellBatchSize`` to change the number of iteration from the default value ``20``. See :ref:`mongo-shell-executing-queries` for more information."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:81
# 9ad3b49ca48f4b4ba19000e5e6b46fb6
msgid "Iterator Index"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:83
# 2bd1a1ae738b493c8bd0b59f81813447
msgid "In the :program:`mongo` shell, you can use the :method:`~cursor.toArray()` method to iterate the cursor and return the documents in an array, as in the following:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:93
# 1b16d62a7b5e4957912641b6631ad749
msgid "The :method:`~cursor.toArray()` method loads into RAM all documents returned by the cursor; the :method:`~cursor.toArray()` method exhausts the cursor."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:97
# 38c0846ae45d4ceebc71798dda85f2e3
msgid "Additionally, some :doc:`drivers </applications/drivers>` provide access to the documents by using an index on the cursor (i.e. ``cursor[index]``). This is a shortcut for first calling the :method:`~cursor.toArray()` method and then using an index on the resulting array."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:103
# 19d8caee8f32411e83bc411070fa601f
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:110
# d91c42a6617d404f9eafe669d4c22301
msgid "The ``myCursor[1]`` is equivalent to the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:119
# 4cc6184f07fc4dadbc6b96510c349643
msgid "Cursor Behaviors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:122
# 6c308a81e5d84c6f8dd2d42fd8153fe3
msgid "Closure of Inactive Cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:124
# 1490b3ddc4eb4f1c992dc86955a86ce9
msgid "By default, the server will automatically close the cursor after 10 minutes of inactivity, or if client has exhausted the cursor. To override this behavior in the :program:`mongo` shell, you can use the :method:`cursor.noCursorTimeout()` method:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:133
# b820957b75104801bdd9416db812c3fb
msgid "After setting the ``noCursorTimeout`` option, you must either close the cursor manually with :method:`cursor.close()` or by exhausting the cursor's results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:136
# 0362ce69489241fb92c9837397665472
msgid "See your :doc:`driver </applications/drivers>` documentation for information on setting the ``noCursorTimeout`` option."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:142
# c37eb0f633bb4c1bb77810e24616a199
msgid "Cursor Isolation"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:144
# b8d3ce737fc746bb826565039e27adaf
msgid "As a cursor returns documents, other operations may interleave with the query. For the :doc:`MMAPv1 </core/mmapv1>` storage engine, intervening write operations on a document may result in a cursor that returns a document more than once if that document has changed. To handle this situation, see the information on :ref:`snapshot mode <faq-developers-isolate-cursors>`."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:154
# b57ecbc2fb824d5fb2a7050d73cc9088
msgid "Cursor Batches"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:156
# 4ee64e2bb6a34ec0b6d1c54613f3082b
msgid "The MongoDB server returns the query results in batches. Batch size will not exceed the :ref:`maximum BSON document size <limit-bson-document-size>`. For most queries, the *first* batch returns 101 documents or just enough documents to exceed 1 megabyte. Subsequent batch size is 4 megabytes. To override the default size of the batch, see :method:`~cursor.batchSize()` and :method:`~cursor.limit()`."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:164
# 4629d7a6e2734b42bea2f1523b3955d8
msgid "For queries that include a sort operation *without* an index, the server must load all the documents in memory to perform the sort before returning any results."
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:168
# 3adfde65d8d04c9991c33faa3bc9a66d
msgid "As you iterate through the cursor and reach the end of the returned batch, if there are more results, :method:`cursor.next()` will perform a :data:`getmore operation <currentOp.op>` to retrieve the next batch. To see how many documents remain in the batch as you iterate the cursor, you can use the :method:`~cursor.objsLeftInBatch()` method, as in the following example:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:184
# ad7c0ef46aeb43769942c253c05f0815
msgid "Cursor Information"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:186
# 99ba3e9958c046118407d19a0cf2e342
msgid "The :method:`db.serverStatus()` method returns a document that includes a :serverstatus:`metrics` field. The :serverstatus:`metrics` field contains a :serverstatus:`metrics.cursor` field with the following information:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:192
# 36560379dc0744b483b50519002c6dbd
msgid "number of timed out cursors since the last server restart"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:194
# c6593d9992ea498e94b4b7eea30b5fab
msgid "number of open cursors with the option :data:`DBQuery.Option.noTimeout` set to prevent timeout after a period of inactivity"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:198
# 184032bd15704a12895bb7cdcecb4478
msgid "number of \"pinned\" open cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:200
# 4982e67a9d844cbaac8fffea369781b0
msgid "total number of open cursors"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:202
# 7bd40ab3ba9642d2917f5761bf550027
msgid "Consider the following example which calls the :method:`db.serverStatus()` method and accesses the ``metrics`` field from the results and then the ``cursor`` field from the ``metrics`` field:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:211
# dc5b87fb4bab47cb99be5ed00c66955d
msgid "The result is the following document:"
msgstr ""

#: ../source/tutorial/iterate-a-cursor.txt:224
# 05cdf2f531f54224abf2e171a53a0bcc
msgid ":method:`db.serverStatus()`"
msgstr ""

