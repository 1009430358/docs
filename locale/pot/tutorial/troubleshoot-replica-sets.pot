# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/troubleshoot-replica-sets.txt:3
# 223a8ca4bd4b437f89c20947fcdc563c
msgid "Troubleshoot Replica Sets"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:7
# 32abf59594134a05af5e3c635e311f01
msgid "This section describes common strategies for troubleshooting :term:`replica set` deployments."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:13
# dc44676ecc524c24915746a7e2e67daf
msgid "Check Replica Set Status"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:15
# 9e8b99f901f946ee9f727a0ca370deb9
msgid "To display the current state of the replica set and current state of each member, run the :method:`rs.status()` method in a :program:`mongo` shell connected to the replica set's :term:`primary`. For descriptions of the information displayed by :method:`rs.status()`, see :doc:`/reference/command/replSetGetStatus`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:23
# fcb1af9fe5e945c7bffdad3a59505733
msgid "The :method:`rs.status()` method is a wrapper that runs the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:29
# 91a61b1fe4c14e0fac34ba8abbe89812
msgid "Check the Replication Lag"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:31
# e407d737fa074c27b063a3d8dcf7075e
msgid "Replication lag is a delay between an operation on the :term:`primary` and the application of that operation from the :term:`oplog` to the :term:`secondary`. Replication lag can be a significant issue and can seriously affect MongoDB :term:`replica set` deployments. Excessive replication lag makes \"lagged\" members ineligible to quickly become primary and increases the possibility that distributed read operations will be inconsistent."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:39
# 4596dc000db5421c805b6166e4ea60ae
msgid "To check the current length of replication lag:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:41
# c1842f43413b4db0b95786962f800925
msgid "In a :program:`mongo` shell connected to the primary, call the :method:`rs.printSlaveReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:44
# 4bbdc1b2b9be4c42974d2578d44f4642
msgid "Returns the ``syncedTo`` value for each member, which shows the time when the last oplog entry was written to the secondary, as shown in the following example:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:57
# c5e863d76b5b4979a11ddc22528789d9
msgid "A :ref:`delayed member <replica-set-delayed-members>` may show as ``0`` seconds behind the primary when the inactivity period on the primary is greater than the :data:`~replSetGetConfig.members[n].slaveDelay` value."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:64
# f72e7b059f404a13b48af891f72d9331
msgid "The :method:`rs.status()` method is a wrapper around the :dbcommand:`replSetGetStatus` database command."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:67
# a9833a2ccd5e4d9bab54f9dbb6e987bf
msgid "Monitor the rate of replication by watching the oplog time in the \"replica\" graph in the |mms-home| and in :products:`Ops Manager, an on-premise solution available in MongoDB Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>`. For more information see the |mms-docs| and :opsmgr:`Ops Manager documentation </>`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:77
# 4ead73dd25e84af48fe13cb5e5fc6a01
msgid "Possible causes of replication lag include:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:79
# dc37c7c2dbb248429f38c5b680ff8e80
msgid "**Network Latency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:81
# 6f8c4d94b9f04c4aab9f07f9deff1b6e
msgid "Check the network routes between the members of your set to ensure that there is no packet loss or network routing issue."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:84
# 240e675600f0452685ec46e89d04d2e9
msgid "Use tools including ``ping`` to test latency between set members and ``traceroute`` to expose the routing of packets network endpoints."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:88
# 404c2409792440e2a23dd58f5c940ca6
msgid "**Disk Throughput**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:90
# 49c7c4088e574509ac143a067f6de830
msgid "If the file system and disk device on the secondary is unable to flush data to disk as quickly as the primary, then the secondary will have difficulty keeping state. Disk-related issues are incredibly prevalent on multi-tenant systems, including virtualized instances, and can be transient if the system accesses disk devices over an IP network (as is the case with Amazon's EBS system.)"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:98
# fec068ecc03c4102af06ee8c5c233af0
msgid "Use system-level tools to assess disk status, including ``iostat`` or ``vmstat``."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:101
# 65ed812e75134f70bf645374d51da0f6
msgid "**Concurrency**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:103
# b7e34cba589b44fabdbb263cb10913e8
msgid "In some cases, long-running operations on the primary can block replication on secondaries. For best results, configure :ref:`write concern <write-concern>` to require confirmation of replication to secondaries, as described in :ref:`replica set write concern <replica-set-write-concern>`. This prevents write operations from returning if replication cannot keep up with the write load."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:110
# 5e30f30687c14c91a4c27d179632b0c4
msgid "Use the :term:`database profiler` to see if there are slow queries or long-running operations that correspond to the incidences of lag."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:113
# 0bfc26c04d8e41c5a4107bd2cdcd4c40
msgid "**Appropriate Write Concern**"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:115
# feeb5e8767b049fbb8ba36fe52152052
msgid "If you are performing a large data ingestion or bulk load operation that requires a large number of writes to the primary, particularly with :ref:`unacknowledged write concern <write-concern-unacknowledged>`, the secondaries will not be able to read the oplog fast enough to keep up with changes."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:121
# 8b06e87162e043c2a093506f6427a136
msgid "To prevent this, require :ref:`write acknowledgment or journaled write concern <write-operations-write-concern>` after every 100, 1,000, or an another interval to provide an opportunity for secondaries to catch up with the primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:126
# 5251f57dc0f1456e8cb59438ab5d6c87
msgid "For more information see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:128
# 9f6b52a94ed740e693c9f351db2b242f
msgid ":ref:`Replica Acknowledge Write Concern <replica-set-write-concern>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:129
# 5bf38283ee5d4602b1e2ceac09ba1b16
msgid ":ref:`Replica Set Write Concern <write-operations-replica-sets>`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:130
# a0d0e484f69e483d88f81c92a5bba059
msgid ":ref:`replica-set-oplog-sizing`"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:135
# 6455c159a95746768c2fd6a5f80953bc
msgid "Test Connections Between all Members"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:137
# 7a10fe1074d6499da30f6369058b7666
msgid "All members of a :term:`replica set` must be able to connect to every other member of the set to support replication. Always verify connections in both \"directions.\"  Networking topologies and firewall configurations can prevent normal and required connectivity, which can block replication."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:143
# e5ebd9f3f1684541818ea0ec20563f62
msgid "Consider the following example of a bidirectional test of networking:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
#: ../source/tutorial/troubleshoot-replica-sets.txt:0
# 3e482cc790e3405597013fd205eddca4
# 25def111e35e4412b1879d6a72b042c3
# fa85238534dc450ab510c31bdd82721d
msgid "Example"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:148
# d3a4b2e0222e43eabb1e35ac53291279
msgid "``m1.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:149
# 90aa497b17be417c80c4db3dbab554f4
msgid "``m2.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:150
# 12dbfe7ada174530b9872c70aeb48d7a
msgid "``m3.example.net``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:152
# 646fbddb2f534186864d54765927c384
msgid "Test the connection from ``m1.example.net`` to the other hosts with the following operation set ``m1.example.net``:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:161
# aaefaab23c9647ccaa61447259729d43
msgid "Test the connection from ``m2.example.net`` to the other two hosts with the following operation set from ``m2.example.net``, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:171
# f505babc15e5489f82eb798d30576792
msgid "You have now tested the connection between ``m2.example.net`` and ``m1.example.net`` in both directions."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:174
# 6c924c828819411c9180d983390f3415
msgid "Test the connection from ``m3.example.net`` to the other two hosts with the following operation set from the ``m3.example.net`` host, as in:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:184
# 823da15cf7414a249aa53190fcf9b5aa
msgid "If any connection, in any direction fails, check your networking and firewall configuration and reconfigure your environment to allow these connections."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:189
# b3eee3318f3d442db18d1494b8a19174
msgid "Socket Exceptions when Rebooting More than One Secondary"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:191
# cbfe653669da4b20bca17bae3ef8639d
msgid "When you reboot members of a replica set, ensure that the set is able to elect a primary during the maintenance. This means ensuring that a majority of the set's :data:`~replSetGetConfig.members[n].votes` are available."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:196
# 5756ecd4fca14f419aec83537fa95a73
msgid "When a set's active members can no longer form a majority, the set's :term:`primary` steps down and becomes a :term:`secondary`. The former primary closes all open connections to client applications. Clients attempting to write to the former primary receive socket exceptions and *Connection reset* errors until the set can elect a primary."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:210
# f0241a396d4e451b908591ff6f78331b
msgid "For more information on votes, see :doc:`/core/replica-set-elections`. For related information on connection errors, see :ref:`faq-keepalive`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:216
# b9bf5f659cd1484ba20908f1db48f4fc
msgid "Check the Size of the Oplog"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:218
# 6890e2560366458da2bfea2f53adf7bc
msgid "A larger :term:`oplog` can give a replica set a greater tolerance for lag, and make the set more resilient."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:221
# 82d2996a67124f808d8ec03b8978a0d3
msgid "To check the size of the oplog for a given :term:`replica set` member, connect to the member in a :program:`mongo` shell and run the :method:`rs.printReplicationInfo()` method."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:225
# 9e59ba22e342403eb23046ea9a78e17b
msgid "The output displays the size of the oplog and the date ranges of the operations contained in the oplog. In the following example, the oplog is about 10MB and is able to fit about 26 hours (94400 seconds) of operations:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:238
# fd2919f9d54144c2aaca27067a7df436
msgid "The oplog should be long enough to hold all transactions for the longest downtime you expect on a secondary. At a minimum, an oplog should be able to hold minimum 24 hours of operations; however, many users prefer to have 72 hours or even a week's work of operations."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:243
# e4fba9c538a7421fa5e4dcad5c375d4d
msgid "For more information on how oplog size affects operations, see:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:245
# fc7840dbee4b484ab4be2c4696c3f61d
msgid ":ref:`replica-set-oplog-sizing`,"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:246
# 1576eb56ab8746ba990d47496a0c40d4
msgid ":ref:`replica-set-delayed-members`, and"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:247
# f8ec16488b984549992907a36add4ecc
msgid ":ref:`replica-set-replication-lag`."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:249
# 5d9cfe0cf2024934a085a2d73f0f7669
msgid "You normally want the oplog to be the same size on all members. If you resize the oplog, resize it on all members."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:252
# a020caaab3d84c69b42f31dd071a8632
msgid "To change oplog size, see the :doc:`/tutorial/change-oplog-size` tutorial."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:257
# 53071a0bbb4b444eb46423ac28c9aeee
msgid "Oplog Entry Timestamp Error"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:261
# 99b83d39c2b94cdd80299fbb374534a1
msgid "Consider the following error in :program:`mongod` output and logs:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:268
# 2730547ccd3b4fc7899bcad8d47f494e
msgid "Often, an incorrectly typed value in the ``ts`` field in the last :term:`oplog` entry causes this error. The correct data type is Timestamp."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:272
# ce302714b13f43dc93d76a1af0d71d38
msgid "Check the type of the ``ts`` value using the following two queries against the oplog collection:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:281
# 3a8a1788dca647ac981cb0ef97ddb44f
msgid "The first query returns the last document in the oplog, while the second returns the last document in the oplog where the ``ts`` value is a Timestamp. The :query:`$type` operator allows you to select :term:`BSON type <BSON types>` 17, is the Timestamp data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:286
# 2f73599fcb4446e183a6526aa187eb47
msgid "If the queries don't return the same document, then the last document in the oplog has the wrong data type in the ``ts`` field."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:291
# cd2525af1f95495396daa67d6406f879
msgid "If the first query returns this as the last oplog entry:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:301
# e0122bc238cb4a81aa827460715401b2
msgid "And the second query returns this as the last entry where ``ts`` has the ``Timestamp`` type:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:312
# f86eca33817d48569590be49f99efd63
msgid "Then the value for the ``ts`` field in the last oplog entry is of the wrong data type."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:315
# 64891fb29d7042029e4a1e11000a0a22
msgid "To set the proper type for this value and resolve this issue, use an update operation that resembles the following:"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:323
# fbda5c86e4e64e5b8314106f4b7e6105
msgid "Modify the timestamp values as needed based on your oplog entry. This operation may take some period to complete because the update must scan and pull the entire oplog into memory."
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:328
# 32566ce517e94689a190c8716a2dfd9e
msgid "Duplicate Key Error on ``local.slaves``"
msgstr ""

#: ../source/tutorial/troubleshoot-replica-sets.txt:332
# b7c77436a1ed4066b1ef33c1c94f59a9
msgid "MongoDB 3.0.0 removes the :data:`local.slaves` collection. For ``local.slaves`` error in earlier versions of MongoDB, refer to the appropriate version of the MongoDB Manual."
msgstr ""

