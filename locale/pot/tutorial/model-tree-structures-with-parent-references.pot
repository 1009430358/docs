# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:3
# e44d73c5d2da465f9c86a739439f90b6
msgid "Model Tree Structures with Parent References"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:0
# ef5329b5a5eb4463b3f3033859fdaa4a
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:14
# f3cae806561a46c7b3903c6d205480c8
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:16
# d0c92b7d0f3d456aa5885db44de1c14d
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:22
# 6d22de69bdef4de5aa7299e4c81a0765
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing :ref:`references <data-modeling-referencing>` to \"parent\" nodes in children nodes."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:28
# 0c005c3cc0f3403e90f6e79d00b06b5b
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:32
# 85e38f32346a41d0be2c96c308794ed5
msgid "The *Parent References* pattern stores each tree node in a document; in addition to the tree node, the document stores the id of the node's parent."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:36
# 34f330600d284c82a06ff32f404af97f
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:41
# e57e8c91f2ea43b3b19e353eb956e655
msgid "The following example models the tree using *Parent References*, storing the reference to the parent category in the field ``parent``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:53
# 71b0046904e44df99579843130bd1d03
msgid "The query to retrieve the parent of a node is fast and straightforward:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:60
# d707b54479684b119e766550f5df2de6
msgid "You can create an index on the field ``parent`` to enable fast search by the parent node:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:67
# 5303a21ade9e455688f339b509b835b5
msgid "You can query by the ``parent`` field to find its immediate children nodes:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-parent-references.txt:74
# a444673b7d2f45958ebbc7aa4105758e
msgid "The *Parent Links* pattern provides a simple solution to tree storage but requires multiple queries to retrieve subtrees."
msgstr ""

