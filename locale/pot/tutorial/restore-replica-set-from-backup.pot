# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/restore-replica-set-from-backup.txt:3
# bff3b029a9eb427c81ba96f416658a47
msgid "Restore a Replica Set from MongoDB Backups"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:0
# 61b32e381c6547cb903dbce5f904a162
msgid "On this page"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:13
# b5d2eed760294298868691aaab0dc897
msgid "This procedure outlines the process for taking MongoDB data and restoring that data into a new :term:`replica set`. Use this approach for seeding test deployments from production backups as well as part of disaster recovery."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:18
# 1aac5f994e194f57936e58a9982be5e6
msgid "You *cannot* restore a single data set to three new :program:`mongod` instances and *then* create a replica set. In this situation MongoDB will force the secondaries to perform an initial sync. The procedures in this document describe the correct and efficient ways to deploy a replica set."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:24
# 49cb58cb1a094316b2c3c94b384324ed
msgid "You can also use :program:`mongorestore` to restore database files using data created with :program:`mongodump`. See :doc:`/tutorial/backup-and-restore-tools` for more information."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:29
# 6f3816343c77404489b2cb0dac563e1b
msgid "Restore Database into a Single Node Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:36
# bc069887e86f4fc0872857cfb600332e
msgid "Add Members to the Replica Set"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:38
# a4dca15978e146c6b7b2f31fd81e630e
msgid "MongoDB provides two options for restoring secondary members of a replica set:"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:41
# 909556044f714b2f98ae54ac10822672
msgid "Manually copy the database files to each data directory."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:43
# 0116561123994f95a8c5c57ed4b901ce
msgid "Allow :ref:`initial sync <replica-set-initial-sync>` to distribute data automatically."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:46
# bf3a5bbbbaee4c1fb8e8e6bf78d8b796
msgid "The following sections outlines both approaches."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:50
# dbe813bc4881454abc0d9b97199b1924
msgid "If your database is large, initial sync can take a long time to complete. For large databases, it might be preferable to copy the database files onto each host."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:55
# 5ecd6e640d294d92be1a75fadec15e0a
msgid "Copy Database Files and Restart :program:`mongod` Instance"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:57
# 24944b679f8d4fa0bce473eab58cc526
msgid "Use the following sequence of operations to \"seed\" additional members of the replica set with the restored data by copying MongoDB data files directly."
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:64
# c92a38f545944738b4eafc60c43893ee
msgid "Update Secondaries using Initial Sync"
msgstr ""

#: ../source/tutorial/restore-replica-set-from-backup.txt:66
# f37516f6b4834631a0354af519aafbb0
msgid "Use the following sequence of operations to \"seed\" additional members of the replica set with the restored data using the default *initial sync* operation."
msgstr ""

