# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/query-a-2dsphere-index.txt:5
# 9488932569f649be937f529fbb0eb462
msgid "Query a ``2dsphere`` Index"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:9
# ce2c73f1b51844228329b33e1324748f
msgid "The following sections describe queries supported by the ``2dsphere`` index."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:12
# 9ebedf30dcbb471bb8970f1aeef931b2
msgid "GeoJSON Objects Bounded by a Polygon"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:14
# bf0061ef86874c019023fe010fdfa4ca
msgid "The :query:`$geoWithin` operator queries for location data found within a GeoJSON polygon. Your location data must be stored in GeoJSON format. Use the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:27
# e66e5917c4fd425c9f0e921004bb7e93
msgid "The following example selects all points and shapes that exist entirely within a GeoJSON polygon:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:45
# 611bcdec50aa4c39a36f72ff256b1f02
msgid "Intersections of GeoJSON Objects"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:49
# ee52e03578f44ee08b2eaf586ec32fdf
msgid "The :query:`$geoIntersects` operator queries for locations that intersect a specified GeoJSON object. A location intersects the object if the intersection is non-empty. This includes documents that have a shared edge."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:54
# 36c425f7603743ba92e3f12002530a7f
msgid "The :query:`$geoIntersects` operator uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:65
# 815a6e0a73dd4c8792ebe86f544b0ea7
msgid "The following example uses :query:`$geoIntersects` to select all indexed points and shapes that intersect with the polygon defined by the ``coordinates`` array."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:84
# e741d9a33dc9429fbd278d2c37f539fc
msgid "Proximity to a GeoJSON Point"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:86
# f6c9a892462d492d89a5cc8eeeeb3d21
msgid "Proximity queries return the points closest to the defined point and sorts the results by distance. A proximity query on GeoJSON data requires a ``2dsphere`` index."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:90
# 1b750151eb58440eba7129c95a15c550
msgid "To query for proximity to a GeoJSON point, use either the :query:`$near` operator or :dbcommand:`geoNear` command. Distance is in meters."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:94
# 8e02cd238d154a6c98b58270290d76a6
msgid "The :query:`$near` uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:106
# 38edb5711f2c465f9eb95982cb78535a
msgid "For examples, see :query:`$near`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:108
# 5d7a8d37f7f44819a6c4538a9ab93766
msgid "The :dbcommand:`geoNear` command uses the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:117
# 571ec2685aef419083e247748158705c
msgid "The :dbcommand:`geoNear` command offers more options and returns more information than does the :query:`$near` operator. To run the command, see :dbcommand:`geoNear`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:122
# acddfd68f78e424e931e6b772e115155
msgid "Points within a Circle Defined on a Sphere"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:124
# 13b749b17b4f482b96e3f9c507068114
msgid "To select all grid coordinates in a \"spherical cap\" on a sphere, use :query:`$geoWithin` with the :query:`$centerSphere` operator. Specify an array that contains:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:128
# f717b5e565b04bc99d8409245fb48b2c
msgid "The grid coordinates of the circle's center point"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:130
# 145402b2fb8f4cdfb574c14c8065e031
msgid "The circle's radius measured in radians. To calculate radians, see :doc:`/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes`."
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:133
# 25d6178c419b43deb40dead9d567e99b
msgid "Use the following syntax:"
msgstr ""

#: ../source/tutorial/query-a-2dsphere-index.txt:143
# 5a3020b5459548d6ba6f19ee6788cc27
msgid "The following example queries grid coordinates and returns all documents within a 10 mile radius of longitude ``88 W`` and latitude ``30 N``. The example converts the distance, 10 miles, to radians by dividing by the approximate equatorial radius of the earth, 3963.2 miles:"
msgstr ""

