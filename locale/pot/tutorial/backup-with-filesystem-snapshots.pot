# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:3
# 13704e639a9d4f0fb419ba876ae24982
msgid "Backup and Restore with Filesystem Snapshots"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:0
# 9c0967fd37cd4c389b50760eeb6314f5
msgid "On this page"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:13
# 82da745349334107a594ec4ebb9698ac
msgid "This document describes a procedure for creating backups of MongoDB systems using system-level tools, such as :term:`LVM` or storage appliance, as well as the corresponding restoration strategies."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:17
# 6525a09578d34ea2a715ff3d49b019a3
msgid "These filesystem snapshots, or \"block-level\" backup methods, use system level tools to create copies of the device that holds MongoDB's data files. These methods complete quickly and work reliably, but require additional system configuration outside of MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:24
# b00a26cb4c5a4b35acb48653e1848980
msgid "Starting in MongoDB 3.2, the data files as well as the journal files can reside on separate volumes to create volume-level backup of MongoDB instances using the :doc:`WiredTiger </core/wiredtiger>` storage engine. With previous versions, for the purpose of volume-level backup of MongoDB instances using WiredTiger, the data files and the journal must reside on a single volume."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:31
# 093192559d62428eb98f9c29be1dc020
msgid ":doc:`/core/backups` and :doc:`/tutorial/backup-and-restore-tools`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:37
# a436e73847184776b3ece9bec1408fc5
msgid "Snapshots Overview"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:39
# 04d8c2d991544e4fa3803a8c1ee6025e
msgid "Snapshots work by creating pointers between the live data and a special snapshot volume. These pointers are theoretically equivalent to \"hard links.\" As the working data diverges from the snapshot, the snapshot process uses a copy-on-write strategy. As a result the snapshot only stores modified data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:45
# 33ac93f4ae18472eaca8d368363d60c0
msgid "After making the snapshot, you mount the snapshot image on your file system and copy data from the snapshot. The resulting backup contains a full copy of all data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:50
# ae977ee283ea42278dc95bbaecff755c
msgid "Considerations"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:53
# e8d3819ae5e240e3bd518c53dc207c96
msgid "Valid Database at the Time of Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:55
# 49c893c895be46f0879781029585c237
msgid "The database must be valid when the snapshot takes place. This means that all writes accepted by the database need to be fully written to disk: either to the :term:`journal` or to data files."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:59
# 01535a8711e34562a6f2bfbe82cd0742
msgid "If all writes are not on disk when the backup occurs, the backup will not reflect these changes."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:62
# 5b9f2ca48bda4f608a89f156497064d5
msgid "For the :doc:`MMAPv1 storage engine </core/mmapv1>`, if writes are *in progress* when the backup occurs, the data files will reflect an inconsistent state. With :ref:`journaling <journaling-mmapv1>`, all data-file states resulting from in-progress writes are recoverable; without journaling, you must flush all pending writes to disk before running the backup operation and must ensure that no writes occur during the entire backup procedure. If you do use journaling, the journal **must** reside on the same volume as the data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:71
# 515ec62a9f6a4e959340addd4261163f
msgid "For the :doc:`WiredTiger storage engine </core/wiredtiger>`, the data files reflect a consistent state as of the last :ref:`checkpoint <storage-wiredtiger-checkpoints>`, which occurs with every 2 GB of data or every minute."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:77
# b15a992ec64c41699e62886f73b33dc4
msgid "Entire Disk Image"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:79
# 909f7ee0bc1e4b2186b67a1bd94c4b12
msgid "Snapshots create an image of an entire disk image. Unless you need to back up your entire system, consider isolating your MongoDB data files, journal (if applicable), and configuration on one logical disk that doesn't contain any other data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:84
# ceedfec8934741dba4d66ba1ac344bdd
msgid "Alternately, store all MongoDB data files on a dedicated device so that you can make backups without duplicating extraneous data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:88
# a9d4f3febb25488da4be25e17dea6264
msgid "Site Failure Precaution"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:90
# a0ae0e05929649b9891ea232b1175755
msgid "Ensure that you copy data from snapshots onto other systems. This ensures that data is safe from site failures."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:94
# 37b487ec756a4ca0aacf678125a63cb9
msgid "No Incremental Backups"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:96
# dc3716e6b673408dacf9fef017bbff1a
msgid "This tutorial does not include procedures for incremental backups. Although different snapshots methods provide different capability, the LVM method outlined below does not provide any capacity for capturing incremental backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:104
# 22f749136229412c81dd154941e87b83
msgid "Snapshots With Journaling"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:106
# 8d63df0899fa43b5b44d4788230c25c9
msgid "If your :program:`mongod` instance has journaling enabled, then you can use any kind of file system or volume/block level snapshot tool to create backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:110
# 9d908c37f4454e99a059d45c40d1e80a
msgid "If you manage your own infrastructure on a Linux-based system, configure your system with :term:`LVM` to provide your disk packages and provide snapshot capability. You can also use LVM-based setups *within* a cloud/virtualized environment."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:117
# 89961c79a1cb4c789ccb4dcaa3b7a2dd
msgid "Running :term:`LVM` provides additional flexibility and enables the possibility of using snapshots to back up MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:121
# 365f788b29d743a8bea3e68be745bf07
msgid "Snapshots with Amazon EBS in a RAID 10 Configuration"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:123
# 8c11456f6903435996ffebbce2bdd151
msgid "If your deployment depends on Amazon's Elastic Block Storage (EBS) with RAID configured within your instance, it is impossible to get a consistent state across all disks using the platform's snapshot tool. As an alternative, you can do one of the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:128
# 0c7efa688de64d84ab1ac57571e4a529
msgid "Flush all writes to disk and create a write lock to ensure consistent state during the backup process."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:131
# 54f1c123145f4a69b1cef559a1782af7
msgid "If you choose this option see :ref:`backup-without-journaling`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:133
# 700a188b426b4862a1c255a3590bb96c
msgid "Configure :term:`LVM` to run and hold your MongoDB data files on top of the RAID within your system."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:136
# 0f210a3df80e4779bdfeeaadbe35488f
msgid "If you choose this option, perform the LVM backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:142
# 1823b4e582aa46cda2a2e23db787e750
msgid "Back up and Restore Using LVM on Linux"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:144
# fa9d0d94d9584c2090a71ac839ba772b
msgid "This section provides an overview of a simple backup process using :term:`LVM` on a Linux system. While the tools, commands, and paths may be (slightly) different on your system the following steps provide a high level overview of the backup operation."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:151
# f188468e0eab440b93e6fe0b0bcfe0d9
msgid "Only use the following procedure as a guideline for a backup system and infrastructure. Production backup systems must consider a number of application specific requirements and factors unique to specific environments."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:159
# 4f9d465c918b4a3389f7400a48ff9699
msgid "Create a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:163
#: ../source/tutorial/backup-with-filesystem-snapshots.txt:322
# 5db7eeba1cb046e4a095017d7bb16a83
# acbd764938b347139ff3ca743d8de9f7
msgid "Starting in MongoDB 3.2, for the purpose of volume-level backup of MongoDB instances using WiredTiger, the data files and the journal are no longer required to reside on a single volume."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:167
# e23aa854b17c434ab9f83757ef548710
msgid "To create a snapshot with :term:`LVM`, issue a command as root in the following format:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:174
# 538b04079b73483e973b617b479fec61
msgid "This command creates an :term:`LVM` snapshot (with the ``--snapshot`` option) named ``mdb-snap01`` of the ``mongodb`` volume in the ``vg0`` volume group."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:178
# df4b53e994e74ee5a7330ba180fb19d1
msgid "This example creates a snapshot named ``mdb-snap01`` located at ``/dev/vg0/mdb-snap01``. The location and paths to your systems volume groups and devices may vary slightly depending on your operating system's :term:`LVM` configuration."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:183
# bbe881401416446690ca2c95157760d3
msgid "The snapshot has a cap of at 100 megabytes, because of the parameter ``--size 100M``. This size does not reflect the total amount of the data on the disk, but rather the quantity of differences between the current state of ``/dev/vg0/mongodb`` and the creation of the snapshot (i.e. ``/dev/vg0/mdb-snap01``.)"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:191
# f2f03ffcc385424aa5023fc863b5ba2f
msgid "Ensure that you create snapshots with enough space to account for data growth, particularly for the period of time that it takes to copy data out of the system or to a temporary image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:195
# 31d2d703c1574b52868dc0cd36eb3074
msgid "If your snapshot runs out of space, the snapshot image becomes unusable. Discard this logical volume and create another."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:198
# ba35abc54e2f4bcca3344d6b8e1a7ad3
msgid "The snapshot will exist when the command returns. You can restore directly from the snapshot at any time or by creating a new logical volume and restoring from this snapshot to the alternate image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:202
# be37e47616ad4db297bf046025f0c30c
msgid "While snapshots are great for creating high quality backups very quickly, they are not ideal as a format for storing backup data. Snapshots typically depend and reside on the same storage infrastructure as the original disk images. Therefore, it's crucial that you archive these snapshots and store them elsewhere."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:209
# 98abec540bcd4f0aa251faa95b6fa878
msgid "Archive a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:211
# 70aa2953064745d1bc7153ab572976cc
msgid "After creating a snapshot, mount the snapshot and copy the data to separate storage. Your system might try to compress the backup images as you move them offline. Alternatively, take a block level copy of the snapshot image, such as with the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:221
# ec81b602418049a083a368ca09e27e26
msgid "The above command sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:223
# 34ad88045a9a4eeb9b3370307366a5ce
msgid "Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted.  Never take a block level copy of a filesystem or filesystem snapshot that is mounted."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:227
# 9303e894570549dfb26e0087a1f39bef
msgid "Performs a block level copy of the entire snapshot image using the ``dd`` command and compresses the result in a gzipped file in the current working directory."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:233
# 07bfa9a6664a435d9ecca7f373a9957f
msgid "This command will create a large ``gz`` file in your current working directory. Make sure that you run this command in a file system that has enough free space."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:240
# 09cb2edec2964751acc7616f0f19b077
msgid "Restore a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:242
# 7bedd8ff69ad42559caffa9dee50c948
msgid "To restore a snapshot created with the above method, issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:251
# 04565663fefc446399444be5216429f7
msgid "The above sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:253
# 15996a7994ff42d5a02c17d4a615802e
msgid "Creates a new logical volume named ``mdb-new``, in the ``/dev/vg0`` volume group. The path to the new device will be ``/dev/vg0/mdb-new``."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:258
# 2c1d90cfd2a04b6cb9327174fb388a13
msgid "This volume will have a maximum size of 1 gigabyte. The original file system must have had a total size of 1 gigabyte or smaller, or else the restoration will fail."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:262
# 6c4aa2a341b8498b80d0008ad23435a3
msgid "Change ``1G`` to your desired volume size."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:264
# f032bb6ac16743399c00857e17e52c71
msgid "Uncompresses and unarchives the ``mdb-snap01.gz`` into the ``mdb-new`` disk image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:267
# 86c7653548b34364abb61c11196964f4
msgid "Mounts the ``mdb-new`` disk image to the ``/srv/mongodb`` directory. Modify the mount point to correspond to your MongoDB data file location, or other location as needed."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:273
# 75423d36b0864072a99d5017b2c41435
msgid "The restored snapshot will have a stale ``mongod.lock`` file. If you do not remove this file from the snapshot, and MongoDB may assume that the stale lock file indicates an unclean shutdown. If you're running with :setting:`storage.journal.enabled` enabled, and you *do not* use :method:`db.fsyncLock()`, you do not need to remove the ``mongod.lock`` file. If you use :method:`db.fsyncLock()` you will need to remove the lock."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:284
# 57821a2f9a81457c801079ed472866c7
msgid "Restore Directly from a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:286
# 69a8078f8d4748318782af35ce3d9bbd
msgid "To restore a backup without writing to a compressed ``gz`` file, use the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:297
# e3c5ec01bd044321aeda642479cc0353
msgid "Remote Backup Storage"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:299
# 3e9e0ab006584502a789fd1fbc6ac45c
msgid "You can implement off-system backups using the :ref:`combined process <backup-restore-from-snapshot>` and SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:302
# 84a62a5fe1944822a231d5a17d5f16d6
msgid "This sequence is identical to procedures explained above, except that it archives and compresses the backup on a remote system using SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:305
# ccbfc147aecb4b3b9de49d51bd477e62
msgid "Consider the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:318
# 4e6334dc219242889b6dac1b7505b3b7
msgid "Back up Instances with Journal Files on Separate Volume or without Journaling"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:326
# a378f14d919e46f0922d69a60eaac2d9
msgid "If your :program:`mongod` instance is either running without journaling or has the journal files on a separate volume, you must flush all writes to disk and lock the database to prevent writes during the backup process. If you have a :term:`replica set` configuration, then for your backup use a :term:`secondary` which is not receiving reads (i.e. :term:`hidden member`)."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:335
# 3c8302eecb16426db4112ca35a462331
msgid "In the following procedure to create backups, you **must** issue the :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()` operations on the same connection. The client that issues :method:`db.fsyncLock()` is solely responsible for issuing a :method:`db.fsyncUnlock()` operation and must be able to handle potential error conditions so that it can perform the :method:`db.fsyncUnlock()` before terminating the connection."
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:4
# 41b10dfde0154be2a6b3c8aabb3f4510
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-backup-tutorials.rst:6
# 870ac3ab97c046878bcb240e77dbfdb9
msgid "See also |mms-home| for seamless automation, backup, and monitoring."
msgstr ""

