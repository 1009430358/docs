# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:3
# 434f5cc598e741798efe7667c450bb7d
msgid "Backup and Restore with Filesystem Snapshots"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:7
# 4a590099ae2440baa97f8f2641d1e203
msgid "This document describes a procedure for creating backups of MongoDB systems using system-level tools, such as :term:`LVM` or storage appliance, as well as the corresponding restoration strategies."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:11
# 961d5fbd2bea4a3cb390f1ac6beccd6b
msgid "These filesystem snapshots, or \"block-level\" backup methods use system level tools to create copies of the device that holds MongoDB's data files. These methods complete quickly and work reliably, but require more system configuration outside of MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:16
# 3903ae4eb19c44fca201d189f8b12039
msgid ":doc:`/core/backups` and :doc:`/tutorial/backup-and-restore-tools`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:22
# ba1baff6bce44c48b6bf52f671dcc3cc
msgid "Snapshots Overview"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:24
# 66265eb3688f4a2ab47704b7a9dcb163
msgid "Snapshots work by creating pointers between the live data and a special snapshot volume. These pointers are theoretically equivalent to \"hard links.\" As the working data diverges from the snapshot, the snapshot process uses a copy-on-write strategy. As a result the snapshot only stores modified data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:30
# 2207488577014ebcba5b52d756225e2e
msgid "After making the snapshot, you mount the snapshot image on your file system and copy data from the snapshot. The resulting backup contains a full copy of all data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:34
# be36d48da09f4a869fb59626f1dd1e9f
msgid "Snapshots have the following limitations:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:36
# 44fea2f9b1064610944a9e8dece27541
msgid "The database must be valid when the snapshot takes place. This means that all writes accepted by the database need to be fully written to disk: either to the :term:`journal` or to data files."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:41
# 8b29206e6883407b84af7b6f03dff1f9
msgid "If all writes are not on disk when the backup occurs, the backup will not reflect these changes. If writes are *in progress* when the backup occurs, the data files will reflect an inconsistent state. With :term:`journaling <journal>` all data-file states resulting from in-progress writes are recoverable; without journaling you must flush all pending writes to disk before running the backup operation and must ensure that no writes occur during the entire backup procedure."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:50
# c95df2a46b3e456bb8bd549125c44fc4
msgid "If you do use journaling, the journal **must** reside on the same volume as the data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:53
# bdcf8eb23f1c474795ed842985d970d2
msgid "Snapshots create an image of an entire disk image. Unless you need to back up your entire system, consider isolating your MongoDB data files, journal (if applicable), and configuration on one logical disk that doesn't contain any other data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:58
# 72fe7e99634c4edca0d63a133284bb46
msgid "Alternately, store all MongoDB data files on a dedicated device so that you can make backups without duplicating extraneous data."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:61
# d67bd4b7b2c74b4499f7510670944b37
msgid "Ensure that you copy data from snapshots and onto other systems to ensure that data is safe from site failures."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:64
# 7b76dd0397ef4c4d8241e5e79969f2aa
msgid "Although different snapshots methods provide different capability, the LVM method outlined below does not provide any capacity for capturing incremental backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:71
# 5fbe0ed3f7fb4eea83c02df7e2f15dea
msgid "Snapshots With Journaling"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:73
# 24487d456c724c83a26f5d8d8b6a8c37
msgid "If your :program:`mongod` instance has journaling enabled, then you can use any kind of file system or volume/block level snapshot tool to create backups."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:77
# 92e1d9d72b624a5283ba8b85eafd21b3
msgid "If you manage your own infrastructure on a Linux-based system, configure your system with :term:`LVM` to provide your disk packages and provide snapshot capability. You can also use LVM-based setups *within* a cloud/virtualized environment."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:84
# 40389e9d10c64e6189e65abc0cb36e32
msgid "Running :term:`LVM` provides additional flexibility and enables the possibility of using snapshots to back up MongoDB."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:88
# da37f9ff3f844cee9dcffd5494bab613
msgid "Snapshots with Amazon EBS in a RAID 10 Configuration"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:90
# 31760d461cec4dee9f6a4ba78321dc09
msgid "If your deployment depends on Amazon's Elastic Block Storage (EBS) with RAID configured within your instance, it is impossible to get a consistent state across all disks using the platform's snapshot tool. As an alternative, you can do one of the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:95
# bcdf2e00670c4edd8a4ca8892ec3dbd7
msgid "Flush all writes to disk and create a write lock to ensure consistent state during the backup process."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:98
# 826934c2a4ed425e95c3959c1c634b8b
msgid "If you choose this option see :ref:`backup-without-journaling`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:100
# 23078870b7294120b324addab3bddbea
msgid "Configure :term:`LVM` to run and hold your MongoDB data files on top of the RAID within your system."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:103
# cef94b370a49423280ce0a9dca1368f8
msgid "If you choose this option, perform the LVM backup operation described in :ref:`lvm-backup-operation`."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:109
# f4514495ac994f798bf7bc899997ad01
msgid "Backup and Restore Using LVM on a Linux System"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:111
# d04459dc0d1843e1ae89ad77063c6cd8
msgid "This section provides an overview of a simple backup process using :term:`LVM` on a Linux system. While the tools, commands, and paths may be (slightly) different on your system the following steps provide a high level overview of the backup operation."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:118
# 45cbb96259434116b2d2ebabf3372564
msgid "Only use the following procedure as a guideline for a backup system and infrastructure. Production backup systems must consider a number of application specific requirements and factors unique to specific environments."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:126
# 049871d323cb410a906e8c6370422cf9
msgid "Create a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:128
# 7b4f64fbf39d49d4913c2e94fda9c995
msgid "To create a snapshot with :term:`LVM`, issue a command as root in the following format:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:135
# dbaccb5590494ffab5bfbc0319a13a54
msgid "This command creates an :term:`LVM` snapshot (with the ``--snapshot`` option) named ``mdb-snap01`` of the ``mongodb`` volume in the ``vg0`` volume group."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:139
# 853cb94fa92544d981ed9937e1b82e16
msgid "This example creates a snapshot named ``mdb-snap01`` located at ``/dev/vg0/mdb-snap01``. The location and paths to your systems volume groups and devices may vary slightly depending on your operating system's :term:`LVM` configuration."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:144
# 92b11c8acb8a4b86a61a92705b0adc19
msgid "The snapshot has a cap of at 100 megabytes, because of the parameter ``--size 100M``. This size does not reflect the total amount of the data on the disk, but rather the quantity of differences between the current state of ``/dev/vg0/mongodb`` and the creation of the snapshot (i.e. ``/dev/vg0/mdb-snap01``.)"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:152
# 900bba5092144e6e8f16fc955388f817
msgid "Ensure that you create snapshots with enough space to account for data growth, particularly for the period of time that it takes to copy data out of the system or to a temporary image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:156
# d1db8ff4404e4accaf33925a8d28d010
msgid "If your snapshot runs out of space, the snapshot image becomes unusable. Discard this logical volume and create another."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:159
# 6ca55102ab4f40528eeead396166c8bc
msgid "The snapshot will exist when the command returns. You can restore directly from the snapshot at any time or by creating a new logical volume and restoring from this snapshot to the alternate image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:163
# b38c6c883cb24a11b3d3ac9218d3621c
msgid "While snapshots are great for creating high quality backups very quickly, they are not ideal as a format for storing backup data. Snapshots typically depend and reside on the same storage infrastructure as the original disk images. Therefore, it's crucial that you archive these snapshots and store them elsewhere."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:170
# a8124b9dbab941a39b6ea6e7b9608fc1
msgid "Archive a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:172
# 0fb65dd8c9fb4b808c80c412412122d0
msgid "After creating a snapshot, mount the snapshot and copy the data to separate storage. Your system might try to compress the backup images as you move them offline. Alternatively, take a block level copy of the snapshot image, such as with the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:182
# cf2fd865107348c3b3d21da9ad9efcda
msgid "The above command sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:184
# a6471b28801e469eb05816a98a64b9d6
msgid "Ensures that the ``/dev/vg0/mdb-snap01`` device is not mounted.  Never take a block level copy of a filesystem or filesystem snapshot that is mounted."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:188
# 65360317e04f49cf86c85d942fa4597c
msgid "Performs a block level copy of the entire snapshot image using the ``dd`` command and compresses the result in a gzipped file in the current working directory."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:194
# 74c022740e764feeb7e1414469fb0989
msgid "This command will create a large ``gz`` file in your current working directory. Make sure that you run this command in a file system that has enough free space."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:201
# 3e7c6ff5dfd041cb9b29a562aba5c7e6
msgid "Restore a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:203
# ce40d9c2f2ca47deaee75642e1d69a07
msgid "To restore a snapshot created with the above method, issue the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:212
# 7c6b9f97474945b8b846c7b0419de7f6
msgid "The above sequence does the following:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:214
# 8f8e5d76b6784a28b2abcbb0a584258e
msgid "Creates a new logical volume named ``mdb-new``, in the ``/dev/vg0`` volume group. The path to the new device will be ``/dev/vg0/mdb-new``."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:219
# 86bddb6786224c8a947030a450e3e7bc
msgid "This volume will have a maximum size of 1 gigabyte. The original file system must have had a total size of 1 gigabyte or smaller, or else the restoration will fail."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:223
# 6181f25f0f2e4e208984e2cfafbd47da
msgid "Change ``1G`` to your desired volume size."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:225
# 71c3f867ee614aa18fe460a3ff5ab560
msgid "Uncompresses and unarchives the ``mdb-snap01.gz`` into the ``mdb-new`` disk image."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:228
# 9e8fe9a5fdef40879a0a0bde01079c8d
msgid "Mounts the ``mdb-new`` disk image to the ``/srv/mongodb`` directory. Modify the mount point to correspond to your MongoDB data file location, or other location as needed."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:234
# abee079662944b9097330865c169951b
msgid "The restored snapshot will have a stale ``mongod.lock`` file. If you do not remove this file from the snapshot, and MongoDB may assume that the stale lock file indicates an unclean shutdown. If you're running with :setting:`storage.journal.enabled` enabled, and you *do not* use :method:`db.fsyncLock()`, you do not need to remove the ``mongod.lock`` file. If you use :method:`db.fsyncLock()` you will need to remove the lock."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:245
# a345b2a4ddac4fa9ac9465660e07839f
msgid "Restore Directly from a Snapshot"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:247
# b7bec9b232f045ba9c37d4f1671b4d19
msgid "To restore a backup without writing to a compressed ``gz`` file, use the following sequence of commands:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:258
# 05497123d30c47999775667dd4f5c101
msgid "Remote Backup Storage"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:260
# 18eb91da4144480e908dca90df5c5740
msgid "You can implement off-system backups using the :ref:`combined process <backup-restore-from-snapshot>` and SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:263
# fb4269c4103247ae9c1209bd5c298242
msgid "This sequence is identical to procedures explained above, except that it archives and compresses the backup on a remote system using SSH."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:266
# b4e2c44524824fe6800878c2f2823530
msgid "Consider the following procedure:"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:279
# 583dbd50bd3241209e5b832f41daf3b6
msgid "Create Backups on Instances that do not have Journaling Enabled"
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:281
# 159a42b245664de8bb331a50578e36ec
msgid "If your :program:`mongod` instance does not run with journaling enabled, or if your journal is on a separate volume, obtaining a functional backup of a consistent state is more complicated. As described in this section, you must flush all writes to disk and lock the database to prevent writes during the backup process. If you have a :term:`replica set` configuration, then for your backup use a :term:`secondary` which is not receiving reads (i.e. :term:`hidden member`)."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:293
# e8f9242d07c441d9bd26fc94deeb5da6
msgid "This procedure is only supported with the MMAPv1 storage engine."
msgstr ""

#: ../source/tutorial/backup-with-filesystem-snapshots.txt:295
# eed3f34702cd45e2bc5bf35c39e3ed3c
msgid "In the following procedure, you **must** issue the :method:`db.fsyncLock()` and :method:`db.fsyncUnlock()` operations on the same connection. The client that issues :method:`db.fsyncLock()` is solely responsible for issuing a :method:`db.fsyncUnlock()` operation and must be able to handle potential error conditions so that it can perform the :method:`db.fsyncUnlock()` before terminating the connection."
msgstr ""

