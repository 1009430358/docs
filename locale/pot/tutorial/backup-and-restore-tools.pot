# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-and-restore-tools.txt:3
# a336bc55d2154b049bc57fa2171adaa9
msgid "Back Up and Restore with MongoDB Tools"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:0
# efa1425f78cd49f8b10f12f6563262fd
msgid "On this page"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:13
# e5be9fa78bd14f538eadb7ce282ddd35
msgid "This document describes the process for creating backups and restoring data using the utilities provided with MongoDB."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:16
# 482629cff45845ca989dbcb427457443
msgid "Because all of these tools primarily operate by interacting with a running :program:`mongod` instance, they can impact the performance of your running database."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:20
# 163cfe96468f47fd8a34baa33ae1fb96
msgid "Not only do they create traffic for a running database instance, they also force the database to read all data through memory. When MongoDB reads infrequently used data, it can supplant more frequently accessed data, causing a deterioration in performance for the database's regular workload."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:25
# b5c23f0a475842698bc142a96944f2f2
msgid "No matter how you decide to import or export your data, consider the following guidelines:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:28
# 5c57882ee738427cab6adbf66de8e17e
msgid "Label files so that you can identify the contents of the export or backup as well as the point in time the export/backup reflect."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:31
# 4fa992d9cf7d4a9eac7731c55bc7ead7
msgid "Do not create or apply exports if the backup process itself will have an adverse effect on a production system."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:34
# 3575a3d619d94e1ba7516949206f389c
msgid "Make sure that the backups reflect a consistent data state. Export or backup processes can impact data integrity (i.e. type fidelity) and consistency if updates continue during the backup process."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:38
# 2c11cdc5e6e846dfb5d50b75ad82907a
msgid "Test backups and exports by restoring and importing to ensure that the backups are useful."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:41
# 8ce246300b8546cb9465cca4e1840b6b
msgid ":doc:`/core/backups` or :mms-docs:`MongoDB Cloud Manager Backup documentation </tutorial/nav/backup-use/>` for more information on backing up MongoDB instances. Additionally, consider the following references for the MongoDB import/export tools:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:46
# 2e33a91e9a814d8ba13b6157af867680
msgid ":program:`mongoimport`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:47
# 920c87dd533c4adab29e13587acc04f8
msgid ":program:`mongoexport`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:48
# 2a63bbbbf1c94cf4bbe2f41975cb8e8e
msgid ":program:`mongorestore`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:49
# 5f18566b69324b478e8203b4e9230a4c
msgid ":program:`mongodump`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:54
# 9e809608ffd04330bf264a1808c0ecaf
msgid "Binary BSON Dumps"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:56
# 8e4ad94ff04e47bea3ccaeed30920bd5
msgid "The :program:`mongorestore` and :program:`mongodump` utilities work with :doc:`BSON </reference/bson-types>` data dumps, and are useful for creating backups of small deployments. For resilient and non-disruptive backups, use a file system or block-level disk snapshot function, such as the methods described in the :doc:`/core/backups` document."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:62
# d0df6fff796d4229a29c1a7482bb8ffb
msgid "Use these tools for backups if other backup methods, such as the |mms-home| or :doc:`file system snapshots </tutorial/backup-with-filesystem-snapshots>` are unavailable."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:73
# 4e99b4e7c4a74f32be7ee8cc537e3e04
msgid "Backup a Database with ``mongodump``"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:76
# 1e79176ef6ac46199e90f2458a77b773
msgid "Exclude ``local`` Database"
msgstr ""

#: ../source/includes/fact-mongodump-local-database.rst:1
# 181846fbe4e04e9487f0b278cc99b12b
msgid ":program:`mongodump` excludes the content of the ``local`` database in its output."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:81
# 7f2798f1b9a94d8188379cca45ad2478
msgid "Required Access"
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
# a4182ba212bd4fff90b5e1c51dfb5eb9
msgid "To run :program:`mongodump` against a MongoDB deployment that has :doc:`access control </core/authorization>` enabled, you must have privileges that grant :authaction:`find` action for each database to back up. The built-in :authrole:`backup` role provides the required privileges to perform backup of any and all databases."
msgstr ""

#: ../source/includes/fact-required-access-for-backup-profiling.rst:3
# af5ffbac55644fd7a995bded2a5d815f
msgid "The :authrole:`backup` role provides additional privileges to back up the :data:`system.profile <<database>.system.profile>` collections that exist when running with :ref:`database profiling <database-profiling>`. Previously, users required an additional ``read`` access on this collection."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:86
# 97f7b4b411964b019bcee9e66ddd06ba
msgid "Basic ``mongodump`` Operations"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:88
# 058c431ca0a446c9a1595243542957b0
msgid "The :program:`mongodump` utility backs up data by connecting to a running :program:`mongod` or :program:`mongos` instance."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:91
# 1116213c21574bbcb94259074ba0cf35
msgid "The utility can create a backup for an entire server, database or collection, or can use a query to backup just part of a collection."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:94
# 9ef65035faa34b358de73466e6c84229
msgid "When you run :program:`mongodump` without any arguments, the command connects to the MongoDB instance on the local system (e.g. ``127.0.0.1`` or ``localhost``) on port ``27017`` and creates a database backup named ``dump/`` in the current directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:99
# 421237f7b8e84e198fd6874c13f64228
msgid "To backup data from a :program:`mongod` or :program:`mongos` instance running on the same machine and on the default port of ``27017``, use the following command:"
msgstr ""

#: ../source/includes/warning-mongodump-compatibility-2.2.rst:1
# 9c25718c02bb43f9aa7512cffafd6d00
msgid "The data format used by :program:`mongodump` from version 2.2 or later is *incompatible* with earlier versions of :program:`mongod`. Do not use recent versions of :program:`mongodump` to back up older data stores."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:109
# dc9aa70b219c4eb7934cc5dd941aac27
msgid "You can also specify the :option:`--host <mongodump --host>` and :option:`--port <mongodump --port>` of the MongoDB instance that the :program:`mongodump` should connect to. For example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:117
# f466763fcc544b688d716ba63da16923
msgid ":program:`mongodump` will write :term:`BSON` files that hold a copy of data accessible via the :program:`mongod` listening on port ``27017`` of the ``mongodb.example.net`` host. See :ref:`backup-from-non-local` for more information."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:122
# 5b0448e4ce8243abbb835964476c3d57
msgid "To specify a different output directory, you can use the :option:`--out or -o <mongodump --out>` option:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:129
# 1738137fdc254eb8b18cc324358971ad
msgid "To limit the amount of data included in the database dump, you can specify :option:`--db <mongodump --db>` and :option:`--collection <mongodump --collection>` as options to :program:`mongodump`. For example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:138
# 2e22e1121355471f9bda19737adf9486
msgid "This operation creates a dump of the collection named ``myCollection`` from the database ``test`` in a :file:`dump/` subdirectory of the current working directory."
msgstr ""

#: ../source/includes/fact-mongodump-overwrite-files.rst:1
# b408f037e4994ffda13077c92852ebdd
msgid ":program:`mongodump` overwrites output files if they exist in the backup data folder. Before running the :program:`mongodump` command multiple times, either ensure that you no longer need the files in the output folder (the default is the ``dump/`` folder) or rename the folders or files."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:145
# 79babcaa35844cb080aa8ad4cbb991ce
msgid "Point in Time Operation Using Oplogs"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:147
# b083c837aacb4a93a46f3e5cb4bf0ec5
msgid "Use the :option:`--oplog <mongodump --oplog>` option with :program:`mongodump` to collect the :term:`oplog` entries to build a point-in-time snapshot of a database within a replica set. With :option:`--oplog <mongodump --oplog>`, :program:`mongodump` copies all the data from the source database as well as all of the :term:`oplog` entries from the beginning to the end of the backup procedure. This operation, in conjunction with :option:`mongorestore --oplogReplay <mongorestore --oplogReplay>`, allows you to restore a backup that reflects the specific moment in time that corresponds to when :program:`mongodump` completed creating the dump file."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:161
# a7bcc41af2034bddac1cce553aa4ea53
msgid "Create Backups from Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:163
# c063baa534624cc3967393154af96007
msgid "The :option:`--host <mongodump --host>` and :option:`--port <mongodump --port>` options for :program:`mongodump` allow you to connect to and backup from a remote host. Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:172
# e5c7f6705b334f18902d628c2611cc28
msgid "On any :program:`mongodump` command you may, as above, specify username and password credentials to specify database authentication."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:178
# d878f1b3971f4551bc0fd322ad8ac921
msgid "Restore a Database with ``mongorestore``"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:181
# 7f4544fea97d4e3f841fa42203ce0a96
msgid "Access Control"
msgstr ""

#: ../source/includes/access-mongorestore-collections.rst:1
# d921b8ab2e3b43509b750256c5769fb1
msgid "To restore data to a MongoDB deployment that has :doc:`access control </core/authorization>` enabled, the :authrole:`restore` role provides access to restore any database if the backup data does not include :data:`system.profile <<database>.system.profile>` collection data."
msgstr ""

#: ../source/includes/fact-restore-role-system.profile.rst:1
# ee7a4e756c6b4b08b567c8677a5d7faf
msgid "If the backup data includes :data:`system.profile <<database>.system.profile>` collection data and the target database does not contain the :data:`system.profile <<database>.system.profile>` collection, :program:`mongorestore` attempts to create the collection even though the program does not actually restore ``system.profile`` documents. As such, the user requires additional privileges to perform :authaction:`createCollection` and :authaction:`convertToCapped` actions on the :data:`system.profile <<database>.system.profile>` collection for a database."
msgstr ""

#: ../source/includes/access-mongorestore-collections.rst:8
# acd2291966694adcbcf27bcc123c6cf3
msgid "If running :program:`mongorestore` with :option:`--oplogReplay`, additional privilege :ref:`user-defined role <create-user-defined-role>` that has :authaction:`anyAction` on :ref:`resource-anyresource` and grant only to users who must run :program:`mongorestore` with :option:`--oplogReplay`."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:186
# b2b9432e4462457aafff6aed942e2948
msgid "Basic ``mongorestore`` Operations"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:188
# 07cf4332aa894b009f8260ba712c91b2
msgid "The :program:`mongorestore` utility restores a binary backup created by :program:`mongodump`. By default, :program:`mongorestore` looks for a database backup in the :file:`dump/` directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:192
# 17c379d3cece45998e24e32fae5f30fe
msgid "The :program:`mongorestore` utility restores data by connecting to a running :program:`mongod` or :program:`mongos` directly."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:195
# bd8c8817025a441094d0da8bcae2038c
msgid ":program:`mongorestore` can restore either an entire database backup or a subset of the backup."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:198
# 830bbf72fe754fe493ae5e20c432a5a3
msgid "To use :program:`mongorestore` to connect to an active :program:`mongod` or :program:`mongos`, use a command with the following prototype form:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:206
#: ../source/tutorial/backup-and-restore-tools.txt:246
# 48db52fc2c5441c0933207d1b7b958c0
# 06f1cb8c0f6642d38117146ed2bf2b55
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:212
# a64b4b512e724ba09eead1a17db02b18
msgid "Here, :program:`mongorestore` imports the database backup in the :file:`dump-2013-10-25` directory to the :program:`mongod` instance running on the localhost interface."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:219
# a0346886a39a4a8ea7d3f1f86612b4ef
msgid "Restore Point in Time Oplog Backup"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:221
# b04406e972dc4f3ba3acf1604c4220d4
msgid "If you created your database dump using the :option:`--oplog <mongodump --oplog>` option to ensure a point-in-time snapshot, call :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option, as in the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:231
# aa1ec0c1750f4e45b1f949b0e291568c
msgid "You may also consider using the :option:`mongorestore --objcheck` option to check the integrity of objects while inserting them into the database, or you may consider the :option:`mongorestore --drop` option to drop each collection from the database before restoring from backups."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:238
# 6689a3e6d7d543fa887e333df0194d38
msgid "Restore Backups to Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:240
# f6d7dd0009204b489d4ebcfdc64cd465
msgid "By default, :program:`mongorestore` connects to a MongoDB instance running on the localhost interface (e.g. ``127.0.0.1``) and on the default port (``27017``). If you want to restore to a different host or port, use the :option:`--host <mongorestore --host>` and :option:`--port <mongorestore --port>` options."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:252
# 9e6487908c0a47a7abfa2be0a0d6351d
msgid "As above, you may specify username and password connections if your :program:`mongod` requires authentication."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:258
# e1095c3dc43248adaee887557784d41e
msgid "Human Intelligible Import/Export Formats"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:260
# 9bb4b47117ed43eea9e1a4a39aa158a8
msgid "MongoDB's :program:`mongoimport` and :program:`mongoexport` tools allow you to work with your data in a human-readable :doc:`Extended JSON </reference/mongodb-extended-json>` or :term:`CSV` format. This is useful for simple ingestion to or from a third-party system, and when you want to backup or export a small subset of your data. For more complex data migration tasks, you may want to write your own import and export scripts using a client :term:`driver` to interact with the database."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:268
# 8ad207600a9f460b93dca740568b058d
msgid "The examples in this section use the MongoDB tools :program:`mongoimport` and :program:`mongoexport`. These tools may also be useful for importing data into a MongoDB database from third party applications."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:274
# 4fb79cba242e4701abb14c8a9e0a8642
msgid "If you want to simply copy a database or collection from one instance to another, consider using the :dbcommand:`copydb`, :dbcommand:`clone`, or :dbcommand:`cloneCollection` commands, which may be more suited to this task. The :program:`mongo` shell provides the :method:`db.copyDatabase()` method."
msgstr ""

#: ../source/includes/fact-type-fidelity-loss.rst:4
# e8bb15a5e1c143028c8a49082e917852
msgid "Avoid using :program:`mongoimport` and :program:`mongoexport` for full instance production backups. They do not reliably preserve all rich :term:`BSON` data types, because :term:`JSON` can only represent a subset of the types supported by BSON. Use :program:`mongodump` and :program:`mongorestore` as described in :doc:`/core/backups` for this kind of functionality."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:283
# 5467b34c8ae84af8afe099a332862a09
msgid "Collection Export with :program:`mongoexport`"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:2
# 3d7f624f36c24816afa5bf8d6e09c076
msgid "Export in CSV Format"
msgstr ""

#: ../source/includes/fact-3.0-mongoexport-drop-csv-option.rst:1
# 634f4dfc85184ebab05bb9ede2e2fae5
msgid ":program:`mongoexport` removed the ``--csv`` option. Use the :option:`--type=csv <--type>` option to specify CSV format for the output."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:6
# c7220527bc6f41dcbae4d934a5e80240
msgid "In the following example, :program:`mongoexport` exports data from the collection ``contacts`` collection in the ``users`` database in :term:`CSV` format to the file ``/opt/backups/contacts.csv``."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:10
# 6f543a7ff7ed483eab2a44507cab0836
msgid "The :program:`mongod` instance that :program:`mongoexport` connects to is running on the localhost port number ``27017``."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:13
# 845e27c7c6de44e59e99fff9e96663f2
msgid "When you export in CSV format, you must specify the fields in the documents to export. The operation specifies the ``name`` and ``address`` fields to export."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:21
# 8790aec9f8a04b42a88d6bd503cb5d7d
msgid "For CSV exports only, you can also specify the fields in a file containing the line-separated list of fields to export. The file must have only one field per line."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:25
# d2f01b6c456f4f6a99e88e0029aa87e6
msgid "For example, you can specify the ``name`` and ``address`` fields in a file ``fields.txt``:"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:33
# 246032096a04494db10ea1265a2c4ffe
msgid "Then, using the :option:`--fieldFile` option, specify the fields to export with the file:"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:40
# 892c1358b7224ae2a217d51922bcfa3a
msgid ":program:`mongoexport` removed the ``--csv`` option and replaced with the :option:`--type` option."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:45
# 49230ada47cd43128a677aefc7c42c55
msgid "Export in JSON Format"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:47
# e233a844075541ed80fd7d45d5db3158
msgid "This example creates an export of the ``contacts`` collection from the MongoDB instance running on the localhost port number ``27017``. This writes the export to the ``contacts.json`` file in :term:`JSON` format."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:56
# 6db97418ae66444f8ab3d948412415d8
msgid "Export from Remote Host Running with Authentication"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:58
# 741cc167f5cf407b99dba4cdffd9738a
msgid "The following example exports the ``contacts`` collection from the ``marketing`` database, which requires authentication."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:61
# 6ec1a2afa226459bb4e49270f15bd62e
msgid "This data resides on the MongoDB instance located on the host ``mongodb1.example.net`` running on port ``37017``, which requires the username ``user`` and the password ``pass``."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:70
# 4023c5b9df80467da6449605f81345b5
msgid "Export Query Results"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:71
# 0ef575979a244f79bd5f68352b9df487
msgid "You can export only the results of a query by supplying a query filter with the :option:`--query <mongoexport --query>` option, and limit the results to a single database using the \":option:`--db <mongoexport --db>`\" option."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:75
# 13086a120ec2434e860ef1d32cd8c583
msgid "For instance, this command returns all documents in the ``sales`` database's ``contacts`` collection that contain a field named ``field`` with a value of ``1``."
msgstr ""

#: ../source/includes/fact-quote-command-line-query.rst:1
# 94876c7738784f008dfdd3ae8e42edf2
msgid "You must enclose the query in single quotes (e.g. ``'``) to ensure that it does not interact with your shell environment."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:288
# 3160d620caa14fae9b62a0d9d058ce75
msgid "Collection Import with :program:`mongoimport`"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:2
# 633fab8ea7e043ecb6cfd8d30a0623c0
msgid "Simple Usage"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:4
# f295ed9c1edb4d128d7216d67da7b487
msgid ":program:`mongoimport` restores a database from a backup taken with :program:`mongoexport`. Most of the arguments to :program:`mongoexport` also exist for :program:`mongoimport`."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:8
# 09357be5a65b413d8732ffdd6b811b5b
msgid "In the following example, :program:`mongoimport` imports the data in the :term:`JSON` data from the ``contacts.json`` file into the collection ``contacts`` in the ``users`` database."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:17
# 7222a15403e2439c9e02812cdc7293cc
msgid "Import ``JSON`` to Remote Host Running with Authentication"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:19
# 3e0854a35c704a3aa2039251c963e3de
msgid "In the following example, :program:`mongoimport` imports data from the file ``/opt/backups/mdb1-examplenet.json`` into the ``contacts`` collection within the database ``marketing`` on a remote MongoDB database with authentication enabled."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:24
# 8cddeee956a648d387d5b1476c79828b
msgid ":program:`mongoimport` connects to the :program:`mongod` instance running on the host ``mongodb1.example.net`` over port ``37017``. It authenticates with the username ``user`` and the password ``pass``."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:33
# a7917ca476d54eae9895f1a61ccbfce2
msgid "``CSV`` Import"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:35
# 4a534eaa3a9a47a38b578d0f105ceab4
msgid "In the following example, :program:`mongoimport` imports the :term:`csv` formatted data in the ``/opt/backups/contacts.csv`` file into the collection ``contacts`` in the ``users`` database on the MongoDB instance running on the localhost port numbered ``27017``."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:41
# ae76095059e34b8586b182b647c89f23
msgid "Specifying :option:`--headerline <mongoimport --headerline>` instructs :program:`mongoimport` to determine the name of the fields using the first line in the CSV file."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:49
# f612dfc9bc244cb1b4bdbe2de0f1d3fb
msgid ":program:`mongoimport` uses the input file name, without the extension, as the collection name if ``-c`` or ``--collection`` is unspecified. The following example is therefore equivalent:"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:57
# 4ef16cf16a19470bb78b921f973ddd27
msgid "Use the \":option:`--ignoreBlanks <mongoimport --ignoreBlanks>`\" option to ignore blank fields. For :term:`CSV` and :term:`TSV` imports, this option provides the desired functionality in most cases because it avoids inserting fields with null values into your collection."
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:6
# 6a54109c16f94d408e30cbc377f6c377
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:8
# b04d578e729644a497162e3f96bbe190
msgid "`Backup and its Role in Disaster Recovery White Paper <https://www.mongodb.com/lp/white-paper/backup-disaster-recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:9
# 35711b760a3146e4a3e89eba3d3385da
msgid ":mms-home:`Cloud Backup through MongoDB Cloud Manager </?jmp=docs>`"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:10
# 7df2901f19d24ee6a0d14d9c9edf20f3
msgid "`Blog Post: Backup vs. Replication, Why you Need Both <http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:11
# 7be204b393124beba5f918330405c7bd
msgid ":products:`Backup Service with Ops Manager, an on-premise solution available in MongoDB Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>`"
msgstr ""

