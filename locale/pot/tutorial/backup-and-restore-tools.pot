# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/backup-and-restore-tools.txt:3
# a16e2ee3051a4802814bbf90e13972d3
msgid "Back Up and Restore with MongoDB Tools"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:7
# 74a5396651624157a6010fa4540999d7
msgid "This document describes the process for creating backups and restoring data using the utilities provided with MongoDB."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:10
# 2bb52020a2b04bc9a49388707f5bddf8
msgid "Because all of these tools primarily operate by interacting with a running :program:`mongod` instance, they can impact the performance of your running database."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:14
# 26ec32180ede4ed280f88e9d64aa1991
msgid "Not only do they create traffic for a running database instance, they also force the database to read all data through memory. When MongoDB reads infrequently used data, it can supplant more frequently accessed data, causing a deterioration in performance for the database's regular workload."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:19
# 5e99b995a4e04b578138211c6c810e7c
msgid "No matter how you decide to import or export your data, consider the following guidelines:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:22
# 26eeae84d9b041739d38f78f29454988
msgid "Label files so that you can identify the contents of the export or backup as well as the point in time the export/backup reflect."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:25
# 99bc87da9e6944e983161a8b480fee88
msgid "Do not create or apply exports if the backup process itself will have an adverse effect on a production system."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:28
# 289bcc4414e2474eb594078d6abf3120
msgid "Make sure that the backups reflect a consistent data state. Export or backup processes can impact data integrity (i.e. type fidelity) and consistency if updates continue during the backup process."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:32
# 196872fb6b8042f8bc2cdd195a3cea36
msgid "Test backups and exports by restoring and importing to ensure that the backups are useful."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:35
# 1ae2d51bb73543eab3b1abd956803885
msgid ":doc:`/core/backups` or :mms-docs:`MongoDB Cloud Manager Backup documentation </tutorial/nav/backup-use/>` for more information on backing up MongoDB instances. Additionally, consider the following references for the MongoDB import/export tools:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:40
# 6cef87364af74b7ab14990257cc7ef1d
msgid ":program:`mongoimport`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:41
# be30dc373b98479297cc7517e3b90707
msgid ":program:`mongoexport`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:42
# 855bfa2626dc486bb7f9bb7e2f9624aa
msgid ":program:`mongorestore`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:43
# 626a05e9cb5446cca18749c9220fdfaa
msgid ":program:`mongodump`"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:48
# c301486c8ca6467daffa9a52ba336be6
msgid "Binary BSON Dumps"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:50
# ddf6a33f83724d0c8d904a7e9925b221
msgid "The :program:`mongorestore` and :program:`mongodump` utilities work with :doc:`BSON </reference/bson-types>` data dumps, and are useful for creating backups of small deployments. For resilient and non-disruptive backups, use a file system or block-level disk snapshot function, such as the methods described in the :doc:`/core/backups` document."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:56
# 9f6c895c4e504806a47a5c661a30b860
msgid "Use these tools for backups if other backup methods, such as the |mms-home| or :doc:`file system snapshots </tutorial/backup-with-filesystem-snapshots>` are unavailable."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:67
# 8146b51c34cb42b8891b11f68d9c4e4a
msgid "Backup a Database with ``mongodump``"
msgstr ""

#: ../source/includes/fact-mongodump-local-database.rst:1
# af9c327b5c164eceb5b7d97ccad573b3
msgid ":program:`mongodump` does *not* dump the content of the ``local`` database."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:1
# 92cecdc4611748df84ce3973ba9969f1
msgid "To back up all the databases in a cluster via :program:`mongodump`, you should have the :authrole:`backup` role. The :authrole:`backup` role provides the required privileges for backing up all databases. The role confers no additional access, in keeping with the policy of :term:`least privilege`."
msgstr ""

#: ../source/includes/access-mongodump-collections.rst:6
# 4c91c306429644359d927e3259019301
msgid "To back up a given database, you must have ``read`` access on the database. Several roles provide this access, including the :authrole:`backup` role."
msgstr ""

#: ../source/includes/fact-required-access-for-backup-profiling.rst:1
# d9d9e93ff4144cb1850fbc5e7e8295b0
msgid "To back up the :data:`system.profile <<database>.system.profile>` collection, which is created when you activate :ref:`database profiling <database-profiling>`, you must have **additional** ``read`` access on this collection. Several roles provide this access, including the :authrole:`clusterAdmin` and :authrole:`dbAdmin` roles."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:3
# f6acf5ec2a1b4c10a41f840766f6447b
msgid "To back up users and :ref:`user-defined roles <user-defined-roles>` for a given database, you must have access to the ``admin`` database. MongoDB stores the user data and role definitions for all databases in the ``admin`` database."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:8
# 51cf2f44625d4ee0beab3829af4ee373
msgid "Specifically, to back up a given database's users, you must have the :authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` database's :data:`admin.system.users` collection. The :authrole:`backup` and :authrole:`userAdminAnyDatabase` roles both provide this privilege."
msgstr ""

#: ../source/includes/access-mongodump-users.rst:13
# b59e700906a44050984a9306689d8397
msgid "To back up the user-defined roles on a database, you must have the :authaction:`find` action on the ``admin`` database's :data:`admin.system.roles` collection. Both the :authrole:`backup` and :authrole:`userAdminAnyDatabase` roles provide this privilege."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:76
# 1c3c2ddd7ad94fafb3d2ce5949fccfb8
msgid "Basic ``mongodump`` Operations"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:78
# bf15157d0c9744a5b524ffdfd62f453d
msgid "The :program:`mongodump` utility backs up data by connecting to a running :program:`mongod` or :program:`mongos` instance."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:81
# 0aab32791a0e4c6eb83403e8cacfab17
msgid "The utility can create a backup for an entire server, database or collection, or can use a query to backup just part of a collection."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:84
# c57c985794624e8f9e106eb82c4721bc
msgid "When you run :program:`mongodump` without any arguments, the command connects to the MongoDB instance on the local system (e.g. ``127.0.0.1`` or ``localhost``) on port ``27017`` and creates a database backup named ``dump/`` in the current directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:89
# f6197b89c6844967a91fb41feaf29ac5
msgid "To backup data from a :program:`mongod` or :program:`mongos` instance running on the same machine and on the default port of ``27017``, use the following command:"
msgstr ""

#: ../source/includes/warning-mongodump-compatibility-2.2.rst:1
# 29cf14d57ca0423bb2c4da671e5fd445
msgid "The data format used by :program:`mongodump` from version 2.2 or later is *incompatible* with earlier versions of :program:`mongod`. Do not use recent versions of :program:`mongodump` to back up older data stores."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:99
# 18f6954bcfcb446195d17148d2688dc3
msgid "You can also specify the :option:`--host <mongodump --host>` and :option:`--port <mongodump --port>` of the MongoDB instance that the :program:`mongodump` should connect to. For example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:107
# 66d129e3cc7544d682aeccbe6e3a7933
msgid ":program:`mongodump` will write :term:`BSON` files that hold a copy of data accessible via the :program:`mongod` listening on port ``27017`` of the ``mongodb.example.net`` host. See :ref:`backup-from-non-local` for more information."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:112
# b46f091f64c4490796f434269450868a
msgid "To specify a different output directory, you can use the :option:`--out or -o <mongodump --out>` option:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:119
# b373c239cd3942e08c55d9986fd576d8
msgid "To limit the amount of data included in the database dump, you can specify :option:`--db <mongodump --db>` and :option:`--collection <mongodump --collection>` as options to :program:`mongodump`. For example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:128
# 1e24ea7dab7a4233aa462de805303c0e
msgid "This operation creates a dump of the collection named ``myCollection`` from the database ``test`` in a :file:`dump/` subdirectory of the current working directory."
msgstr ""

#: ../source/includes/fact-mongodump-overwrite-files.rst:1
# 247b3d6c94064a7481260ebfc543b9f7
msgid ":program:`mongodump` overwrites output files if they exist in the backup data folder. Before running the :program:`mongodump` command multiple times, either ensure that you no longer need the files in the output folder (the default is the ``dump/`` folder) or rename the folders or files."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:135
# 788ac5a39b2747a99f2d31515559ca51
msgid "Point in Time Operation Using Oplogs"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:137
# 3c0cdfba07884b06b85f0fb9470fffef
msgid "Use the :option:`--oplog <mongodump --oplog>` option with :program:`mongodump` to collect the :term:`oplog` entries to build a point-in-time snapshot of a database within a replica set. With :option:`--oplog <mongodump --oplog>`, :program:`mongodump` copies all the data from the source database as well as all of the :term:`oplog` entries from the beginning to the end of the backup procedure. This operation, in conjunction with :option:`mongorestore --oplogReplay <mongorestore --oplogReplay>`, allows you to restore a backup that reflects the specific moment in time that corresponds to when :program:`mongodump` completed creating the dump file."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:151
# 9bec8486887a4300a91acd6f8a47697d
msgid "Create Backups from Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:153
# f8cdebc32f9c43f9bae2ff6374934434
msgid "The :option:`--host <mongodump --host>` and :option:`--port <mongodump --port>` options for :program:`mongodump` allow you to connect to and backup from a remote host. Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:162
# e1473ccfe7e04722b03ea619b528f836
msgid "On any :program:`mongodump` command you may, as above, specify username and password credentials to specify database authentication."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:168
# f17591ad8d7148e9855fcbed70c28dd0
msgid "Restore a Database with ``mongorestore``"
msgstr ""

#: ../source/includes/access-mongorestore-collections.rst:1
# cf46bc938e2d4ec6b0fc28439d33b7cf
msgid "To restore collection data to a database with authentication enabled, the connecting user must possess the appropriate user roles."
msgstr ""

#: ../source/includes/access-mongorestore-collections.rst:4
# fde2f7c4ed3f450cbd09f9a7cfb45e0f
msgid "To restore a single database, the connecting user must possess the :authrole:`readWrite` role for that database. Alternatively, the :authrole:`readWriteAnyDatabase` provides access to restore any database. The :authrole:`restore` role also provides the requisite permissions."
msgstr ""

#: ../source/includes/access-mongorestore-users.rst:3
# 84aaec4e6d534bf88ca758d4df22cfa2
msgid "To restore users and :ref:`user-defined roles <user-defined-roles>` on a given database, you must have access to the ``admin`` database. MongoDB stores the user data and role definitions for all databases in the ``admin`` database."
msgstr ""

#: ../source/includes/access-mongorestore-users.rst:8
# 06c51fc9144b4943b238f15b3956d0ba
msgid "Specifically, to restore users to a given database, you must have the :authaction:`insert` :ref:`action <security-user-actions>` on the ``admin`` database's :data:`admin.system.users` collection. The :authrole:`restore` role provides this privilege."
msgstr ""

#: ../source/includes/access-mongorestore-users.rst:13
# ab5eb9b8f7e240848cff0c1c8cbdc005
msgid "To restore user-defined roles to a database, you must have the :authaction:`insert` action on the ``admin`` database's :data:`admin.system.roles` collection. The :authrole:`restore` role provides this privilege."
msgstr ""

#: ../source/includes/access-mongorestore-users.rst:18
# e5b6c5ad12054b97ad8b6af057ba40c8
msgid "If your database is running with authentication enabled, you must possess the :authrole:`userAdmin` role on the database you are restoring, or the :authrole:`userAdminAnyDatabase` role, which allows you to restore user data to any database. The :authrole:`restore` role also provides the requisite privileges."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:175
# b1b9d9ca439d4daba19af2c27900fa3a
msgid "Basic ``mongorestore`` Operations"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:177
# 46b4a00fecbb4bae938a2514a1e4be1c
msgid "The :program:`mongorestore` utility restores a binary backup created by :program:`mongodump`. By default, :program:`mongorestore` looks for a database backup in the :file:`dump/` directory."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:181
# 09f8f0cf5d4d4a7c837d11457d34c12d
msgid "The :program:`mongorestore` utility restores data by connecting to a running :program:`mongod` or :program:`mongos` directly."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:184
# 2a7da19c22cf40868340bd28e80dbe9d
msgid ":program:`mongorestore` can restore either an entire database backup or a subset of the backup."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:187
# 0eef41334e56462a9d10c231fb333244
msgid "To use :program:`mongorestore` to connect to an active :program:`mongod` or :program:`mongos`, use a command with the following prototype form:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:195
#: ../source/tutorial/backup-and-restore-tools.txt:235
# e7b08e34f24c4e818507d0b993d79dd8
# a13c7903f6b049f1b0022fb1fa1715b9
msgid "Consider the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:201
# c8ad96778b0248bc83d399a5bc29df82
msgid "Here, :program:`mongorestore` imports the database backup in the :file:`dump-2013-10-25` directory to the :program:`mongod` instance running on the localhost interface."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:208
# 7724d34ed3a247609d44b4c1b7d6c41c
msgid "Restore Point in Time Oplog Backup"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:210
# 6e0408d9b4a24e238bf16d244077e094
msgid "If you created your database dump using the :option:`--oplog <mongodump --oplog>` option to ensure a point-in-time snapshot, call :program:`mongorestore` with the :option:`--oplogReplay <mongorestore --oplogReplay>` option, as in the following example:"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:220
# ec0a158868914dc28e025dbbe2c5c403
msgid "You may also consider using the :option:`mongorestore --objcheck` option to check the integrity of objects while inserting them into the database, or you may consider the :option:`mongorestore --drop` option to drop each collection from the database before restoring from backups."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:227
# 078f2b86c7024a8eac95cd5f2c4768fc
msgid "Restore Backups to Non-Local ``mongod`` Instances"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:229
# af6b148ba6d243169d7a98609c47b59e
msgid "By default, :program:`mongorestore` connects to a MongoDB instance running on the localhost interface (e.g. ``127.0.0.1``) and on the default port (``27017``). If you want to restore to a different host or port, use the :option:`--host <mongorestore --host>` and :option:`--port <mongorestore --port>` options."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:241
# b95ebf2090fc42948facbfb3a5bbdacd
msgid "As above, you may specify username and password connections if your :program:`mongod` requires authentication."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:247
# c51022f411274aa99847ed4099b26232
msgid "Human Intelligible Import/Export Formats"
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:249
# 12d7fbbeb5a34a1bb251892982c60a3a
msgid "MongoDB's :program:`mongoimport` and :program:`mongoexport` tools allow you to work with your data in a human-readable :doc:`Extended JSON </reference/mongodb-extended-json>` or :term:`CSV` format. This is useful for simple ingestion to or from a third-party system, and when you want to backup or export a small subset of your data. For more complex data migration tasks, you may want to write your own import and export scripts using a client :term:`driver` to interact with the database."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:257
# 5f63898115e5471ab1545dec023def16
msgid "The examples in this section use the MongoDB tools :program:`mongoimport` and :program:`mongoexport`. These tools may also be useful for importing data into a MongoDB database from third party applications."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:263
# 18158e9c11a342b18500e5d281b91658
msgid "If you want to simply copy a database or collection from one instance to another, consider using the :dbcommand:`copydb`, :dbcommand:`clone`, or :dbcommand:`cloneCollection` commands, which may be more suited to this task. The :program:`mongo` shell provides the :method:`db.copyDatabase()` method."
msgstr ""

#: ../source/includes/fact-type-fidelity-loss.rst:4
# c7b2e9bb76e94708be7a51de0175f4e4
msgid "Avoid using :program:`mongoimport` and :program:`mongoexport` for full instance production backups. They do not reliably preserve all rich :term:`BSON` data types, because :term:`JSON` can only represent a subset of the types supported by BSON. Use :program:`mongodump` and :program:`mongorestore` as described in :doc:`/core/backups` for this kind of functionality."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:274
# dcfcca8b385842c2a6043fbf44ae6241
msgid "Collection Export with :program:`mongoexport`"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:2
# fc5eb92c7f864d51a0f1be7a48566f71
msgid "Export in CSV Format"
msgstr ""

#: ../source/includes/fact-3.0-mongoexport-drop-csv-option.rst:1
# f686a9d17a5c49529c8f6e38b0e66415
msgid ":program:`mongoexport` removed the ``--csv`` option. Use the :option:`--type=csv <--type>` option to specify CSV format for the output."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:6
# fd5dff41f16f4f229e81db7d80c68834
msgid "In the following example, :program:`mongoexport` exports data from the collection ``contacts`` collection in the ``users`` database in :term:`CSV` format to the file ``/opt/backups/contacts.csv``."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:10
# e1fd8f3611c945c08f20e40fafe1b3bf
msgid "The :program:`mongod` instance that :program:`mongoexport` connects to is running on the localhost port number ``27017``."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:13
# f6771d1458f546e8bbd80938f2908e4d
msgid "When you export in CSV format, you must specify the fields in the documents to export. The operation specifies the ``name`` and ``address`` fields to export."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:21
# 731b1a83a04f42a29d4807fd197a84c2
msgid "For CSV exports only, you can also specify the fields in a file containing the line-separated list of fields to export. The file must have only one field per line."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:25
# e6c36cd23f5140caaf62a86e9ee7f876
msgid "For example, you can specify the ``name`` and ``address`` fields in a file ``fields.txt``:"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:33
# e68338c5a89c4be6a1ab93bee9d81aa2
msgid "Then, using the :option:`--fieldFile` option, specify the fields to export with the file:"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:40
# 831bf035a28f458c98cf4b007fc6e930
msgid ":program:`mongoexport` removed the ``--csv`` option and replaced with the :option:`--type` option."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:45
# 3b6766c01a9a4025b022c31875f3689f
msgid "Export in JSON Format"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:47
# e8af8633b8ca43ac80601141a966aa8e
msgid "This example creates an export of the ``contacts`` collection from the MongoDB instance running on the localhost port number ``27017``. This writes the export to the ``contacts.json`` file in :term:`JSON` format."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:56
# 4f7605c846cd4ed9be414738476ea158
msgid "Export from Remote Host Running with Authentication"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:58
# c9ef3800847c4ada82f7324abefdf5c7
msgid "The following example exports the ``contacts`` collection from the ``marketing`` database, which requires authentication."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:61
# 4c8a61ac83834a4798f718c05cc26ae1
msgid "This data resides on the MongoDB instance located on the host ``mongodb1.example.net`` running on port ``37017``, which requires the username ``user`` and the password ``pass``."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:70
# fc34208d73cf47659faff885a967f984
msgid "Export Query Results"
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:71
# 541606531b054571aa6e80f68c68fde0
msgid "You can export only the results of a query by supplying a query filter with the :option:`--query <mongoexport --query>` option, and limit the results to a single database using the \":option:`--db <mongoexport --db>`\" option."
msgstr ""

#: ../source/includes/fact-mongoexport-usage.rst:75
# 2e6a251385c44dd38809b7128b1fc72f
msgid "For instance, this command returns all documents in the ``sales`` database's ``contacts`` collection that contain a field named ``field`` with a value of ``1``."
msgstr ""

#: ../source/includes/fact-quote-command-line-query.rst:1
# 6c9177120cdf40888db7049d694f9fb7
msgid "You must enclose the query in single quotes (e.g. ``'``) to ensure that it does not interact with your shell environment."
msgstr ""

#: ../source/tutorial/backup-and-restore-tools.txt:279
# 6b18cfe05dee40219d28c2585c0cbc77
msgid "Collection Import with :program:`mongoimport`"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:2
# f05e7c0726c943c89aa205f95fc6dc1d
msgid "Simple Usage"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:4
# 371c6232d38846d691a90e70e521c053
msgid ":program:`mongoimport` restores a database from a backup taken with :program:`mongoexport`. Most of the arguments to :program:`mongoexport` also exist for :program:`mongoimport`."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:8
# c0bb44a4c41d4f38a7f040163d61b168
msgid "In the following example, :program:`mongoimport` imports the data in the :term:`JSON` data from the ``contacts.json`` file into the collection ``contacts`` in the ``users`` database."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:17
# 544741ba84f24b288b9eec2a61a86d72
msgid "Import ``JSON`` to Remote Host Running with Authentication"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:19
# 07845cfd1d07479185cce686580d2b92
msgid "In the following example, :program:`mongoimport` imports data from the file ``/opt/backups/mdb1-examplenet.json`` into the ``contacts`` collection within the database ``marketing`` on a remote MongoDB database with authentication enabled."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:24
# 3839e090757948ec844f22aee5d591d5
msgid ":program:`mongoimport` connects to the :program:`mongod` instance running on the host ``mongodb1.example.net`` over port ``37017``. It authenticates with the username ``user`` and the password ``pass``."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:33
# bde01f88de8a4e1bb9f5757cdec80dcb
msgid "``CSV`` Import"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:35
# 22f720bde3ac439d95d01983f7dd86b4
msgid "In the following example, :program:`mongoimport` imports the :term:`csv` formatted data in the ``/opt/backups/contacts.csv`` file into the collection ``contacts`` in the ``users`` database on the MongoDB instance running on the localhost port numbered ``27017``."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:41
# efb20cc319244365ab9141c9b6dfe993
msgid "Specifying :option:`--headerline <mongoimport --headerline>` instructs :program:`mongoimport` to determine the name of the fields using the first line in the CSV file."
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:49
# c05b2ea429fc4ab6a1c92e17b877924b
msgid ":program:`mongoimport` uses the input file name, without the extension, as the collection name if ``-c`` or ``--collection`` is unspecified. The following example is therefore equivalent:"
msgstr ""

#: ../source/includes/fact-mongoimport-usage.rst:57
# 61580bcbeb264532afdf621bf734fca8
msgid "Use the \":option:`--ignoreBlanks <mongoimport --ignoreBlanks>`\" option to ignore blank fields. For :term:`CSV` and :term:`TSV` imports, this option provides the desired functionality in most cases because it avoids inserting fields with null values into your collection."
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:6
# f1dbe557cf944a488491fa2b515a68b7
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:8
# bdea4bbe5282418099729a46880ce242
msgid "`Backup and its Role in Disaster Recovery White Paper <https://www.mongodb.com/lp/white-paper/backup-disaster-recovery?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:9
# ed3e033e934941819c4c7e49effef32c
msgid ":mms-home:`Cloud Backup through MongoDB Cloud Manager </?jmp=docs>`"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:10
# 5474eda748b8480cb61a3b9f0f7b60c8
msgid "`Blog Post: Backup vs. Replication, Why you Need Both <http://www.mongodb.com/blog/post/backup-vs-replication-why-do-you-need-both?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-mongodump.rst:11
# 200fc983128c402b8b0d4ee0fc8b18c6
msgid ":products:`Backup Service with Ops Manager, an on-premise solution available in MongoDB Enterprise Advanced </mongodb-enterprise-advanced?jmp=docs>`"
msgstr ""

