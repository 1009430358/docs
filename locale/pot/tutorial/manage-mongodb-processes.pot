# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/manage-mongodb-processes.txt:3
# 84f141a7fd294182878ec51dd756f0f0
msgid "Manage ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:0
# dc0be2d96ec54ed6abbd26f3cb1c1849
msgid "On this page"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:13
# 02a17d3b7a7543de9cdd0d6c544add90
msgid "MongoDB runs as a standard program. You can start MongoDB from a command line by issuing the :program:`mongod` command and specifying options.  For a list of options, see the :program:`mongod` reference. MongoDB can also run as a Windows service. For details, see :ref:`manually-create-windows-service`. To install MongoDB, see :doc:`/installation`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:20
# 465cd63404084b7f92bcbb5e8e88e6c8
msgid "The following examples assume the directory containing the :program:`mongod` process is in your system paths. The :program:`mongod` process is the primary database process that runs on an individual server. :program:`mongos` provides a coherent MongoDB interface equivalent to a :program:`mongod` from the perspective of a client. The :program:`mongo` binary provides the administrative shell."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:28
# d443a819d04a440b89a248e39c20c04e
msgid "This document discusses the :program:`mongod` process; however, some portions of this document may be applicable to :program:`mongos` instances."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:33
# 50a174b9c3324511b818e761855e98f3
msgid "Start ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:35
# 9cab1e3ebda64155a75b329df68e8157
msgid "By default, MongoDB stores data in the ``/data/db`` directory. On Windows, MongoDB stores data in ``C:\\data\\db``. On all platforms, MongoDB listens for connections from clients on port ``27017``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:39
# 730c59a95a1e47c8b347b534ca833ac5
msgid "To start MongoDB using all defaults, issue the following command at the system shell:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:47
# 79bbcef72e144416adf1f4e842012ace
msgid "Specify a Data Directory"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:49
# adf7ddd4d69946018912a49c97c65a5d
msgid "If you want :program:`mongod` to store data files at a path *other than* ``/data/db`` you can specify a :setting:`~storage.dbPath`. The :setting:`~storage.dbPath` must exist before you start :program:`mongod`. If it does not exist, create the directory and the permissions so that :program:`mongod` can read and write data to this path. For more information on permissions, see the :doc:`security operations documentation </administration/security-checklist>`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:57
# cc4818f1c10d46f8bb36cfe414eab492
msgid "To specify a :setting:`~storage.dbPath` for :program:`mongod` to use as a data directory, use the :option:`--dbpath <mongod --dbpath>` option. The following invocation will start a :program:`mongod` instance and store data in the ``/srv/mongodb`` path"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:67
# 471acad0368d442ab85b67d19af8a826
msgid "Specify a TCP Port"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:69
# 9626742b15304273a8d11c0fc1d98e53
msgid "Only a single process can listen for connections on a network interface at a time. If you run multiple :program:`mongod` processes on a single machine, or have other processes that must use this port, you must assign each a different port to listen on for client connections."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:75
# 6cfc6e4ffe284ef592703b9c7cf940fe
msgid "To specify a port to :program:`mongod`, use the :option:`--port <mongod --port>` option on the command line. The following command starts :program:`mongod` listening on port ``12345``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:83
# 0b847261d81a4143bb6979cf5e2062ce
msgid "Use the default port number when possible, to avoid confusion."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:86
# e28c8836ccf9414d968d084e9e72903b
msgid "Start ``mongod`` as a Daemon"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:88
# c1baa56a695740a6abb49a2edc6998e6
msgid "To run a :program:`mongod` process as a daemon (i.e. :setting:`~processManagement.fork`), *and* write its output to a log file, use the :option:`--fork <mongod --fork>` and :option:`--logpath <mongod --logpath>` options. You must create the log directory; however, :program:`mongod` will create the log file if it does not exist."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:94
# f5fdc4433b9c4508bf5f27298c750922
msgid "The following command starts :program:`mongod` as a daemon and records log output to ``/var/log/mongodb.log``."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:102
# c83c211456d84396bfc672aa4b7f4f2d
msgid "Additional Configuration Options"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:104
# 3233eb722fe04843a6d7756ba1bd9919
msgid "For an overview of common configurations and deployments for common use cases, see :doc:`/administration/configuration`."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:111
# eef4fb9db12c4af592b07be44d19c932
msgid "Stop ``mongod`` Processes"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:113
# 4906c48d5dee4117a25fde8bea4a491f
msgid "In a clean shutdown a :program:`mongod` completes all pending operations, flushes all data to data files, and closes all data files. Other shutdowns are *unclean* and can compromise the validity of the data files."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:124
# 665b4e63c7384e838979f9f7035b1d82
msgid "To ensure a clean shutdown, always shutdown :program:`mongod` instances using one of the following methods:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:128
# 6728ef0b77e84a2187c01f2816ad1f80
msgid "Use ``shutdownServer()``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:130
# bae5489244cc430d83fc17507093708e
msgid "Shut down the :program:`mongod` from the :program:`mongo` shell using the :method:`db.shutdownServer()` method as follows:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:138
# bc93465ea05c46b29a177f8647d3591b
msgid "Calling the same method from a :term:`init script` accomplishes the same result."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:140
# 13580fd447224744badb9e8d02a97d08
msgid "For systems with :setting:`~security.authorization` enabled, users may only issue :method:`db.shutdownServer()` when authenticated to the ``admin`` database or via the localhost interface on systems without authentication enabled."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:146
# 563fb980ca04443abb7aded8eaae455d
msgid "Use ``--shutdown``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:148
# 3727680421134f2cb2397135c0105703
msgid "From the Linux command line, shut down the :program:`mongod` using the :option:`--shutdown <mongod --shutdown>` option in the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:156
# 03529c0bb1304f20b937125eb01ce318
msgid "Use ``CTRL-C``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:158
# 4a107a4007534e5f98b841f620c29a10
msgid "When running the :program:`mongod` instance in interactive mode (i.e. without :option:`--fork <mongod --fork>`), issue ``Control-C`` to perform a clean shutdown."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:163
# 1d002733688c4dd8a7fedad5249c7e0f
msgid "Use ``kill``"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:165
# 7fd3fbdf19cb49a0a1dccb838e7ebe5c
msgid "From the Linux command line, shut down a specific :program:`mongod` instance using the following command:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:174
# 22fa80cd901248e981424db0bfcb77ca
msgid "Never use ``kill -9`` (i.e. ``SIGKILL``) to terminate a mongod instance."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:177
# dafbab42019b4b5597b431c8c816504b
msgid "Stop a Replica Set"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:180
# b62c7c9f878e4cca9779d0e4d5aa82d0
msgid "Procedure"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:182
# ebd9437a2d9b43c88687c48cc2bffca4
msgid "If the :program:`mongod` is the :term:`primary` in a :term:`replica set`, the shutdown process for this :program:`mongod` instance has the following steps:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:186
# 50da45d4960d48f6bfc824724973aec7
msgid "Check how up-to-date the :term:`secondaries <secondary>` are."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:188
# 67e26c51a6844312942dcd6f123c0881
msgid "If no secondary is within 10 seconds of the primary, :program:`mongod` will return a message that it will not shut down. You can pass the :dbcommand:`shutdown` command a ``timeoutSecs`` argument to wait for a secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:193
# a8142ae060cd4ebaac07f7a9f7774642
msgid "If there is a secondary within 10 seconds of the primary, the primary will step down and wait for the secondary to catch up."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:196
# e1fc77742acf40deb0341df0e51d7f1d
msgid "After 60 seconds or once the secondary has caught up, the primary will shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:200
# b67f73f843a84a5db6303616b2ba20bb
msgid "Force Replica Set Shutdown"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:202
# ce9a849342c748a1a27836ff05bace85
msgid "If there is no up-to-date secondary and you want the primary to shut down, issue the :dbcommand:`shutdown` command with the ``force`` argument, as in the following :program:`mongo` shell operation:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:210
# 85b61bc1f9aa4ed1840e0a6b7a2c9e3e
msgid "To keep checking the secondaries for a specified number of seconds if none are immediately up-to-date, issue :dbcommand:`shutdown` with the ``timeoutSecs`` argument. MongoDB will keep checking the secondaries for the specified number of seconds if none are immediately up-to-date. If any of the secondaries catch up within the allotted time, the primary will shut down. If no secondaries catch up, it will not shut down."
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:217
# e6fb1abae07c44b99607b65fd7b3a421
msgid "The following command issues :dbcommand:`shutdown` with ``timeoutSecs`` set to ``5``:"
msgstr ""

#: ../source/tutorial/manage-mongodb-processes.txt:224
# 71cfa20825de4e6a9e2a5a71bb237e6d
msgid "Alternately you can use the ``timeoutSecs`` argument with the :method:`db.shutdownServer()` method:"
msgstr ""

