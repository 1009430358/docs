# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:3
# 0fdefddd8a074cf5b72ff6f993069584
msgid "Calculate Distance Using Spherical Geometry"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:0
# ad7a091fe0ad474e8622b3a5e43cab71
msgid "On this page"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:13
# fd8185f0fa1d4a20b2ead3fb83662b8b
msgid "While basic queries using spherical distance are supported by the ``2d`` index, consider moving to a ``2dsphere`` index if your data is primarily longitude and latitude."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:17
# ce13228c942c4ce2814c60e0a7df75dc
msgid "The ``2d`` index supports queries that calculate distances on a Euclidean plane (flat surface). The index also supports the following query operators and command that calculate distances using spherical geometry:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:22
# c98cfa2d85194dda8715c80e7598144f
msgid ":query:`$nearSphere`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:24
# 368cdc67c21b41c6bcde993d9a0ff138
msgid ":query:`$centerSphere`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:26
# 6ba064783e31423899b026792fda172e
msgid ":query:`$near`"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:28
# ce790f1c53d44cd3bd97435a2c900d42
msgid ":dbcommand:`geoNear` command with the ``{ spherical: true }`` option."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:30
# 19e4fb27025a427ca0e9c57f91b1b775
msgid "These three queries use radians for distance. Other query types do not."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:33
# 8d08075c3a7440b7a512f13ae29ddcd5
msgid "For spherical query operators to function properly, you must convert distances to radians, and convert from radians to the distances units used by your application."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:37
# 1a24600c9a6e4e238abffd5309653128
msgid "To convert:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:39
# 5249bdfb5405465a8e811ba3f23fa5a0
msgid "*distance to radians*: divide the distance by the radius of the sphere (e.g. the Earth) in the same units as the distance measurement."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:43
# 108a5a258c4443f48a53318d0adbf4fa
msgid "*radians to distance*: multiply the radian measure by the radius of the sphere (e.g. the Earth) in the units system that you want to convert the distance to."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:47
# a9230150745943d18db1c914ed0f2895
msgid "The equatorial radius of the Earth is approximately ``3,963.2`` miles or ``6,378.1`` kilometers."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:50
# be1f6bf06187464f9148875382428d91
msgid "The following query would return documents from the ``places`` collection within the circle described by the center ``[ -74, 40.74 ]`` with a radius of ``100`` miles:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:59
# 8787623461eb4af18504d771900375f6
msgid "You may also use the ``distanceMultiplier`` option to the :dbcommand:`geoNear` to convert radians in the :program:`mongod` process, rather than in your application code. See :ref:`distance multiplier <geospatial-indexes-distance-multiplier>`."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:64
# 4fde4db51901409cad9533d1301e262b
msgid "The following spherical query, returns all documents in the collection ``places`` within ``100`` miles from the point ``[ -74, 40.74 ]``."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:75
# 770518fc7bb64d6e9676dd487c919d6b
msgid "The output of the above command would be:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:103
# 8c9ed904593b48b2a5663f3c9e450612
msgid "Spherical queries that wrap around the poles or at the transition from ``-180`` to ``180`` longitude raise an error."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:108
# 3c57ef207c3e4558afd0128f1bb21d55
msgid "While the default Earth-like bounds for geospatial indexes are between ``-180`` inclusive, and ``180``, valid values for latitude are between ``-90`` and ``90``."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:115
# d1859529f0ed4792946faeaa0e008f69
msgid "Distance Multiplier"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:117
# 5200feb06a0b46a4b0e8ced6c45e29df
msgid "The ``distanceMultiplier`` option of the :dbcommand:`geoNear` command returns distances only after multiplying the results by an assigned value. This allows MongoDB to return converted values, and removes the requirement to convert units in application logic."
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:122
# 4beb89edab4549fc88fc3689b4d07698
msgid "Using ``distanceMultiplier`` in spherical queries provides results from the :dbcommand:`geoNear` command that do not need radian-to-distance conversion. The following example uses ``distanceMultiplier`` in the :dbcommand:`geoNear` command with a :doc:`spherical </tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes>` example:"
msgstr ""

#: ../source/tutorial/calculate-distances-using-spherical-geometry-with-2d-geospatial-indexes.txt:136
# 5eb29081516d44ae9adeb863f8b02af3
msgid "The output of the above operation would resemble the following:"
msgstr ""

