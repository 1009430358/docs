# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:3
# d13a7a1436b944688c55063f80f0fda3
msgid "Model Tree Structures with Nested Sets"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:0
# da9f36f43a314110a5a6828f5d00ec2c
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:14
# 6c4779f198ba41c49180d79b185fa3b0
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:16
# ac36a7469996476c9527770c82cfb597
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:22
# c18b8b4244af4b9da95c3f2290de50f9
msgid "This document describes a data model that describes a tree like structure that optimizes discovering subtrees at the expense of tree mutability."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:27
# 4215c5e88e844a4fb38f853e8a153f5e
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:31
# a2057a82eeba407c9c27147552424418
msgid "The *Nested Sets* pattern identifies each node in the tree as stops in a round-trip traversal of the tree. The application visits each node in the tree twice; first during the initial trip, and second during the return trip. The *Nested Sets* pattern stores each tree node in a document; in addition to the tree node, document stores the id of node's parent, the node's initial stop in the ``left`` field, and its return stop in the ``right`` field."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:39
# 45bcf624dcdd4e838ad8f5ad175a280a
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:43
# 86df43fd89a44e11a55d72372c28f3aa
msgid "The following example models the tree using *Nested Sets*:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:54
# 1c6d34fb1fe9472e803b89676810b1f9
msgid "You can query to retrieve the descendants of a node:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-nested-sets.txt:61
# 04c236a2ff7a4d9cb0637c2bbc5f311f
msgid "The *Nested Sets* pattern provides a fast and efficient solution for finding subtrees but is inefficient for modifying the tree structure. As such, this pattern is best for static trees that do not change."
msgstr ""

