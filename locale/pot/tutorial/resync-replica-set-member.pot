# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/resync-replica-set-member.txt:3
# b09c05ac7d4046209ff4ba0e8393bbf4
msgid "Resync a Member of a Replica Set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:7
# a461e13ea4674d5391cee9d8fd348dd7
msgid "A :term:`replica set` member becomes \"stale\" when its replication process falls so far behind that the :term:`primary` overwrites oplog entries the member has not yet replicated. The member cannot catch up and becomes \"stale.\" When this occurs, you must completely resynchronize the member by removing its data and performing an :ref:`initial sync <replica-set-initial-sync>`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:14
# eaf69e25a8734157bad66b375a297d0e
msgid "This tutorial addressed both resyncing a stale member and to creating a new member using seed data from another member. When syncing a member, choose a time when the system has the bandwidth to move a large amount of data. Schedule the synchronization during a time of low usage or during a maintenance window."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:20
# 3af920691fcb4e268e2bbf65c7c53861
msgid "MongoDB provides two options for performing an initial sync:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:22
# c4359bca6caa4a688cf148547e4478f7
msgid "Restart the :program:`mongod` with an empty data directory and let MongoDB's normal initial syncing feature restore the data. This is the more simple option but may take longer to replace the data."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:26
# dba2a51d03f04382836b4b2e3c6af126
msgid "See :ref:`replica-set-auto-resync-stale-member`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:28
# 6e536f4a580041b9a18114c5fdc96142
msgid "Restart the machine with a copy of a recent data directory from another member in the replica set. This procedure can replace the data more quickly but requires more manual steps."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:32
# 888ac6f3dd144638817fe61823053f80
msgid "See :ref:`replica-set-resync-by-copying`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:39
# 43d05da0a3c74f3280b1d3a8023e71dc
msgid "Procedures"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:42
# 4f3511f16756401d920bbecec2befa99
msgid "Automatically Sync a Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:44
# 3633e53820f44f6284504f0ce8890cee
msgid "During initial sync, :program:`mongod` will remove the content of the :setting:`~storage.dbPath`."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:47
# ac580186fa6e4f6492f230bd44d54b91
msgid "This procedure relies on MongoDB's regular process for :ref:`initial sync <replica-set-initial-sync>`. This will store the current data on the member. For an overview of MongoDB initial sync process, see the :ref:`replica-set-syncing` section."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:52
# 1199379480854f28bf7688006538701a
msgid "If the instance has no data, you can simply follow the :doc:`/tutorial/expand-replica-set` or :doc:`/tutorial/replace-replica-set-member` procedure to add a new member to a replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:57
# 66fb736ee87148bfa6c4e8d2ec91eaf8
msgid "You can also force a :program:`mongod` that is already a member of the set to to perform an initial sync by restarting the instance without the content of the :setting:`~storage.dbPath` as follows:"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:61
# e1681489caa846e391bc45ba2a3bdcfe
msgid "Stop the member's :program:`mongod` instance. To ensure a clean shutdown, use the :method:`db.shutdownServer()` method from the :program:`mongo` shell or on Linux systems, the :option:`mongod --shutdown` option."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:66
# 17db76cf97994fe4b566061bdd0a854a
msgid "Delete all data and sub-directories from the member's data directory. By removing the data :setting:`~storage.dbPath`, MongoDB will perform a complete resync. Consider making a backup first."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:70
# 0ab47c7810554012acd2bd73aa50895c
msgid "At this point, the :program:`mongod` will perform an initial sync. The length of the initial sync process depends on the size of the database and network connection between members of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:75
# e9ad26f795574e4294f5b67c4069952c
msgid "Initial sync operations can impact the other members of the set and create additional traffic to the primary and can only occur if another member of the set is accessible and up to date."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:83
# 1c7e62c6b5a84b579aa79aaf13a12b2b
msgid "Sync by Copying Data Files from Another Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:85
# 70247563f9224a55b6b1912bed776680
msgid "This approach \"seeds\" a new or stale member using the data files from an existing member of the replica set. The data files **must** be sufficiently recent to allow the new member to catch up with the :term:`oplog`. Otherwise the member would need to perform an initial sync."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:92
# 4d60cda87745498f9490aa4fa820454c
msgid "Copy the Data Files"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:94
# 195ff5e6571f48b796b6bfc411415a65
msgid "You can capture the data files as either a snapshot or a direct copy. However, in most cases you cannot copy data files from a running :program:`mongod` instance to another because the data files will change during the file copy operation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:99
# 4aeb4e038b6c4473b5a07c5dd657f270
msgid "If copying data files, you must copy the content of the ``local`` database."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:102
# 872ccd491c834718b02d497fb44475ef
msgid "You *cannot* use a :program:`mongodump` backup for the data files, **only a snapshot backup**. For approaches to capturing a consistent snapshot of a running :program:`mongod` instance, see the :doc:`/core/backups` documentation."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:108
# 62af98fda4714aa0a4163fe02cfa5364
msgid "Sync the Member"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:110
# c1d8e45a3c1c47b68f93a9f9e9450bd1
msgid "After you have copied the data files from the \"seed\" source, start the :program:`mongod` instance and allow it to apply all operations from the oplog until it reflects the current state of the replica set."
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# 1cbd46cb601e46da99c01d68ce1e0145
# 6eb0148ca29e48e5a7b6b67d843aa338
# f07d90a57f8f463e9dc20337ea97b765
msgid "replica set"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:34
# 1cbd46cb601e46da99c01d68ce1e0145
msgid "sync"
msgstr ""

#: ../source/tutorial/resync-replica-set-member.txt:35
#: ../source/tutorial/resync-replica-set-member.txt:79
# 6eb0148ca29e48e5a7b6b67d843aa338
# f07d90a57f8f463e9dc20337ea97b765
msgid "resync"
msgstr ""

