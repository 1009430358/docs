# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/change-oplog-size.txt:3
# 202c69eb4a874eb29e8873a38316e225
msgid "Change the Size of the Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:0
# 29ef3bf6905d4c2b99d152688ed8b7a5
msgid "On this page"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:13
# 4474dc60104340a08ddcf440d745dcc5
msgid "The :term:`oplog` exists internally as a :term:`capped collection`, so you cannot modify its size in the course of normal operations. In most cases the :ref:`default oplog size <replica-set-oplog-sizing>` is an acceptable size; however, in some situations you may need a larger or smaller oplog. For example, you might need to change the oplog size if your applications perform large numbers of multi-updates or deletes in short periods of time."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:21
# 77f83282308b48a09a67986464d9315b
msgid "This tutorial describes how to resize the oplog. For a detailed explanation of oplog sizing, see :ref:`replica-set-oplog-sizing`.  For details how oplog size affects :term:`delayed members <delayed member>` and affects :term:`replication lag`, see :ref:`replica-set-delayed-members`."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:28
# e591a1960bca473bb4233685e67ba941
msgid "Overview"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:30
# 5a8f2a3d82c24995b13a2b631a576dba
msgid "To change the size of the oplog, you must perform maintenance on each member of the replica set in turn. The procedure requires: stopping the :program:`mongod` instance and starting as a standalone instance, modifying the oplog size, and restarting the member."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:35
# d64dd0d91554428192502f3cf7f3ac9d
msgid "Always start rolling replica set maintenance with the secondaries, and finish with the maintenance on primary member."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:39
# 43068d5efe62456498a9736b777aed59
msgid "Procedure"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:41
# 9f42f1cb555f47cba8074b57f5208226
msgid "Restart the member in standalone mode."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:0
# 3043e6360ff746aca4e44e478253d328
msgid "Tip"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:47
# c2c395b32b144dc78fee3ecc0ef00feb
msgid "Recreate the oplog with the new size and with an old oplog entry as a seed."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:50
# 9a85ee04762f4a1c9938f8b80c2aea36
msgid "Restart the :program:`mongod` instance as a member of the replica set."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:54
# f1c78d8cbe7640eda4675b6b0ee3671b
msgid "Restart a Secondary in Standalone Mode on a Different Port"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:56
# 5a3423e722474135a4f35d34ab244706
msgid "Shut down the :program:`mongod` instance for one of the non-primary members of your replica set. For example, to shut down, use the :method:`db.shutdownServer()` method:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:64
# a128aa143d54451dafd224c6fe21aa7c
msgid "Restart this :program:`mongod` as a standalone instance running on a different port and *without* the :option:`--replSet <mongod --replSet>` parameter. Use a command similar to the following:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:74
# 37c1263326dc45dea2b76f3ad7c0997c
msgid "Create a Backup of the Oplog (Optional)"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:76
# 660ae940f5f949cfb7f38962935880c0
msgid "Optionally, backup the existing oplog on the standalone instance, as in the following example:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:85
# 0ee1902cec754075a03c541c6e132cc0
msgid "Recreate the Oplog with a New Size and a Seed Entry"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:87
# f4e25467d5de4a928d51ef3cd98ff0f2
msgid "Save the last entry from the oplog. For example, connect to the instance using the :program:`mongo` shell, and enter the following command to switch to the ``local`` database:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:95
# db52d4b6a6e94fb4af0aabc2b5071f0a
msgid "In :program:`mongo` shell scripts you can use the following operation to set the ``db`` object:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:102
# 4295867ae0814d1e8acb5b70b783994e
msgid "Ensure that the ``temp`` temporary collection is empty by dropping the collection:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:109
# 102e2757d7f04e97a177cb54c3fd4f98
msgid "Use the :method:`db.collection.save()` method and a sort on reverse :term:`natural order` to find the last entry and save it to a temporary collection:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:119
# 5dd856c9b4d14ec8a68e13bccabbd958
msgid "To see this oplog entry, use the following operation:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:126
# 060fb5853b0146b89c50bd143b693a5e
msgid "Remove the Existing Oplog Collection"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:128
# 9086d56f30ca4ae2b2df4fa78b43c71d
msgid "Drop the old ``oplog.rs`` collection in the ``local`` database. Use the following command:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:136
# f74fbffe326b451ab7201ce471cca20d
msgid "This returns ``true`` in the shell."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:139
# 898b38565b4c4405be08d976e167e813
msgid "Create a New Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:141
# b3800feb59d743fea18285741149f2b1
msgid "Use the :dbcommand:`create` command to create a new oplog of a different size. Specify the ``size`` argument in bytes. A value of ``2 * 1024 * 1024 * 1024`` will create a new oplog that's 2 gigabytes:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:149
# aafd97fb2a58450dae05fa120138bfef
msgid "Upon success, this command returns the following status:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:156
# 977330befac044f8a10097e35c468168
msgid "Insert the Last Entry of the Old Oplog into the New Oplog"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:158
# a4fbe4c6203b467c8df16d47c502d4ae
msgid "Insert the previously saved last entry from the old oplog into the new oplog. For example:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:165
# 1975c8a40ec84cf28543ed477e168a81
msgid "To confirm the entry is in the new oplog, use the following operation:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:172
# 14502347d5624d128f9f98e50a7a5e24
msgid "Restart the Member"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:174
# 7788bb0a577d428993d7f3d5adc2d25a
msgid "Restart the :program:`mongod` as a member of the replica set on its usual port. For example:"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:182
# ddacf7f08dce483b9cd97e634d18cd52
msgid "The replica set member will recover and \"catch up\" before it is eligible for election to primary."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:186
# fda993eebe7d4d61a931f79483996038
msgid "Repeat Process for all Members that may become Primary"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:188
# 51dfc2b0c29442eabfb9e0e3eb2da219
msgid "Repeat this procedure for all members you want to change the size of the oplog. Repeat the procedure for the primary as part of the following step."
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:193
# 0c7bcb4bcfe5409cae6faa5f9c979cc5
msgid "Change the Size of the Oplog on the Primary"
msgstr ""

#: ../source/tutorial/change-oplog-size.txt:195
# ad1e398aca104b8b8a8e3b3a038e6162
msgid "To finish the rolling maintenance operation, step down the primary with the :method:`rs.stepDown()` method and repeat the oplog resizing procedure above."
msgstr ""

