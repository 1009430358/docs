# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/tutorial/model-tree-structures-with-child-references.txt:3
# ea499108315f44f2b4b7cd5deb457c8e
msgid "Model Tree Structures with Child References"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:0
# 7dfba3a8db3c4d788e1fe0297884a183
msgid "On this page"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:14
# 1be81c746d3a43a0bcd4c3a3c47300d1
msgid "Overview"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:16
# e239adbcc1824d64ac8f27f18bb02725
msgid "Data in MongoDB has a *flexible schema*. :term:`Collections <collection>` do not enforce :term:`document` structure. Decisions that affect how you model data can affect application performance and database capacity. See :doc:`/core/data-models` for a full high level overview of data modeling in MongoDB."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:22
# 0848e38e1d3f4a0ea7fbd7e4b7a93ff7
msgid "This document describes a data model that describes a tree-like structure in MongoDB documents by storing :ref:`references <data-modeling-referencing>` in the parent-nodes to children nodes."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:27
# 550f480d5c3b40a1b4d8807b5e7b3113
msgid "Pattern"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:31
# 96c77f507f744eeca516fc833efb74aa
msgid "The *Child References* pattern stores each tree node in a document; in addition to the tree node, document stores in an array the id(s) of the node's children."
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:35
# 6187403db30941b58c5ec5a84dc439dd
msgid "Consider the following hierarchy of categories:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:39
# 0af9dabb445f45b2be4ed5d4506fb504
msgid "The following example models the tree using *Child References*, storing the reference to the node's children in the field ``children``:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:51
# ec7adef709944db3bb87ed0e13057d54
msgid "The query to retrieve the immediate children of a node is fast and straightforward:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:58
# 4e6add7dc2ca427dbd35a07d83d1051d
msgid "You can create an index on the field ``children`` to enable fast search by the child nodes:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:65
# 1f8a0eb782e84f55a03ab117d3edda79
msgid "You can query for a node in the ``children`` field to find its parent node as well as its siblings:"
msgstr ""

#: ../source/tutorial/model-tree-structures-with-child-references.txt:72
# 7f2caa969375465aae7f7eea60351683
msgid "The *Child References* pattern provides a suitable solution to tree storage as long as no operations on subtrees are necessary. This pattern may also provide a suitable solution for storing graphs where a node may have multiple parents."
msgstr ""

