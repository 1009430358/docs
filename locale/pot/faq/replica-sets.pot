# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/replica-sets.txt:3
# 36622c3aec6f47098d6657404db7bdeb
msgid "FAQ: Replication and Replica Sets"
msgstr ""

#: ../source/faq/replica-sets.txt:0
# 16f577d1649d43d4ba0c561567f3fe1d
msgid "On this page"
msgstr ""

#: ../source/faq/replica-sets.txt:13
# 2d5dcdb86b044bcea96ce412333536ed
msgid "This document answers common questions about database replication in MongoDB."
msgstr ""

#: ../source/faq/replica-sets.txt:16
# e73ae80465384d9592419892239448d6
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/replica-sets.txt:21
# 7ead69ddafcf4844a1d307d3dc203f5a
msgid "What kinds of replication does MongoDB support?"
msgstr ""

#: ../source/faq/replica-sets.txt:23
# c7216abc349c419389afdfd828c4feab
msgid "MongoDB supports :doc:`replica sets </core/replication-introduction>`."
msgstr ""

#: ../source/faq/replica-sets.txt:27
# 7f7f4efe47ab444da548c1fbd515395a
msgid "In MongoDB 3.0.0, replica sets can have up to :ref:`50 nodes <3.0-replica-sets-max-members>`. Previous versions limited the maximum number of replica set members to 12."
msgstr ""

#: ../source/faq/replica-sets.txt:31
# 0fd962fe477d480fb2a600ef5f2518c0
msgid "MongoDB also supports master-slave replication; however, replica sets are the recommended replication topology. However, if your deployment requires more than 50 nodes, you must use master/slave replication."
msgstr ""

#: ../source/faq/replica-sets.txt:36
# 70e8f153817b4e99a5940d887ad565f0
msgid "What does the term \"primary\" mean?"
msgstr ""

#: ../source/faq/replica-sets.txt:38
# 8794a6c663c749198beaea955fa49560
msgid ":term:`Primary` is a :doc:`replica set </core/replication-introduction>` member that can accept writes. Only the primary can accept write operations. [#edge-cases-2-primaries]_"
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
# 089951bea249458a99620e047ef6ecdc
msgid "In :ref:`some circumstances <edge-cases>`, two nodes in a replica set may *transiently* believe that they are the primary, but at most, one of them will be able to complete writes with :writeconcern:`{ w: \"majority\" } <\"majority\">` write concern. The node that can complete :writeconcern:`{ w: \"majority\" } <\"majority\">` writes is the current primary, and the other node is a former primary that has not yet recognized its demotion, typically due to a :term:`network partition`. When this occurs, clients that connect to the former primary may observe stale data despite having requested read preference :readmode:`primary`, and new writes to the former primary will eventually roll back."
msgstr ""

#: ../source/faq/replica-sets.txt:47
# 1dc92b17185e42f2ad5bc176d0093de6
msgid "What does the term \"secondary\" mean?"
msgstr ""

#: ../source/faq/replica-sets.txt:49
# 10fdc735e3614904831cbb8c1ff73332
msgid ":term:`Secondary` nodes are the read-only nodes in :doc:`replica sets </core/replication-introduction>`."
msgstr ""

#: ../source/faq/replica-sets.txt:53
# 426f9976d7dc4cddaabc6773b98ad555
msgid "How long does replica set failover take?"
msgstr ""

#: ../source/faq/replica-sets.txt:55
# 2634559450e54ca0b1df713345d923fb
msgid "It varies, but a replica set will generally select a new primary within a minute."
msgstr ""

#: ../source/faq/replica-sets.txt:58
# 4e1aa2251b444a05b9a88028a466d977
msgid "For instance, it may take 10-30 seconds for the members of a :term:`replica set` to declare a :term:`primary` inaccessible (see :rsconf:`~settings.electionTimeoutMillis`). One of the remaining secondaries holds an :term:`election` to elect itself as a new primary. During the election, the cluster is unavailable for writes."
msgstr ""

#: ../source/faq/replica-sets.txt:64
# 640d30839ba04779bd7c1fd996f3bf22
msgid "The election itself may take another 10-30 seconds."
msgstr ""

#: ../source/faq/replica-sets.txt:68
# 9ec46d2c773947f382c7b0813006021e
msgid "Starting in MongoDB 3.2, with the :ref:`replication election enhancements <3.2-rel-notes-rs-enhancements>`, MongoDB reduces replica set failover time. See :ref:`replication election enhancements <3.2-rel-notes-rs-enhancements>` for details."
msgstr ""

#: ../source/faq/replica-sets.txt:74
# 3e6918f1bc264d2ea0b8d602e568ed19
msgid "Does replication work over the Internet and WAN connections?"
msgstr ""

#: ../source/faq/replica-sets.txt:76
#: ../source/faq/replica-sets.txt:217
# 36729b777fd74b80952cbc5667acfd17
# 7e36412b1c70441fa3a0de39fcff7073
msgid "Yes."
msgstr ""

#: ../source/faq/replica-sets.txt:78
# b28c1ffb73494fd59ea997a6625a467e
msgid "For example, a deployment may maintain a :term:`primary` and :term:`secondary` in an East-coast data center along with a :term:`secondary` member for disaster recovery in a West-coast data center."
msgstr ""

#: ../source/faq/replica-sets.txt:82
# a04f10f57a08443c92cfd4bd1c01cbf2
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`"
msgstr ""

#: ../source/faq/replica-sets.txt:85
# 92cd5c052e8747b6ac378ddcac5987a7
msgid "Can MongoDB replicate over a \"noisy\" connection?"
msgstr ""

#: ../source/faq/replica-sets.txt:87
# f54bd83da9d241abbfe13e19ef381aa1
msgid "Yes, but not without connection failures and the obvious latency."
msgstr ""

#: ../source/faq/replica-sets.txt:89
# 09ffd7c8a3b249eda3012c88fdc4c1aa
msgid "Members of the set will attempt to reconnect to the other members of the set in response to networking flaps. This does not require administrator intervention. However, if the network connections among the nodes in the replica set are very slow, it might not be possible for the members of the node to keep up with the replication."
msgstr ""

#: ../source/faq/replica-sets.txt:95
# f77d9c519c1c4004b70c50526e83b370
msgid "If the TCP connection between the secondaries and the :term:`primary` instance breaks, a :term:`replica set` will automatically elect one of the :term:`secondary` members of the set as primary."
msgstr ""

#: ../source/faq/replica-sets.txt:100
# 3675bc63b17544f68d831c4178ba3af9
msgid "Why use journaling if replication already provides data redundancy?"
msgstr ""

#: ../source/faq/replica-sets.txt:102
# 9d768cdecc66476495e6f10f87054dee
msgid ":term:`Journaling <journal>` facilitates faster crash recovery. Prior to journaling, crashes often required :dbcommand:`database repairs <repairDatabase>` or full data resync. Both were slow, and the first was unreliable."
msgstr ""

#: ../source/faq/replica-sets.txt:106
# 37cd487cc8114b23ae8d97fe7fb2f3af
msgid "Journaling is particularly useful for protection against power failures, especially if your replica set resides in a single data center or power circuit."
msgstr ""

#: ../source/faq/replica-sets.txt:110
# 7685619978d0435081cd69a5ea277764
msgid "When a :term:`replica set` runs with journaling, :program:`mongod` instances can safely restart without any administrator intervention."
msgstr ""

#: ../source/faq/replica-sets.txt:115
# dba6a1d10be3480fa0eba262a3797fd0
msgid "Journaling requires some resource overhead for write operations. Journaling has no effect on read performance, however."
msgstr ""

#: ../source/faq/replica-sets.txt:118
# ab031f3de84043168749b4464f09c326
msgid "Journaling is enabled by default on all 64-bit builds of MongoDB v2.0 and greater."
msgstr ""

#: ../source/faq/replica-sets.txt:122
# a7509463fad24ab99ba8011292973257
msgid "How many arbiters do replica sets need?"
msgstr ""

#: ../source/faq/replica-sets.txt:124
# faa7aa6bccf642dd8db0b08c6b68f1e6
msgid "Some configurations do not require any :term:`arbiter` instances. Arbiters vote in :term:`elections <election>` for :term:`primary` but do not replicate the data like :term:`secondary` members."
msgstr ""

#: ../source/faq/replica-sets.txt:129
# e13966b28834408dbeba5c37b0155846
msgid ":term:`Replica sets <replica set>` require a majority of the remaining nodes present to elect a primary. Arbiters allow you to construct this majority without the overhead of adding replicating nodes to the system."
msgstr ""

#: ../source/faq/replica-sets.txt:134
# 94e6c0802c4b409193a98bce2b26c900
msgid "There are many possible replica set :doc:`architectures </core/replica-set-architectures>`."
msgstr ""

#: ../source/faq/replica-sets.txt:137
# eb951da253d742ffaf9a8f991a6a1e85
msgid "A replica set with an odd number of voting nodes does not need an arbiter."
msgstr ""

#: ../source/faq/replica-sets.txt:139
# edfb142b5fc4471eb12fa1f7a1ed911e
msgid "A common configuration consists of two replicating nodes that include a :term:`primary` and a :term:`secondary`, as well as an :term:`arbiter` for the third node. This configuration makes it possible for the set to elect a primary in the event of failure, without requiring three replicating nodes."
msgstr ""

#: ../source/faq/replica-sets.txt:145
# 9a07f6bb197d4958964a5f0e6250e3a4
msgid "You may also consider adding an arbiter to a set if it has an equal number of nodes in two facilities and network partitions between the facilities are possible. In these cases, the arbiter will break the tie between the two facilities and allow the set to elect a new primary."
msgstr ""

#: ../source/faq/replica-sets.txt:151
# e06a4e83f5d449979e3ee9fd56d0a701
msgid ":doc:`/core/replica-set-architectures`"
msgstr ""

#: ../source/faq/replica-sets.txt:154
# 11c699ad5d354713887782db0e47cbf4
msgid "What information do arbiters exchange with the rest of the replica set?"
msgstr ""

#: ../source/faq/replica-sets.txt:156
# e56be948d5684d4d8b695b6a56b01444
msgid "Arbiters never receive the contents of a collection but do exchange the following data with the rest of the replica set:"
msgstr ""

#: ../source/faq/replica-sets.txt:159
# e62e46d0076b44f99fa54aaaea19c278
msgid "Credentials used to authenticate the arbiter with the replica set. All MongoDB processes within a replica set use keyfiles. These exchanges are encrypted."
msgstr ""

#: ../source/faq/replica-sets.txt:163
# b89780add61d44228df4dada36be82cf
msgid "Replica set configuration data and voting data. This information is not encrypted. Only credential exchanges are encrypted."
msgstr ""

#: ../source/faq/replica-sets.txt:166
# fa81e5d5909c4d64b5859e54bf4fed4d
msgid "If your MongoDB deployment uses TLS/SSL, then all communications between arbiters and the other members of the replica set are secure. See the documentation for :doc:`/tutorial/configure-ssl` for more information. Run all arbiters on secure networks, as with all MongoDB components."
msgstr ""

#: ../source/faq/replica-sets.txt:0
# a407d30b525647459bc6665a5bd2fca3
msgid "See"
msgstr ""

#: ../source/faq/replica-sets.txt:177
# c1221bbae5114ce89e3a09573464b113
msgid "Which members of a replica set vote in elections?"
msgstr ""

#: ../source/faq/replica-sets.txt:179
# 4848d99badd24467ac40ae37aed3b084
msgid "All members of a replica set, unless the value of :rsconf:`votes <members[n].votes>` is equal to ``0``, vote in elections. This includes all :ref:`delayed <replica-set-delayed-members>`, :ref:`hidden <replica-set-hidden-members>` and :ref:`secondary-only <replica-set-secondary-only-members>` members. :ref:`Arbiters <replica-set-arbiters>` always vote in elections and always have ``1`` vote."
msgstr ""

#: ../source/faq/replica-sets.txt:188
# 8bf9c3516b3a4cd4b735cc893256c060
msgid "Additionally, the :data:`~replSetGetStatus.members.state` of the voting members also determine whether the member can vote. Only voting members in the following states are eligible to vote:"
msgstr ""

#: ../source/faq/replica-sets.txt:192
# dec23cb1b92f4b529add0770847e9258
msgid "``PRIMARY``"
msgstr ""

#: ../source/faq/replica-sets.txt:194
# 67fb49d60a5045448d15006401f1ceaf
msgid "``SECONDARY``"
msgstr ""

#: ../source/faq/replica-sets.txt:196
# 25f5760bb6ef49e1960f6578330a7c3b
msgid "``RECOVERING``"
msgstr ""

#: ../source/faq/replica-sets.txt:198
# 4918532ab4bd47e192d67e8219de2587
msgid "``ARBITER``"
msgstr ""

#: ../source/faq/replica-sets.txt:200
# 9c8b2f5ac77b4e4fbed3533fcf69cf76
msgid "``ROLLBACK``"
msgstr ""

#: ../source/faq/replica-sets.txt:202
#: ../source/faq/replica-sets.txt:212
# a66b335672c04c89b9b5086d85a6dbc7
# d476189b1d8040ce8e1ee53c3081d8c0
msgid ":ref:`replica-set-elections`"
msgstr ""

#: ../source/faq/replica-sets.txt:205
# 1bd8b72c0a9a4baaa8d8577dbf90d107
msgid "Do hidden members vote in replica set elections?"
msgstr ""

#: ../source/faq/replica-sets.txt:207
# 99f89186f9ea4da2b38b917c154f96de
msgid ":ref:`Hidden members <replica-set-hidden-members>` of :term:`replica sets <replica set>` *do* vote in elections. To exclude a member from voting in an :term:`election`, change the value of the member's :rsconf:`members[n].votes` configuration to ``0``."
msgstr ""

#: ../source/faq/replica-sets.txt:215
# f2051100d4454382b60c9e8f850c9ba1
msgid "Is it normal for replica set members to use different amounts of disk space?"
msgstr ""

#: ../source/faq/replica-sets.txt:219
# c6b82ebf34634cc09e4fcd406ab82dc8
msgid "Factors including: different oplog sizes, different levels of storage fragmentation, and MongoDB's data file pre-allocation can lead to some variation in storage utilization between nodes. Storage use disparities will be most pronounced when you add members at different times."
msgstr ""

#: ../source/faq/replica-sets.txt:226
# d523452f664f460dbedb3430a573625c
msgid "Can I rename a replica set?"
msgstr ""

#: ../source/faq/replica-sets.txt:228
# 32445316d6e245769c357d3c4a2bb2c4
msgid "As of MongoDB 2.6 there are no tools or functions designed specifically to rename a replica set."
msgstr ""

#: ../source/faq/replica-sets.txt:231
# 0358cc3e23ed43c1b670250fd1326c3b
msgid "You can use the backup and restore procedure described in the :doc:`/tutorial/restore-replica-set-from-backup` tutorial to create a new replica set with the desired name. Downtime may be necessary in order to ensure parity between the original replica set and the new one."
msgstr ""

