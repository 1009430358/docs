# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/indexes.txt:3
# 0cead53407384acab9490a83b487c71a
msgid "FAQ: Indexes"
msgstr ""

#: ../source/faq/indexes.txt:7
# 276b629b180f45cf80043eaf9e9426c2
msgid "This document addresses common questions regarding MongoDB indexes."
msgstr ""

#: ../source/faq/indexes.txt:9
# 8db0b078fe92435cad4e6eddbf07008b
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_. See also :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:15
# 676ca89d0bfc4c188211eb63f75f8018
msgid "Should you run ``createIndex()`` after every insert?"
msgstr ""

#: ../source/faq/indexes.txt:17
# e8b970b4feb141ab9ff2413676ddb9c1
msgid "No. You only need to create an index once for a single collection. After initial creation, MongoDB automatically updates the index as data changes."
msgstr ""

#: ../source/faq/indexes.txt:21
# 197199f61c4b413d8921c2cc51f7bba8
msgid "While running :method:`~db.collection.createIndex()` is usually ok, if an index doesn't exist because of ongoing administrative work, a call to :method:`~db.collection.createIndex()` may disrupt database availability. Running :method:`~db.collection.createIndex()` can render a replica set inaccessible as the index creation is happening. See :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/faq/indexes.txt:29
# 8ddcd0356f6448d3bdff484c02ffce96
msgid "How do you know what indexes exist in a collection?"
msgstr ""

#: ../source/faq/indexes.txt:31
# cf800dd6dc2f48468fa68d4aafda1a5e
msgid "To list a collection's indexes, use the :method:`db.collection.getIndexes()` method or a similar :api:`method for your driver <>`."
msgstr ""

#: ../source/faq/indexes.txt:36
# 3e03bbdbde6643ebbef6635639a491cf
msgid "How do you determine the size of an index?"
msgstr ""

#: ../source/faq/indexes.txt:38
# f398beb037a44aa69e186cc03fbf3767
msgid "To check the sizes of the indexes on a collection, use :method:`db.collection.stats()`."
msgstr ""

#: ../source/faq/indexes.txt:43
# 8246f2ff698b4c9db2b29d894409075e
msgid "What happens if an index does not fit into RAM?"
msgstr ""

#: ../source/faq/indexes.txt:45
# 319db73b81424a65882446b99de93198
msgid "When an index is too large to fit into RAM, MongoDB must read the index from disk, which is a much slower operation than reading from RAM. Keep in mind an index fits into RAM when your server has RAM available for the index combined with the rest of the :term:`working set`."
msgstr ""

#: ../source/faq/indexes.txt:50
# a275f616fefc4f73b9f9dd07f41fdd3c
msgid "In certain cases, an index does not need to fit *entirely* into RAM. For details, see :ref:`indexing-right-handed`."
msgstr ""

#: ../source/faq/indexes.txt:56
# cb7657808832419c95417142ed2456bf
msgid "How do you know what index a query used?"
msgstr ""

#: ../source/faq/indexes.txt:58
# 7210116620584bcb8fc870a4586a11c9
msgid "To inspect how MongoDB processes a query, use the :method:`~cursor.explain()` method in the :program:`mongo` shell, or in your application driver."
msgstr ""

#: ../source/faq/indexes.txt:63
# 9d03edf9c7834aa0b77d87370e6ffe81
msgid "How do you determine what fields to index?"
msgstr ""

#: ../source/faq/indexes.txt:65
# 2436c550b692410fa59a2e884728159f
msgid "A number of factors determine what fields to index, including :ref:`selectivity <index-selectivity>`, fitting indexes into RAM, reusing indexes in multiple queries when possible, and creating indexes that can support all the fields in a given query. For detailed documentation on choosing which fields to index, see :doc:`/administration/indexes`."
msgstr ""

#: ../source/faq/indexes.txt:81
# f808871e12854e98a2670899d190de5c
msgid "How do write operations affect indexes?"
msgstr ""

#: ../source/faq/indexes.txt:83
# fa78ede179c24430828e3fef5ab276ad
msgid "Any write operation that alters an indexed field requires an update to the index in addition to the document itself. If you update a document that causes the document to grow beyond the allotted record size, then MongoDB must update all indexes that include this document as part of the update operation."
msgstr ""

#: ../source/faq/indexes.txt:89
# 7b76fc864f6245f782a6b273564b8389
msgid "Therefore, if your application is write-heavy, creating too many indexes might affect performance."
msgstr ""

#: ../source/faq/indexes.txt:93
# 0f4f19951978416eac731d3652b932a7
msgid "Will building a large index affect database performance?"
msgstr ""

#: ../source/faq/indexes.txt:95
# 97d1162b7e5d4d94bc326788f9a0cf3c
msgid "Building an index can be an IO-intensive operation, especially if you have a large collection. This is true on any database system that supports secondary indexes, including MySQL. If you need to build an index on a large collection, consider building the index in the background. See :ref:`index-creation-operations`."
msgstr ""

#: ../source/faq/indexes.txt:101
# d34cebe821b743bc851d025fe4d54b64
msgid "If you build a large index without the background option, and if doing so causes the database to stop responding, do one of the following:"
msgstr ""

#: ../source/faq/indexes.txt:105
# 8763cc5c8aab46f8a4f5220a241515e9
msgid "Wait for the index to finish building."
msgstr ""

#: ../source/faq/indexes.txt:107
# ffa94b2c74224f47aee04b392360bc19
msgid "Kill the current operation (see :method:`db.killOp()`). The partial index will be deleted."
msgstr ""

#: ../source/faq/indexes.txt:113
# 8de1fdcdb2ce4ff489a1ac088145a0a8
msgid "Can I use index keys to constrain query matches?"
msgstr ""

#: ../source/faq/indexes.txt:115
# e4240f96c9ea468998ffd349dc078f3d
msgid "You can use the :method:`~cursor.min()` and :method:`~cursor.max()` methods to constrain the results of the cursor returned from :method:`~db.collection.find()` by using index keys."
msgstr ""

#: ../source/faq/indexes.txt:120
# 4f42b5c0b68344d4a583c42a00618a1a
msgid "Using ``$ne`` and ``$nin`` in a query is slow. Why?"
msgstr ""

#: ../source/faq/indexes.txt:122
# 8d91e26f520142d58c81395c2be6c985
msgid "The :query:`$ne` and :query:`$nin` operators are not selective. See :ref:`index-selectivity`. If you need to use these, it is often best to make sure that an additional, more selective criterion is part of the query."
msgstr ""

#: ../source/faq/indexes.txt:128
# bdb067a500d54258a499c0d69d13945b
msgid "Can I use a multi-key index to support a query for a whole array?"
msgstr ""

#: ../source/faq/indexes.txt:130
# f1f4434c010746da94fb83765d9c248b
msgid "Not entirely. The index can partially support these queries because it can speed the selection of the first element of the array; however, comparing all subsequent items in the array cannot use the index and must scan the documents individually."
msgstr ""

#: ../source/faq/indexes.txt:136
# 89f79a5fd0964e87b83fba9a7e2aeaf7
msgid "How can I effectively use indexes strategy for attribute lookups?"
msgstr ""

#: ../source/faq/indexes.txt:138
# 4297236c9a5f401780ab37aa187349b5
msgid "For simple attribute lookups that don't require sorted result sets or range queries, consider creating a field that contains an array of documents where each document has a field (e.g. ``attrib`` ) that holds a specific type of attribute. You can index this ``attrib`` field."
msgstr ""

#: ../source/faq/indexes.txt:144
# 395773b88b11498999861ca18b7b0fd6
msgid "For example, the ``attrib`` field in the following document allows you to add an unlimited number of attributes types:"
msgstr ""

#: ../source/faq/indexes.txt:158
# 66646860ceff4652867720c2e4fbfba4
msgid "*Both* of the following queries could use the same ``{ \"attrib.k\": 1, \"attrib.v\": 1 }`` index:"
msgstr ""

