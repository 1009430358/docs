# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/fundamentals.txt:3
# 771e31aa818a492e9ed76db55a55173e
msgid "FAQ: MongoDB Fundamentals"
msgstr ""

#: ../source/faq/fundamentals.txt:7
# 033a94c78d5849b6a335f8e6e753e5e1
msgid "This document addresses basic high level questions about MongoDB and its use."
msgstr ""

#: ../source/faq/fundamentals.txt:10
# fd9b97f230404a23a10b0c3330c088ea
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/fundamentals.txt:15
# 4325002adf0f4bcc8a44210a146e7808
msgid "What kind of database is MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:17
# b2aafaf0380141ecab462f6228982637
msgid "MongoDB is a :term:`document`\\-oriented DBMS. Think of MySQL but with :term:`JSON`-like objects comprising the data model, rather than RDBMS tables. Significantly, MongoDB supports neither joins nor transactions. However, it features secondary indexes, an expressive query language, atomic writes on a per-document level, and fully-consistent reads."
msgstr ""

#: ../source/faq/fundamentals.txt:23
# 828a4e6f077f4f0799271c71e9456356
msgid "Operationally, MongoDB features master-slave replication with automated failover and built-in horizontal scaling via automated range-based partitioning."
msgstr ""

#: ../source/faq/fundamentals.txt:29
# 5a61189cd2ec4fe9b50f7bb1772314b3
msgid "MongoDB uses :term:`BSON`, a binary object format similar to, but more expressive than :term:`JSON`."
msgstr ""

#: ../source/faq/fundamentals.txt:33
# 9a877046d168494c89c7ed6e12d6ae37
msgid "Do MongoDB databases have tables?"
msgstr ""

#: ../source/faq/fundamentals.txt:35
# e5c47768339241f39199dcc05afa9c9a
msgid "Instead of tables, a MongoDB database stores its data in :term:`collections <collection>`, which are the rough equivalent of RDBMS tables. A collection holds one or more :term:`documents <document>`, which corresponds to a record or a row in a relational database table, and each document has one or more fields, which corresponds to a column in a relational database table."
msgstr ""

#: ../source/faq/fundamentals.txt:43
# 8e9a95acc1214198ad09602b91a7ca10
msgid "Collections have important differences from RDBMS tables. Documents in a single collection may have a unique combination and set of fields. Documents need not have identical fields. You can add a field to some documents in a collection without adding that field to all documents in the collection."
msgstr ""

#: ../source/faq/fundamentals.txt:0
#: ../source/faq/fundamentals.txt:0
# ed06651154d2468099d2a8fbacc29a3d
# 55f45840c19d4423939b26484ffd88a5
msgid "See"
msgstr ""

#: ../source/faq/fundamentals.txt:54
# e98409cc439b4cfbb84c3c711d18dc3f
msgid "Do MongoDB databases have schemas?"
msgstr ""

#: ../source/faq/fundamentals.txt:56
# 322bee40d6614215945a42cbb5e6b1c6
msgid "MongoDB uses dynamic schemas. You can create collections without defining the structure, i.e. the fields or the types of their values, of the documents in the collection. You can change the structure of documents simply by adding new fields or deleting existing ones. Documents in a collection need not have an identical set of fields."
msgstr ""

#: ../source/faq/fundamentals.txt:62
# a0afd945eb444b08bfbda4f738a78caf
msgid "In practice, it is common for the documents in a collection to have a largely homogeneous structure; however, this is not a requirement. MongoDB's flexible schemas mean that schema migration and augmentation are very easy in practice, and you will rarely, if ever, need to write scripts that perform \"alter table\" type operations, which simplifies and facilitates iterative software development with MongoDB."
msgstr ""

#: ../source/faq/fundamentals.txt:73
# 2a0a11d2049e4a4db4963a0a30fec732
msgid "What languages can I use to work with MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:75
# 158ed2021f064991bb5d82deb320868a
msgid "MongoDB :term:`client drivers <driver>` exist for all of the most popular programming languages, and many other ones. See the :ecosystem:`latest list of drivers </drivers>` for details."
msgstr ""

#: ../source/faq/fundamentals.txt:81
# 8deee3b1bd514afba05407dd6d3c4b4a
msgid ":doc:`/applications/drivers`."
msgstr ""

#: ../source/faq/fundamentals.txt:84
# cc2c33e29a18409fb70da09f3afb16ab
msgid "Does MongoDB support SQL?"
msgstr ""

#: ../source/faq/fundamentals.txt:86
# 33e487eb6ee1499eaac7f1bf3275cae0
msgid "No."
msgstr ""

#: ../source/faq/fundamentals.txt:88
# 2a75efefeb514318bdabb76c33e409b4
msgid "However, MongoDB does support a rich, ad-hoc query language of its own."
msgstr ""

#: ../source/faq/fundamentals.txt:91
# 51d8ecfb2b664731ad6d6de8367a2568
msgid ":doc:`/reference/operator`"
msgstr ""

#: ../source/faq/fundamentals.txt:94
# 12b7c260173d4977b699191f3eae01f3
msgid "What are typical uses for MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:96
# 6159b289edf74808a243dd057c0d0ba0
msgid "MongoDB has a general-purpose design, making it appropriate for a large number of use cases. Examples include content management systems, mobile applications, gaming, e-commerce, analytics, archiving, and logging."
msgstr ""

#: ../source/faq/fundamentals.txt:101
# c3460aa36cdb49388e45077445a113dc
msgid "Do not use MongoDB for systems that require SQL, joins, and multi-object transactions."
msgstr ""

#: ../source/faq/fundamentals.txt:105
# ebf2f2e2c0ca451b81a7c041029f919a
msgid "Does MongoDB support transactions?"
msgstr ""

#: ../source/faq/fundamentals.txt:107
# 84c572c28dc44026830af498ef3ef126
msgid "MongoDB does not support multi-document transactions. However, MongoDB does provide atomic operations on a single document."
msgstr ""

#: ../source/faq/fundamentals.txt:110
# 24578d2994ae40688eb84c99d5c2be14
msgid "For more details on MongoDB's isolation guarantees and behavior under concurrency, see :doc:`/faq/concurrency`."
msgstr ""

#: ../source/faq/fundamentals.txt:114
# 534781a1b9514de8b49e4ee74c9ffa31
msgid "Does MongoDB require a lot of RAM?"
msgstr ""

#: ../source/faq/fundamentals.txt:116
# 384d3982e02f47199c3bf33c4dd0849f
msgid "Not necessarily. It's certainly possible to run MongoDB on a machine with a small amount of free RAM."
msgstr ""

#: ../source/faq/fundamentals.txt:119
# 8c3407d122e147d29b787125b2b3c070
msgid "MongoDB automatically uses all free memory on the machine as its cache. System resource monitors show that MongoDB uses a lot of memory, but its usage is dynamic. If another process suddenly needs half the server's RAM, MongoDB will yield cached memory to the other process."
msgstr ""

#: ../source/faq/fundamentals.txt:124
# 54695d57ea194180989d8e349372f02a
msgid "Technically, the operating system's virtual memory subsystem manages MongoDB's memory. This means that MongoDB will use as much free memory as it can, swapping to disk as needed. Deployments with enough memory to fit the application's working data set in RAM will achieve the best performance."
msgstr ""

#: ../source/faq/fundamentals.txt:130
# 65bb1a1b45304b0999f2866e26a2e744
msgid ":doc:`/faq/diagnostics` for answers to additional questions about MongoDB and Memory use."
msgstr ""

#: ../source/faq/fundamentals.txt:134
# 11f80843c837452c974b734e62e1eeda
msgid "How do I configure the cache size for MMAPv1?"
msgstr ""

#: ../source/faq/fundamentals.txt:136
# 70911cbe9abf48f5ac6c08398af6e82c
msgid "MongoDB has no configurable cache for MMAPv1 storage engine. MongoDB uses all *free* memory on the system automatically by way of memory-mapped files. Operating systems use the same approach with their file system caches."
msgstr ""

#: ../source/faq/fundamentals.txt:141
# 9fa92dbd14ed40aab19caf3e5c184822
msgid "For the WiredTiger storage engine, you can specify the maximum size of the cache that WiredTiger will use for all data. See :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` and :option:`--wiredTigerCacheSizeGB`."
msgstr ""

#: ../source/faq/fundamentals.txt:149
# 2bd0a7594a72471aade271c07717facb
msgid "Does MongoDB require a separate caching layer for application-level caching?"
msgstr ""

#: ../source/faq/fundamentals.txt:151
# d11517cf3c2a49129962dda3468d311d
msgid "No. In MongoDB, a document's representation in the database is similar to its representation in application memory. This means the database already stores the usable form of data, making the data usable in both the persistent store and in the application cache. This eliminates the need for a separate caching layer in the application."
msgstr ""

#: ../source/faq/fundamentals.txt:157
# c852a6c22ec54a30b92f3b2c2f5054d0
msgid "This differs from relational databases, where caching data is more expensive. Relational databases must transform data into object representations that applications can read and must store the transformed data in a separate cache: if these transformation from data to application objects require joins, this process increases the overhead related to using the database which increases the importance of the caching layer."
msgstr ""

#: ../source/faq/fundamentals.txt:166
# 0b76519e9dd647ae82bb078792414cf4
msgid "Does MongoDB handle caching?"
msgstr ""

#: ../source/faq/fundamentals.txt:168
# c4362101ee1b43bf9e1a5a2cb839e031
msgid "Yes. MongoDB keeps all of the most recently used data in RAM. If you have created indexes for your queries and your working data set fits in RAM, MongoDB serves all queries from memory."
msgstr ""

#: ../source/faq/fundamentals.txt:172
# 1932a5edf6814e56b18bba4f83519bd4
msgid "MongoDB does not implement a query cache: MongoDB serves all queries directly from the indexes and/or data files."
msgstr ""

#: ../source/faq/fundamentals.txt:176
# 1eef70e753394b8fb47726d283c07126
msgid "Are writes written to disk immediately, or lazily?"
msgstr ""

#: ../source/faq/fundamentals.txt:178
# 0baf0dfe188e4d5aabd76b3f26070220
msgid "Writes are physically written to the :doc:`journal </core/journaling>` within 100 milliseconds, by default. At that point, the write is \"durable\" in the sense that after a pull-plug-from-wall event, the data will still be recoverable after a hard restart. See :setting:`~storage.journal.commitIntervalMs` for more information on the journal commit window."
msgstr ""

#: ../source/faq/fundamentals.txt:184
# 6be796ed5db24f8b881efcc507bbd60f
msgid "While the journal commit is nearly instant, MongoDB writes to the data files lazily. MongoDB may wait to write data to the data files for as much as one minute by default. This does not affect durability, as the journal has enough information to ensure crash recovery. To change the interval for writing to the data files, see :setting:`~storage.syncPeriodSecs`."
msgstr ""

#: ../source/faq/fundamentals.txt:191
# 2dcece3481f446668342f79e3ba8ee5a
msgid "What language is MongoDB written in?"
msgstr ""

#: ../source/faq/fundamentals.txt:193
# 99f85368606843229b5cd289eace9e7a
msgid "MongoDB is implemented in C++. :term:`Drivers <driver>` and client libraries are typically written in their respective languages, although some drivers use C extensions for better performance."
msgstr ""

#: ../source/faq/fundamentals.txt:200
# cf9dae0e35114f4abdecdb46e82cb58c
msgid "What are the limitations of 32-bit versions of MongoDB?"
msgstr ""

#: ../source/faq/fundamentals.txt:204
# 8993215740b74590886244eafc3e8650
msgid "Commercial support is no longer provided for MongoDB on 32-bit platforms (Linux and Windows). See :ref:`3.0-compatibility-platform-support`."
msgstr ""

#: ../source/faq/fundamentals.txt:208
# c3a555b07fa2420c842525957d6740f3
msgid "32-bit versions of MongoDB do **not** support the WiredTiger storage engine."
msgstr ""

#: ../source/faq/fundamentals.txt:211
# 60546711d84a4499b663dc5f26ba822a
msgid "When running a 32-bit build of MongoDB, the total storage size for the server, including data and indexes, is 2 gigabytes. For this reason, do not deploy MongoDB to production on 32-bit machines."
msgstr ""

#: ../source/faq/fundamentals.txt:215
# 62ec77af64d140f1b40eeae1c7ce701d
msgid "If you're running a 64-bit build of MongoDB, there's virtually no limit to storage size. For production deployments, 64-bit builds and operating systems are strongly recommended."
msgstr ""

#: ../source/faq/fundamentals.txt:219
# 3164f86d02ca4fe28d574dde7cd77b86
msgid "\"`Blog Post: 32-bit Limitations <http://blog.mongodb.org/post/137788967/32-bit-limitations>`_\""
msgstr ""

#: ../source/faq/fundamentals.txt:223
# 4197156d352c42cc984e755becbeb7b3
msgid "32-bit builds disable :term:`journaling <journal>` by default because journaling further limits the maximum amount of data that the database can store."
msgstr ""

