# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/fundamentals.txt:3
# 8bfeea5dba784dbc9b62e9cfdcd791b7
msgid "FAQ: MongoDB Fundamentals"
msgstr ""

#: ../source/faq/fundamentals.txt:0
# 12a5a4c859064bc2b04f028b8c3e3f37
msgid "On this page"
msgstr ""

#: ../source/faq/fundamentals.txt:13
# 5bf2729a3db04d68a384840cdb1ad607
msgid "This document answers some common questions about MongoDB."
msgstr ""

#: ../source/faq/fundamentals.txt:16
# e4f984552e0e4a5b80c17fcbbcbedcb3
msgid "What platforms does MongoDB support?"
msgstr ""

#: ../source/faq/fundamentals.txt:18
# 060b94d4538b482a985b8f8d335cca8b
msgid "For the list of supported platforms, see :ref:`prod-notes-supported-platforms`."
msgstr ""

#: ../source/faq/fundamentals.txt:22
# 34e95bc3e6664cbe86d6548be9b230c4
msgid "How does a collection differ from a table?"
msgstr ""

#: ../source/faq/fundamentals.txt:24
# e4661f33372e4525b3fef50eca8dbf40
msgid "Instead of tables, a MongoDB database stores its data in :term:`collections <collection>`. A collection holds one or more :ref:`BSON documents <bson-document-format>`. Documents are analogous to records or rows in a relational database table. Each document has :ref:`one or more fields <document-structure>`; fields are similar to the columns in a relational database table."
msgstr ""

#: ../source/faq/fundamentals.txt:31
# a24fc80f38734bad880aa42ee24e0a2f
msgid ":doc:`/reference/sql-comparison`, :doc:`/introduction`"
msgstr ""

#: ../source/faq/fundamentals.txt:34
# 0c96a71bc59e4d6b87ec4d809729cfb1
msgid "How do I create a database and a collection?"
msgstr ""

#: ../source/faq/fundamentals.txt:36
# 484be0f7515245cb8a38472498d195a5
msgid "If a database does not exist, MongoDB creates the database when you first store data for that database."
msgstr ""

#: ../source/faq/fundamentals.txt:39
# f968d06a4077457780754300b8f077f0
msgid "If a collection does not exist, MongoDB creates the collection when you first store data for that collection. [#explicit-creation]_"
msgstr ""

#: ../source/faq/fundamentals.txt:42
# cdf36241e2334614bd35fabc399385b3
msgid "As such, you can switch to a non-existent database (``use <dbname>``) and perform the following operation:"
msgstr ""

#: ../source/faq/fundamentals.txt:52
# e20bfe138d1d4d07aa31413f4115a262
msgid "The ``insert`` operation creates both the database ``myNewDB`` and the collection ``myNewCollection1`` if they do not already exist."
msgstr ""

#: ../source/faq/fundamentals.txt:55
# 2a0b0402790349e4a16f7faa4e138898
msgid "The ``createIndex`` operation, which occurs after the ``myNewDB`` has been created, creates the index and the collection ``myNewCollection2`` if the collection does not exist. If ``myNewDb`` did not exist, the ``createIndex`` operation would have also created the ``myNewDB``."
msgstr ""

#: ../source/faq/fundamentals.txt:62
# 5435ed3891a24758a385b4061fc85487
msgid "You can also create a collection explicitly using :method:`db.createCollection` if you want to specify specific options, such as maximum size or document validation rules."
msgstr ""

#: ../source/faq/fundamentals.txt:69
# 9ba0ea8cf4b24216a8d88b29da188969
msgid "How do I define or alter the collection schema?"
msgstr ""

#: ../source/faq/fundamentals.txt:71
# f0ff716843d54467a396508c69373809
msgid "You do not need to specify a schema for a collection in MongoDB. Although it is common for the documents in a collection to have a largely homogeneous structure, it is not a requirement; i.e. documents in a single collection do not need to have the same set of fields. The data type for a field can differ across documents in a collection as well."
msgstr ""

#: ../source/faq/fundamentals.txt:78
# 94e05b58243c4512a0d509b20b05064c
msgid "To change the structure of the documents in a collection, update the documents to the new structure. For instance, add new fields, remove existing ones, or update the value of a field to a new type."
msgstr ""

#: ../source/faq/fundamentals.txt:84
# b34d409d5d4c47e287337810e19d46af
msgid "Starting in MongoDB 3.2, however, you can enforce :doc:`document validation rules </core/document-validation>` for a collection during update and insert operations."
msgstr ""

#: ../source/faq/fundamentals.txt:88
# 3b0d2f911db64f4f9a06d4e4287b4e50
msgid "Some collection properties, such as specifying a maximum size, can be specified during the explicit creation of a collection and be modified. See :method:`db.createCollection` and :dbcommand:`collMod`. If you are not specifying these properties, you do not need to explicitly create the collection since MongoDB creates new collections when you first store data for the collections."
msgstr ""

#: ../source/faq/fundamentals.txt:96
# a63a245b83dc406ea1491085790bdf82
msgid "Does MongoDB support SQL?"
msgstr ""

#: ../source/faq/fundamentals.txt:98
# 7d274ae68aa3478a97f9f6bf303076be
msgid "No. However, MongoDB does support a rich query language of its own. For examples on using MongoDB's query language, see :doc:`/crud`"
msgstr ""

#: ../source/faq/fundamentals.txt:102
# 899a731554574d9d8aac178221ef8554
msgid ":doc:`/reference/sql-comparison`"
msgstr ""

#: ../source/faq/fundamentals.txt:105
# 8c6e56633e344b6faf0e5e4e3e34d75d
msgid "Does MongoDB support transactions?"
msgstr ""

#: ../source/faq/fundamentals.txt:107
# ffff5179f6c5484aa046f578992e2fc5
msgid "MongoDB does not support multi-document transactions. However, MongoDB does provide atomic operations on a single document."
msgstr ""

#: ../source/faq/fundamentals.txt:110
# 2f7d962390a24bd2ba478321b4c7ab0d
msgid "For more details on MongoDB's isolation guarantees and behavior under concurrency, see :doc:`/faq/concurrency`."
msgstr ""

#: ../source/faq/fundamentals.txt:116
# 079427f3e8934f29a503241426b25016
msgid "Does MongoDB handle caching?"
msgstr ""

#: ../source/faq/fundamentals.txt:118
# 1eba4adda0fd4cc3a77b93f3b6fc8d84
msgid "Yes. MongoDB keeps most recently used data in RAM. If you have created indexes for your queries and your working data set fits in RAM, MongoDB serves all queries from memory."
msgstr ""

#: ../source/faq/fundamentals.txt:122
# cb62ed6fcde44156a033ec1bbeea895f
msgid "MongoDB does not cache the query results in order to return the cached results for identical queries."
msgstr ""

#: ../source/faq/fundamentals.txt:125
# cf16b21df38448eb82759e648757b955
msgid "For more information on MongoDB and memory use, see :ref:`WiredTiger and Memory Use <wiredtiger-RAM>` and :ref:`MMAPv1 and Memory Use <mmapv1-RAM>`."
msgstr ""

#: ../source/faq/fundamentals.txt:132
# 10787e13e5db419fba6e21372a842cb7
msgid "How does MongoDB address SQL or Query injection?"
msgstr ""

#: ../source/faq/fundamentals.txt:135
# 28e417dfc4ae4a398e4965e405bdf64c
msgid "BSON"
msgstr ""

#: ../source/faq/fundamentals.txt:137
# 50b13f6896724414b55ed5f6d2cc0f90
msgid "As a client program assembles a query in MongoDB, it builds a BSON object, not a string. Thus traditional SQL injection attacks are not a problem. More details and some nuances are covered below."
msgstr ""

#: ../source/faq/fundamentals.txt:141
# 9d222af98386473887d653fc321898d0
msgid "MongoDB represents queries as :term:`BSON` objects. Typically :doc:`client libraries </applications/drivers>` provide a convenient, injection free, process to build these objects. Consider the following C++ example:"
msgstr ""

#: ../source/faq/fundamentals.txt:151
# 694b6751a227421b8ec1bf4794d91041
msgid "Here, ``my_query`` then will have a value such as ``{ name : \"Joe\" }``. If ``my_query`` contained special characters, for example ``,``, ``:``, and ``{``, the query simply wouldn't match any documents. For example, users cannot hijack a query and convert it to a delete."
msgstr ""

#: ../source/faq/fundamentals.txt:158
# 3b71683cecbf479593d4956fc16ba13f
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-disable-javascript-with-noscript.rst:1
# 769d0f85d9e54827b53fbd19152d3de2
msgid "You can disable all server-side execution of JavaScript, by passing the :option:`--noscripting <mongod --noscripting>` option on the command line or setting :setting:`security.javascriptEnabled` in a configuration file."
msgstr ""

#: ../source/faq/fundamentals.txt:164
# 33a67203f6d84ec78759f47a7c001dc2
msgid "All of the following MongoDB operations permit you to run arbitrary JavaScript expressions directly on the server:"
msgstr ""

#: ../source/faq/fundamentals.txt:167
# 68fbd8fb96e2421899d93e608741e0f7
msgid ":query:`$where`"
msgstr ""

#: ../source/faq/fundamentals.txt:168
# 7bdab0ee2ae243bc80e349ad975e835a
msgid ":dbcommand:`mapReduce`"
msgstr ""

#: ../source/faq/fundamentals.txt:169
# 5ba51596409c430d99291554bd9f3ead
msgid ":dbcommand:`group`"
msgstr ""

#: ../source/faq/fundamentals.txt:171
# 991418d9d5164cae94d5489e5189f5f6
msgid "You must exercise care in these cases to prevent users from submitting malicious JavaScript."
msgstr ""

#: ../source/faq/fundamentals.txt:174
# 735ffc33432a4a15b2702fbb71273e1b
msgid "Fortunately, you can express most queries in MongoDB without JavaScript and for queries that require JavaScript, you can mix JavaScript and non-JavaScript in a single query. Place all the user-supplied fields directly in a :term:`BSON` field and pass JavaScript code to the :query:`$where` field."
msgstr ""

#: ../source/faq/fundamentals.txt:180
# 96527c46ca97473d8ff98a9c0c1c486f
msgid "If you need to pass user-supplied values in a :query:`$where` clause, you may escape these values with the ``CodeWScope`` mechanism. When you set user-submitted values as variables in the scope document, you can avoid evaluating them on the database server."
msgstr ""

