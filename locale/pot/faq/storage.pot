# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/storage.txt:3
# ccf00151adf04dc4bc05f6ab509ef47e
msgid "FAQ: MongoDB Storage"
msgstr ""

#: ../source/faq/storage.txt:7
# a81c469608dc48c896eee7a6a05a6a0e
msgid "This document addresses common questions regarding MongoDB's storage system."
msgstr ""

#: ../source/faq/storage.txt:10
# 6ed89308a6104c168bfe1709bdd7791f
msgid "If you don't find the answer you're looking for, check the :doc:`complete list of FAQs </faq>` or post your question to the `MongoDB User Mailing List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""

#: ../source/faq/storage.txt:15
# 7da399c8646143279600f05d553b5361
msgid "Storage Engine Fundamentals"
msgstr ""

#: ../source/faq/storage.txt:18
# b0d2bae3fd2f482aa57922f77e1aebff
msgid "What is a storage engine?"
msgstr ""

#: ../source/faq/storage.txt:20
# 390ee179b7d2414db63ebaa8a9c0564a
msgid "A storage engine is the part of a database that is responsible for managing how data is stored on disk. Many databases support multiple storage engines, where different engines perform better for specific workloads. For example, one storage engine might offer better performance for read-heavy workloads, and another might support a higher-throughput for write operations."
msgstr ""

#: ../source/faq/storage.txt:28
# 0c8acf9e243a4e94b9f19bcc37a4adb4
msgid "What will be the default storage engine going forward?"
msgstr ""

#: ../source/faq/storage.txt:30
# 5a0329ddb9804fa98ac8ef6f9d3fc050
msgid "MMAPv1 is the default storage engine in 3.0. With multiple storage engines, you can decide which storage engine is best for your application."
msgstr ""

#: ../source/faq/storage.txt:35
# cf8b329b63fa41f7923ddba0e12d8c97
msgid "Can you mix storage engines in a replica set?"
msgstr ""

#: ../source/faq/storage.txt:37
# a4367d3e643646849a840c2214631dc0
msgid "Yes. You can have a replica set members that use different storage engines."
msgstr ""

#: ../source/faq/storage.txt:40
# 8284767dec5f4eb78fe107901a2ef6a4
msgid "When designing these multi-storage engine deployments consider the following:"
msgstr ""

#: ../source/faq/storage.txt:43
# b1d62cf2174840efbc978ef024385c7e
msgid "the oplog on each member may need to be sized differently to account for differences in throughput between different storage engines."
msgstr ""

#: ../source/faq/storage.txt:46
# 4b1f8390886e40ef8e8dbb978c795fb8
msgid "recovery from backups may become more complex if your backup captures data files from MongoDB: you may need to maintain backups for each storage engine."
msgstr ""

#: ../source/faq/storage.txt:51
# c4dbe1512d94414396ade4c966b44110
msgid "WiredTiger Storage Engine"
msgstr ""

#: ../source/faq/storage.txt:54
# 76c0d1a9a48349b4b5d21050603a7255
msgid "Can I upgrade an existing deployment to a WiredTiger?"
msgstr ""

#: ../source/faq/storage.txt:56
# 65d45259d105478fab92ff4d024ecc17
msgid "Yes. You can upgrade an existing deployment to WiredTiger while the deployment remains available by adding replica set members with the new storage engine and then removing members with the legacy storage engine. See the following sections of the :doc:`/release-notes/3.0-upgrade` for the complete procedure that you can use to upgrade an existing deployment:"
msgstr ""

#: ../source/faq/storage.txt:63
# 1ad939bf14b348d8a9e44a2e348ebbb8
msgid ":ref:`3.0-upgrade-repl-set-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:65
# fff9f21f7b8b4840803b398527770fde
msgid ":ref:`3.0-upgrade-cluster-wiredtiger`"
msgstr ""

#: ../source/faq/storage.txt:68
# c9a4aa4947df4d3bb3a7542aedd0b230
msgid "How much compression does WiredTiger provide?"
msgstr ""

#: ../source/faq/storage.txt:70
# 11e10ad5af8b4fc6a8613f5f0cebeb9a
msgid "The ratio of compressed data to uncompressed data depends on your data and the compression library used. By default, collection data in WiredTiger use :term:`Snappy block compression <snappy>`; :term:`zlib` compression is also available. Index data use :term:`prefix compression` by default."
msgstr ""

#: ../source/faq/storage.txt:79
# b6279664e79643f9a7da67d33dc379b6
msgid "To what size should I set the WiredTiger cache?"
msgstr ""

#: ../source/faq/storage.txt:81
# 27c44c9bdcb144248078f83fe635d0ac
msgid "The size of the cache should be sufficient to hold the entire working set for the :program:`mongod`. If the cache does not have enough space to load additional data, WiredTiger evicts pages from the cache to free up space."
msgstr ""

#: ../source/faq/storage.txt:86
# 6a100f7def914fe3847ae04690ebdae4
msgid "To see statistics on the cache and eviction, use the :dbcommand:`serverStatus` command. The :data:`~serverStatus.wiredTiger.cache` field holds the information on the cache and eviction:"
msgstr ""

#: ../source/faq/storage.txt:131
# df53e49603ff47cf8415b81fa8b173c2
msgid "To adjust the size of the WiredTiger cache, see :setting:`storage.wiredTiger.engineConfig.cacheSizeGB` and :option:`--wiredTigerCacheSizeGB`."
msgstr ""

#: ../source/faq/storage.txt:136
# 98e9e20f5c8d4a048d7e881d62a9e2cb
msgid "MMAPv1 Storage Engine"
msgstr ""

#: ../source/faq/storage.txt:141
# 1db8d8ee16db4439b9c1360ab402ee42
msgid "What are memory mapped files?"
msgstr ""

#: ../source/faq/storage.txt:143
# 18883837056647b29f793b4b301ee4e7
msgid "A memory-mapped file is a file with data that the operating system places in memory by way of the ``mmap()`` system call. ``mmap()`` thus *maps* the file to a region of virtual memory. Memory-mapped files are the critical piece of the MMAPv1 storage engine in MongoDB. By using memory mapped files, MongoDB can treat the contents of its data files as if they were in memory. This provides MongoDB with an extremely fast and simple method for accessing and manipulating data."
msgstr ""

#: ../source/faq/storage.txt:152
# 9e6a7dd5d238499d9e4f2c4021fa263a
msgid "How do memory mapped files work?"
msgstr ""

#: ../source/faq/storage.txt:154
# 3e9fc9ee717b45099ab17aeaa41939b7
msgid "MongoDB uses memory mapped files for managing and interacting with all data."
msgstr ""

#: ../source/faq/storage.txt:157
# 95d04892d25f4c2d94f7f253ac04c32e
msgid "Memory mapping assigns files to a block of virtual memory with a direct byte-for-byte correlation. MongoDB memory maps data files to memory as it accesses documents. Unaccessed data is *not* mapped to memory."
msgstr ""

#: ../source/faq/storage.txt:161
# ecec4d41eaae4407a9646d18301c0d39
msgid "Once mapped, the relationship between file and memory allows MongoDB to interact with the data in the file as if it were memory."
msgstr ""

#: ../source/faq/storage.txt:167
# e6e90d3aae2348018a0bd7be17b59db2
msgid "Why are the files in my data directory larger than the data in my database?"
msgstr ""

#: ../source/faq/storage.txt:169
# daaf63293c2f49ba8b92a1875fdd90c6
msgid "The data files in your data directory, which is the :file:`/data/db` directory in default configurations, might be larger than the data set inserted into the database. Consider the following possible causes:"
msgstr ""

#: ../source/faq/storage.txt:174
# daf9968a1a9c489cbe0b4705ec276aaf
msgid "Preallocated data files"
msgstr ""

#: ../source/faq/storage.txt:176
# 0e8979d0cb7d4cbf92af421da9c7bde8
msgid "MongoDB preallocates its data files to avoid filesystem fragmentation, and because of this, the size of these files do not necessarily reflect the size of your data."
msgstr ""

#: ../source/faq/storage.txt:180
# a0eee2c1f7034a26b4e4df36bdfbdde5
msgid "The :setting:`storage.mmapv1.smallFiles` option will reduce the size of these files, which may be useful if you have many small databases on disk."
msgstr ""

#: ../source/faq/storage.txt:185
# afe593faa70a4ac7b7165623f9d9e54f
msgid "The ``oplog``"
msgstr ""

#: ../source/faq/storage.txt:187
# 1358ce795dea46f5af867af895ffba0f
msgid "If this :program:`mongod` is a member of a replica set, the data directory includes the :term:`oplog.rs <oplog>` file, which is a preallocated :term:`capped collection` in the ``local`` database."
msgstr ""

#: ../source/faq/storage.txt:192
# f8930135cc8f49d3b3e8b8bc3d05b61f
msgid "The default allocation is approximately 5% of disk space on 64-bit installations. In most cases, you should not need to resize the oplog. See :ref:`Oplog Sizing <replica-set-oplog-sizing>` for more information."
msgstr ""

#: ../source/faq/storage.txt:197
# 0f552ed9ce2d4c46bf458f1c9c858c0f
msgid "The ``journal``"
msgstr ""

#: ../source/faq/storage.txt:199
# 5424d35584be423abd306a2bab5c660c
msgid "The data directory contains the journal files, which store write operations on disk before MongoDB applies them to databases. See :doc:`/core/journaling`."
msgstr ""

#: ../source/faq/storage.txt:206
# 7888daa5181b46b783c26b84fe8d006f
msgid "Empty records"
msgstr ""

#: ../source/faq/storage.txt:208
# ed91649360c64ca9a93fa0c5d6ca8209
msgid "MongoDB maintains lists of empty records in data files as it deletes documents and collections. MongoDB can reuse this space, but will not, by default, return this space to the operating system."
msgstr ""

#: ../source/faq/storage.txt:212
# 0fc2a85a57ae4c0aa8f084dff37f5e9d
msgid "To allow MongoDB to more effectively reuse the space, you can de-fragment your data. To de-fragment, use the :dbcommand:`compact` command. The :dbcommand:`compact` requires up to 2 gigabytes of extra disk space to run. Do not use :dbcommand:`compact` if you are critically low on disk space. For more information on its behavior and other considerations, see :dbcommand:`compact`."
msgstr ""

#: ../source/faq/storage.txt:219
# eeaee187d6694814abb47e751c55579d
msgid ":dbcommand:`compact` only removes fragmentation from MongoDB data files within a collection and does not return any disk space to the operating system. To return disk space to the operating system, see :ref:`faq-reclaim-disk-space`."
msgstr ""

#: ../source/faq/storage.txt:227
# 8b6945fa23114dea9d7ce9d0889bc1a7
msgid "How do I reclaim disk space?"
msgstr ""

#: ../source/faq/storage.txt:229
# c33c08bc4c4a4f7789d89887e2921f3a
msgid "The following provides some options to consider when reclaiming disk space."
msgstr ""

#: ../source/faq/storage.txt:234
# 93bbda87c2d54d128beef4b5b975d69e
msgid "You do not need to reclaim disk space for MongoDB to reuse freed space. See :ref:`faq-empty-records` for information on reuse of freed space."
msgstr ""

#: ../source/faq/storage.txt:239
# 3c1390e652664daab82e652eba122e4e
msgid "``repairDatabase``"
msgstr ""

#: ../source/faq/storage.txt:241
# 5d0db6860f884b658b470e43566b290b
msgid "You can use :dbcommand:`repairDatabase` on a database to rebuilds the database, de-fragmenting the associated storage in the process."
msgstr ""

#: ../source/faq/storage.txt:244
# cdc339ed8823408c96c1745a6b84b9a0
msgid ":dbcommand:`repairDatabase` requires free disk space equal to the size of your current data set plus 2 gigabytes. If the volume that holds dbpath lacks sufficient space, you can mount a separate volume and use that for the repair. For additional information and considerations, see :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/faq/storage.txt:252
# 1d043bb2166c4bcfa23d4431b0140ad0
msgid "Do not use :dbcommand:`repairDatabase` if you are critically low on disk space."
msgstr ""

#: ../source/faq/storage.txt:255
# 2330ab04089640bda1e7ea1493cbd9da
msgid ":dbcommand:`repairDatabase` will block all other operations and may take a long time to complete."
msgstr ""

#: ../source/faq/storage.txt:258
# 8f6f869e75c84e6b90547f0034668fc5
msgid "You can only run :dbcommand:`repairDatabase` on a standalone :program:`mongod` instance. If the :program:`mongod` instance is a member of a replica set, you will need to take the node out of a replica set and restart it as a standalone in order to run :dbcommand:`repairDatabase`."
msgstr ""

#: ../source/faq/storage.txt:264
# 81b9b4e9336a4013b4d12f5905c81ffb
msgid "You can also run the :dbcommand:`repairDatabase` operation for all databases on the server by restarting your :program:`mongod` standalone instance with the :option:`--repair` and :option:`--repairpath` options. All databases will on the server will be unavailable during this operation."
msgstr ""

#: ../source/faq/storage.txt:270
# 7d58afeb22df443d8b50c2677857e353
msgid "Resync the Member of the Replica Set"
msgstr ""

#: ../source/faq/storage.txt:272
# 83f38c55933f49168143b6dae3450b2a
msgid "For a secondary member of a replica set, you can perform a :doc:`resync of the member </tutorial/resync-replica-set-member>` by: stopping the secondary member to resync, deleting all data and subdirectories from the member's data directory, and restarting."
msgstr ""

#: ../source/faq/storage.txt:277
# a484c55810314acaa5f50777a4cfe11f
msgid "For details, see :doc:`/tutorial/resync-replica-set-member`."
msgstr ""

#: ../source/faq/storage.txt:282
# 4a902f909001467dac0e4caf86c017ae
msgid "What is the working set?"
msgstr ""

#: ../source/faq/storage.txt:284
# 4c3a4744185a4e88828b3756fdd58127
msgid "Working set represents the total body of data that the application uses in the course of normal operation. Often this is a subset of the total data size, but the specific size of the working set depends on actual moment-to-moment use of the database."
msgstr ""

#: ../source/faq/storage.txt:289
# ff1f53c78e154f8e9536a85569ad3348
msgid "If you run a query that requires MongoDB to scan every document in a collection, the working set will expand to include every document. Depending on physical memory size, this may cause documents in the working set to \"page out,\" or to be removed from physical memory by the operating system. The next time MongoDB needs to access these documents, MongoDB may incur a hard page fault."
msgstr ""

#: ../source/faq/storage.txt:296
# 47f03b93e9ed4845a381cef652a47a8b
msgid "For best performance, the majority of your *active* set should fit in RAM."
msgstr ""

#: ../source/faq/storage.txt:302
# 1cbe02557e554fd88297a62d1e8ffea0
msgid "What are page faults?"
msgstr ""

#: ../source/includes/fact-page-fault.rst:1
# ec0bf5ddb3334df28a8b8a15689eaa2a
msgid "With the MMAPv1 storage engine, page faults can occur as MongoDB reads from or writes data to parts of its data files that are not currently located in physical memory. In contrast, operating system page faults happen when physical memory is exhausted and pages of physical memory are swapped to disk."
msgstr ""

#: ../source/faq/storage.txt:306
# b28ba21134f7478b8b21fc4177b55ddd
msgid "If there is free memory, then the operating system can find the page on disk and load it to memory directly. However, if there is no free memory, the operating system must:"
msgstr ""

#: ../source/faq/storage.txt:310
# 8a30a6508a03428ba1159a4499465a65
msgid "find a page in memory that is stale or no longer needed, and write the page to disk."
msgstr ""

#: ../source/faq/storage.txt:313
# e0a6ca951555445c80bd67391db15730
msgid "read the requested page from disk and load it into memory."
msgstr ""

#: ../source/faq/storage.txt:315
# 8ee43e7e6d404806ba6964d78c586e1e
msgid "This process, on an active system, can take a long time, particularly in comparison to reading a page that is already in memory."
msgstr ""

#: ../source/faq/storage.txt:319
#: ../source/faq/storage.txt:331
# 8794855c9caf498e96a497764775d257
# 18526b1ed08d4a00a7b10004ad1f5fa7
msgid "See :ref:`administration-monitoring-page-faults` for more information."
msgstr ""

#: ../source/faq/storage.txt:322
# bf0d095e237d48d9b504f3a2594a8910
msgid "What is the difference between soft and hard page faults?"
msgstr ""

#: ../source/faq/storage.txt:324
# 4d6bc28362ec4e328cd8a7c480918801
msgid ":term:`Page faults <page fault>` occur when MongoDB, with the MMAP storage engine, needs access to data that isn't currently in active memory. A \"hard\" page fault refers to situations when MongoDB must access a disk to access the data. A \"soft\" page fault, by contrast, merely moves memory pages from one list to another, such as from an operating system file cache."
msgstr ""

#: ../source/faq/storage.txt:334
# 6d5846f2c3da48bd8bc2d71e16a6de5d
msgid "Data Storage Diagnostics"
msgstr ""

#: ../source/faq/storage.txt:337
# 603c03bb6ae84e74a3e1d4ba5286be4e
msgid "How can I check the size of a collection?"
msgstr ""

#: ../source/faq/storage.txt:339
# 0d88b935e6684e628e7976955ab3d30c
msgid "To view the statistics for a collection, including the data size, use the :method:`db.collection.stats()` method from the :program:`mongo` shell. The following example issues :method:`db.collection.stats()` for the ``orders`` collection:"
msgstr ""

#: ../source/faq/storage.txt:348
# 9cf1b4ff7f2446338eca2f24f47a1797
msgid "MongoDB also provides the following methods to return specific sizes for the collection:"
msgstr ""

#: ../source/faq/storage.txt:351
# 63430f90e4a846699749ac1e3ac74b57
msgid ":method:`db.collection.dataSize()` to return data size in bytes for the collection."
msgstr ""

#: ../source/faq/storage.txt:354
# 4761f3a9f9f04528a8c9fc0fadddafd2
msgid ":method:`db.collection.storageSize()` to return allocation size in bytes, including unused space."
msgstr ""

#: ../source/faq/storage.txt:357
# 368e66e1e55945d0b0adc514d082e37a
msgid ":method:`db.collection.totalSize()` to return the data size plus the index size in bytes."
msgstr ""

#: ../source/faq/storage.txt:360
# f951ff9f89f642878219a4ac75646e87
msgid ":method:`db.collection.totalIndexSize()` to return the index size in bytes."
msgstr ""

#: ../source/faq/storage.txt:363
# 2ecc4f9a092249da9a96f2d9f001866a
msgid "The following script prints the statistics for each database:"
msgstr ""

#: ../source/faq/storage.txt:372
# 985a5cb4e274415db417fb9f5ff443d2
msgid "The following script prints the statistics for each collection in each database:"
msgstr ""

#: ../source/faq/storage.txt:386
# a994c92bf6b54468ac96ad1adcc7b749
msgid "How can I check the size of indexes for a collection?"
msgstr ""

#: ../source/faq/storage.txt:388
# be0bfbe1b5c7423282e67e8169868eec
msgid "To view the size of the data allocated for an index, use the :method:`db.collection.stats()` method and check the :data:`~collStats.indexSizes` field in the returned document."
msgstr ""

#: ../source/faq/storage.txt:395
# dd5357bab54f4934aaec2122e14feeff
msgid "How can I get information on the storage use of a database?"
msgstr ""

#: ../source/faq/storage.txt:397
# 48fbc282d80247229c06b35ec4347a83
msgid "The :method:`db.stats()` method in the :program:`mongo` shell returns the current state of the \"active\" database. For the description of the returned fields, see :ref:`dbStats Output <dbstats-output>`."
msgstr ""

