# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-high-availability.txt:5
# 36ef32a0cd484959b5f4da4a64a37e5b
msgid "Sharded Cluster High Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:9
# 843b4060a2024292a7a06a43b9a5e276
msgid "A :ref:`production <sharding-production-architecture>` :term:`cluster` has no single point of failure. This section introduces the availability concerns for MongoDB deployments in general and highlights potential failure scenarios and available resolutions."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:15
# df369dd9d5b2411586c3b7b330ce57dc
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:17
# cfc86458591d45e9a25cc4ac0bdcfabe
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:25
# b4664c3649484f219f97dab856537a22
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:27
# 45232f16553544ce9797c7fa30c9a3be
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:36
# 86f4dc2666be45a1b06ff8d3e026b844
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:41
# 3185e8acc7194e57a527902d83904928
msgid "All Members of a Replica Set Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:43
# 05065bc1a01d45b489811efff7b0f915
msgid "If all members of a replica set within a shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it's possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:51
# 1331edd951d94286933a15de7b2e895f
msgid "One or Two Config Servers Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:53
# b5d268ba58414fdeb92443551b1ae905
msgid "Three distinct :program:`mongod` instances provide the :doc:`config servers </core/sharded-cluster-config-servers>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:56
# d0e340b1902e491594f6443bca63336a
msgid "If one or two config servers become unavailable, the cluster's metadata becomes *read only*. You can still read and write data from the shards, but no :ref:`chunk migration <sharding-balancing>` or :doc:`chunk splits </tutorial/split-chunks-in-sharded-cluster>` will occur until all three servers are available. Replace the config server as soon as possible. If all config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:64
# 2e907b9938554c6da8d964ed62f832e5
msgid "If the config servers are inconsistent, the balancer will not perform any :ref:`chunk migration <sharding-balancing>` nor will the :program:`mongos` perform :doc:`auto-chunk splits </tutorial/split-chunks-in-sharded-cluster>`."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
# c1d51fea692b4008ab3de63d54f6025a
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:71
# b9e0ef2232da40558133f1872b0b04db
msgid "If an unavailable secondary becomes available while it still has current oplog entries, it can catch up to the latest state of the set using the normal :term:`replication process <sync>`, otherwise it must perform an :term:`initial sync`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:79
# a87d11cd082744c3a439529addff8d46
msgid "Renaming Config Servers and Cluster Availability"
msgstr ""

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
# 96d6185d255e45378c7bb05cf9e30c78
msgid "If the name or address that a sharded cluster uses to connect to a config server changes, you must restart **every** :program:`mongod` and :program:`mongos` instance in the sharded cluster. Avoid downtime by using CNAMEs to identify config servers within the MongoDB deployment."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:83
# 4601574f5d7c4cb1982917f7c5fc5f5f
msgid "To avoid downtime when renaming config servers, use DNS names unrelated to physical or virtual hostnames to refer to your :ref:`config servers <sharding-config-server>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:87
# ab2be77d8ea0414d8f2bb173370a1bb3
msgid "Generally, refer to each config server using the DNS alias (e.g. a CNAME record). When specifying the config server connection string to :program:`mongos`, use these names. These records make it possible to change the IP address or rename config servers without changing the connection string and without having to restart the entire cluster."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:94
# 91e75316ac1c4ca9b760ca89da84fe6e
msgid "Shard Keys and Cluster Availability"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:96
# 93755ec788964b5db8f977a5de81e666
msgid "The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:99
# fb2e3250b0ff4f2a94ca8bc406506c90
msgid "to ensure that MongoDB will be able to distribute data evenly among shards, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:102
# d978cc94c5a745b89bb23fd1674d5a86
msgid "to scale writes across the cluster, and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:104
# 5e4a33b25ee74e0b8594c6847f5b913e
msgid "to ensure that :program:`mongos` can isolate most queries to a specific :program:`mongod`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:107
# 0906c170857e4043a3919e96bd2b67e0
msgid "Furthermore:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:109
# 831bf6d5e784474da0480444df90f623
msgid "Each shard should be a :term:`replica set`, if a specific :program:`mongod` instance fails, the replica set members will elect another to be :term:`primary` and continue operation. However, if an entire shard is unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:115
# b611da465d2a41829fffeae109a96c5a
msgid "If the shard key allows the :program:`mongos` to isolate most operations to a single shard, then the failure of a single shard will only render *some* data unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:119
# bae4d624bbea4a529bf8120727ebabb0
msgid "If your shard key distributes data required for every operation throughout the cluster, then the failure of the entire shard will render the entire cluster unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:123
# ffcdf2f584ae4df1ac632ec264518c67
msgid "In essence, this concern for reliability simply underscores the importance of choosing a shard key that isolates query operations to a single shard."
msgstr ""

