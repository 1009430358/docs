# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-compound.txt:7
# 72933ed4187e4956b6a68e82e75720d6
msgid "Compound Indexes"
msgstr ""

#: ../source/core/index-compound.txt:11
# 5ebcdd28733c48adb33c01ad80c124e1
msgid "MongoDB supports *compound indexes*, where a single index structure holds references to multiple fields [#compound-index-field-limit]_ within a collection's documents. The following diagram illustrates an example of a compound index on two fields:"
msgstr ""

#: ../source/core/index-compound.txt:19
# 90103a72ddad4eb3945ac9e756a07c4d
msgid "MongoDB imposes a :limit:`limit of 31 fields for any compound index <Number of Indexed Fields in a Compound Index>`."
msgstr ""

#: ../source/core/index-compound.txt:22
# 72eb86f67c5f4141a1f6e23583eaf8bb
msgid "Compound indexes can support queries that match on multiple fields."
msgstr ""

#: ../source/core/index-compound.txt:0
# 541794df12dc4619bdeceb77c5f2cc35
msgid "Example"
msgstr ""

#: ../source/core/index-compound.txt:26
# a190a835e15b47c291ab787f34f350a5
msgid "Consider a collection named ``products`` that holds documents that resemble the following document:"
msgstr ""

#: ../source/core/index-compound.txt:42
# b991a485748b411b87552f328db3881f
msgid "If applications query on the ``item`` field as well as query on both the ``item`` field and the ``stock`` field, you can specify a single compound index to support both of these queries:"
msgstr ""

#: ../source/core/index-compound.txt:50
# b2210baa18344effa0ed976cb465c583
msgid "You may not create compound indexes that have ``hashed`` index fields. You will receive an error if you attempt to create a compound index that includes :doc:`a hashed index </core/index-hashed>`."
msgstr ""

#: ../source/core/index-compound.txt:55
# 6e734d12c842401eae6fe7997a87c2b7
msgid "The order of the fields in a compound index is very important. In the previous example, the index will contain references to documents sorted first by the values of the ``item`` field and, within each value of the ``item`` field, sorted by values of the ``stock`` field. See :ref:`index-ascending-and-descending` for more information."
msgstr ""

#: ../source/core/index-compound.txt:61
# fe590c136ee949458563f65ae6904a72
msgid "In addition to supporting queries that match on all the index fields, compound indexes can support queries that match on the prefix of the index fields. For details, see :ref:`compound-index-prefix`."
msgstr ""

#: ../source/core/index-compound.txt:69
# 0a75059d58b7400bb8ee7903f6c97cd0
msgid "Sort Order"
msgstr ""

#: ../source/core/index-compound.txt:71
# 385be17304d84a84be52e040023f2d1c
msgid "Indexes store references to fields in either ascending (``1``) or descending (``-1``) sort order. For single-field indexes, the sort order of keys doesn't matter because MongoDB can traverse the index in either direction. However, for :ref:`compound indexes <index-type-compound>`, sort order can matter in determining whether the index can support a sort operation."
msgstr ""

#: ../source/core/index-compound.txt:78
# 32e052599db74b22b3782517d05e4cae
msgid "Consider a collection ``events`` that contains documents with the fields ``username`` and ``date``. Applications can issue queries that return results sorted first by ascending ``username`` values and then by descending (i.e. more recent to last) ``date`` values, such as:"
msgstr ""

#: ../source/core/index-compound.txt:87
# 3ffb315865d84410899353c40968803f
msgid "or queries that return results sorted first by descending ``username`` values and then by ascending ``date`` values, such as:"
msgstr ""

#: ../source/core/index-compound.txt:94
# 1bd7d3bad22343ce9b0d5f39d29fc324
msgid "The following index can support both these sort operations:"
msgstr ""

#: ../source/core/index-compound.txt:100
# 9e3b210a013e45c786f8dfccb09e40a2
msgid "However, the above index **cannot** support sorting by ascending ``username`` values and then by ascending ``date`` values, such as the following:"
msgstr ""

#: ../source/core/index-compound.txt:108
# 21a7633480604af39f8dc42219d2d9a8
msgid "For more information on sort order and compound indexes, see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

#: ../source/core/index-compound.txt:114
# 3d7425c65c104deda68fb3aaf2518e23
msgid "Prefixes"
msgstr ""

#: ../source/core/index-compound.txt:116
# f9f34b27c5284db28343c0254f8785c5
msgid "Index prefixes are the *beginning* subsets of indexed fields. For example, consider the following compound index:"
msgstr ""

#: ../source/core/index-compound.txt:123
# 1db600ac9cc14c98b3cf0b377baf2c93
msgid "The index has the following index prefixes:"
msgstr ""

#: ../source/core/index-compound.txt:125
# ef012695a928406888e91049315f00e2
msgid "``{ item: 1 }``"
msgstr ""

#: ../source/core/index-compound.txt:127
# 8435fecbf91a48b1a3589de814be56e1
msgid "``{ item: 1, location: 1 }``"
msgstr ""

#: ../source/core/index-compound.txt:129
# 9f858cf753e442f7a5aeb413f5521529
msgid "For a compound index, MongoDB can use the index to support queries on the index prefixes. As such, MongoDB can use the index for queries on the following fields:"
msgstr ""

#: ../source/core/index-compound.txt:133
# bcdb6982a62f4efea1f24d9b8229f447
msgid "the ``item`` field,"
msgstr ""

#: ../source/core/index-compound.txt:134
# c0266012c7ee4045adbc7d6486af09b8
msgid "the ``item`` field *and* the ``location`` field,"
msgstr ""

#: ../source/core/index-compound.txt:135
# 26e9373a2cfb438b8b0828d423719cdd
msgid "the ``item`` field *and* the ``location`` field *and* the ``stock`` field."
msgstr ""

#: ../source/core/index-compound.txt:137
# 7807c61c729b44d280b162065f84fb77
msgid "MongoDB can also use the index to support a query on ``item`` and ``stock`` fields since ``item`` field corresponds to a prefix. However, the index would not be as efficient in supporting the query as would be an index on only ``item`` and ``stock``."
msgstr ""

#: ../source/core/index-compound.txt:142
# 7ca18f75f00341d296769ec5dec274d8
msgid "However, MongoDB cannot use the index to support queries that include the following fields since without the ``item`` field, none of the listed fields correspond to a prefix index:"
msgstr ""

#: ../source/core/index-compound.txt:146
# 0f3fd4599a1b4df8a2d315a2f299c96b
msgid "the ``location`` field,"
msgstr ""

#: ../source/core/index-compound.txt:148
# 7dabe454b1d24422841d163cbfaf148e
msgid "the ``stock`` field, or"
msgstr ""

#: ../source/core/index-compound.txt:150
# 3047dcb9b5c2405185e635200b9fe1ff
msgid "the ``location`` and ``stock`` fields."
msgstr ""

#: ../source/core/index-compound.txt:152
# 2664376333e74ae381ed660932bec821
msgid "If you have a collection that has both a compound index and an index on its prefix (e.g. ``{ a: 1, b: 1 }`` and ``{ a: 1 }``), if neither index has a sparse or unique constraint, then you can remove the index on the prefix (e.g. ``{ a: 1 }``). MongoDB will use the compound index in all of the situations that it would have used the prefix index."
msgstr ""

#: ../source/core/index-compound.txt:159
# d770723538044b8fbbe3361a69aca4ad
msgid "Index Intersection"
msgstr ""

#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
# 14a0463f087e40be889cd09c10a384e4
msgid "Starting in version 2.6, MongoDB can use :doc:`index intersection </core/index-intersection>` to fulfill queries. The choice between creating compound indexes that support your queries or relying on index intersection depends on the specifics of your system. See :ref:`index-intersection-compound-indexes` for more details."
msgstr ""

#: ../source/core/index-compound.txt:1
#: ../source/core/index-compound.txt:65
# efba2a24653d4596b234da5218bbcf3b
# b660649bde0f4482bdfab479eb1a296c
msgid "index"
msgstr ""

#: ../source/core/index-compound.txt:1
# efba2a24653d4596b234da5218bbcf3b
msgid "compound"
msgstr ""

#: ../source/core/index-compound.txt:2
# 7b26ade862d548bfa1397aa340507470
msgid "compound index"
msgstr ""

#: ../source/core/index-compound.txt:65
# b660649bde0f4482bdfab479eb1a296c
msgid "sort order"
msgstr ""

