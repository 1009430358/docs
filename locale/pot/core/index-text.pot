# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-text.txt:5
# fd426123b005440a890fd377170dc592
msgid "Text Indexes"
msgstr ""

#: ../source/core/index-text.txt:11
# 03cf1e0b2ab54c689aca4aa76762a425
msgid "MongoDB provides ``text`` indexes to support text search of string content in documents of a collection."
msgstr ""

#: ../source/core/index-text.txt:14
# 839249906db54533890692822e4d2329
msgid "``text`` indexes can include any field whose value is a string or an array of string elements. To perform queries that access the ``text`` index, use the :query:`$text` query operator."
msgstr ""

#: ../source/core/index-text.txt:20
# cfd8572e4dbd472b8b9d40597ea9b724
msgid "MongoDB enables the text search feature by default. In MongoDB 2.4, you need to enable the text search feature manually to create ``text`` indexes and perform :ref:`text search <index-text-text-search>`."
msgstr ""

#: ../source/core/index-text.txt:28
# 39e891d7c9d64b44b9ba926aa2779ef5
msgid "Create Text Index"
msgstr ""

#: ../source/core/index-text.txt:30
# ac8fea5b007a4e47b8a81879dacbf846
msgid "To create a ``text`` index, use the :method:`db.collection.createIndex()` method. To index a field that contains a string or an array of string elements, include the field and specify the string literal ``\"text\"`` in the index document, as in the following example:"
msgstr ""

#: ../source/includes/fact-text-index-limit-one.rst:1
# 2226f08025cd41b1913f5d0c191aa8f8
msgid "A collection can have at most **one** ``text`` index."
msgstr ""

#: ../source/core/index-text.txt:42
# ee40b1095fe94f6e89efe4cbf0971ef0
msgid "However, you can specify multiple fields for the ``text`` index. For examples of creating ``text`` indexes on multiple fields, see :doc:`/tutorial/create-text-index-on-multiple-fields` and :ref:`text-index-wildcard`."
msgstr ""

#: ../source/core/index-text.txt:50
# cbd55d618a5f4ed49e18be20f74a2d81
msgid "Wildcard Text Indexes"
msgstr ""

#: ../source/core/index-text.txt:52
# ce773d821b9840088594d87becd944e6
msgid "To allow for text search on all fields with string content, use the wildcard specifier (``$**``) to index all fields in the collection that contain string content. Such an index can be useful with highly unstructured data if it is unclear which fields to include in the text index or for ad-hoc querying."
msgstr ""

#: ../source/core/index-text.txt:58
# d4544d5e636c461cbd2d75a4616ed1c7
msgid "With a wildcard text index, MongoDB indexes every field that contains string data for each document in the collection. The following example creates a text index using the wildcard specifier:"
msgstr ""

#: ../source/core/index-text.txt:66
# 019c0443dfe2458ea52893f4a6a701c0
msgid "Wildcard text indexes are ``text`` indexes on multiple fields. As such, you can assign weights to specific fields during index creation to control the ranking of the results. For more information using weights to control the results of a text search, see :doc:`/tutorial/control-results-of-text-search`."
msgstr ""

#: ../source/core/index-text.txt:72
# ed26fb9523844999b145a29c008f1975
msgid "Wildcard text indexes, as with all text indexes, can be part of a compound indexes. For example, the following creates a compound index on the field ``a`` as well as the wildcard specifier:"
msgstr ""

#: ../source/core/index-text.txt:80
# 6faa42755d2549f3811a98a3d4f2f40c
msgid "As with all :ref:`compound text indexes <text-index-compound>`, since the ``a`` precedes the text index key, in order to perform a :query:`$text` search with this index, the query predicate must include an equality match conditions ``a``. For information on compound text indexes, see :ref:`Compound Text Indexes <text-index-compound>`."
msgstr ""

#: ../source/core/index-text.txt:87
# 11106b4e2bd3408981402e2f083495a1
msgid "Supported Languages and Stop Words"
msgstr ""

#: ../source/core/index-text.txt:89
# 435364c5ca00460f8faa25fc13e2c657
msgid "MongoDB supports text search for various languages. ``text`` indexes drop language-specific stop words (e.g. in English, \"the\", \"an\", \"a\", \"and\", etc.) and uses simple language-specific suffix stemming. For a list of the supported languages, see :ref:`text-search-languages`."
msgstr ""

#: ../source/includes/fact-text-search-language-none.rst:3
# 3a564e08d0d24da4b91b459ce3a9e9de
msgid "If you specify a language value of ``\"none\"``, then the |text-obj| uses simple tokenization with no list of stop words and no stemming."
msgstr ""

#: ../source/core/index-text.txt:98
# e439682c7c074867b989fc89fc32c151
msgid "For the Latin alphabet, ``text`` indexes are case insensitive for non-diacritics; i.e. case insensitive for ``[A-z]``. For all other characters, text indexes treat them as distinct."
msgstr ""

#: ../source/core/index-text.txt:102
# 5d3c305ab3844ba68e408714a0b3026f
msgid "To specify a language for the ``text`` index, see :doc:`/tutorial/specify-language-for-text-index`."
msgstr ""

#: ../source/core/index-text.txt:106
# 368980e49aac40ea913da195a8dd128b
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/index-text.txt:108
# 35797dc2881a4715bfc0236fc7e46afc
msgid "``text`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``text`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the ``text`` index. For inserts, MongoDB inserts the document but does not add to the ``text`` index."
msgstr ""

#: ../source/core/index-text.txt:115
# 7a4f22dfb04448209daefe251e06fbbe
msgid "For a compound index that includes a ``text`` index key along with keys of other types, only the ``text`` index field determine whether the index references a document. The other keys do not determine whether the index references the documents or not."
msgstr ""

#: ../source/core/index-text.txt:121
# 3801aadcda3a4dbbad09cb57dc8323ea
msgid "Restrictions"
msgstr ""

#: ../source/core/index-text.txt:124
# 7a9702d149c8463191b548e9a029bab5
msgid "Text Search and Hints"
msgstr ""

#: ../source/includes/fact-hint-text-query-restriction.rst:3
# 67c3b828e2ce4794a761be1f09dc5ec9
msgid "You cannot use :method:`~cursor.hint()` if the query includes a :query:`$text` query expression."
msgstr ""

#: ../source/core/index-text.txt:131
# be7d913527104553b55f5c04e7efa295
msgid "Text Index and Sort"
msgstr ""

#: ../source/core/index-text.txt:133
# f9f06904716e423f97d02ba74b54196a
msgid "Sort operations cannot obtain sort order from a ``text`` index, even from a :ref:`compound text index <text-index-compound>`; i.e. sort operations cannot use the ordering in the text index."
msgstr ""

#: ../source/core/index-text.txt:140
# 4206af3b75054577bfdd4d90de3c3c2e
msgid "Compound Index"
msgstr ""

#: ../source/core/index-text.txt:142
# c5b1ca6417d24168b5058301dd4722c5
msgid "A :doc:`compound index </core/index-compound>` can include a ``text`` index key in combination with ascending/descending index keys. However, these compound indexes have the following restrictions:"
msgstr ""

#: ../source/includes/fact-compound-index-with-text-restrictions.rst:1
# 72d247d36bb74abaa3eb5ab9ad8d580e
msgid "A compound ``text`` index cannot include any other special index types, such as :ref:`multi-key <index-type-multi-key>` or :ref:`geospatial <index-feature-geospatial>` index fields."
msgstr ""

#: ../source/includes/fact-compound-index-with-text-restrictions.rst:5
# 87f7ca766e5e47a7866d167d12a6653e
msgid "If the compound ``text`` index includes keys **preceding** the ``text`` index key, to perform a :query:`$text` search, the query predicate must include **equality match conditions** on the preceding keys."
msgstr ""

#: ../source/core/index-text.txt:148
# 66014e0879fa4b12962ac5a668d3842e
msgid "See also :ref:`text-index-and-sort` for additional limitations."
msgstr ""

#: ../source/core/index-text.txt:150
# 3f2baba1458a4873ab4498781654e5d3
msgid "For an example of a compound text index, see :doc:`/tutorial/limit-number-of-items-scanned-for-text-search`."
msgstr ""

#: ../source/core/index-text.txt:156
# 021bd5064b1a4604b4017fcae246027d
msgid "Drop a Text Index"
msgstr ""

#: ../source/core/index-text.txt:158
# 44ca739eb6f7430e94eac6f390512a3c
msgid "To drop a ``text`` index, pass the name of the index to the :method:`db.collection.dropIndex()` method. To get the name of the index, run the :method:`~db.collection.getIndexes()` method."
msgstr ""

#: ../source/core/index-text.txt:162
# b36115b0d23244bb86c58de581e6e349
msgid "For information on the default naming scheme for ``text`` indexes as well as overriding the default name, see :doc:`/tutorial/avoid-text-index-name-limit`."
msgstr ""

#: ../source/core/index-text.txt:167
# e6f739d3ca61476eb1dc3ebd0b3e6576
msgid "Storage Requirements and Performance Costs"
msgstr ""

#: ../source/core/index-text.txt:169
# 737e9e144d8d40b880b1c4a7cab08a41
msgid "``text`` indexes have the following storage requirements and performance costs:"
msgstr ""

#: ../source/core/index-text.txt:172
# 710c6ecebefc422fb18616239d7b5b0e
msgid "``text`` indexes can be large. They contain one index entry for each unique post-stemmed word in each indexed field for each document inserted."
msgstr ""

#: ../source/core/index-text.txt:176
# 9a6a8062ea224d23a5f904e6c4012758
msgid "Building a ``text`` index is very similar to building a large multi-key index and will take longer than building a simple ordered (scalar) index on the same data."
msgstr ""

#: ../source/core/index-text.txt:180
# 2cd20d148ab54ec8bedd0537a54da094
msgid "When building a large ``text`` index on an existing collection, ensure that you have a sufficiently high limit on open file descriptors. See the :doc:`recommended settings </reference/ulimit>`."
msgstr ""

#: ../source/core/index-text.txt:184
# 1abbf4b9a784473fbc39d27786f43907
msgid "``text`` indexes will impact insertion throughput because MongoDB must add an index entry for each unique post-stemmed word in each indexed field of each new source document."
msgstr ""

#: ../source/core/index-text.txt:188
# 3305a46038e44aaf806214d56463cfba
msgid "Additionally, ``text`` indexes do not store phrases or information about the proximity of words in the documents. As a result, phrase queries will run much more effectively when the entire collection fits in RAM."
msgstr ""

#: ../source/core/index-text.txt:196
# ceb6a4fdbb7346d782d173205c28dcd9
msgid "Text Search"
msgstr ""

#: ../source/core/index-text.txt:198
# c422447783924d72923b9c4ad36e2e19
msgid "Text search supports the search of string content in documents of a collection. MongoDB provides the :query:`$text` operator to perform text search in queries and in :doc:`aggregation pipelines </tutorial/text-search-in-aggregation>`."
msgstr ""

#: ../source/core/index-text.txt:203
# e545982e50d94118b693d7dda63ca8fa
msgid "The text search process:"
msgstr ""

#: ../source/core/index-text.txt:205
# 4016a32b6a6744baba601362be586c01
msgid "tokenizes and stems the search term(s) during both the index creation and the text command execution."
msgstr ""

#: ../source/core/index-text.txt:208
# f05b24e1d2d2456988535326a06d1f85
msgid "assigns a score to each document that contains the search term in the indexed fields. The score determines the relevance of a document to a given search query."
msgstr ""

#: ../source/core/index-text.txt:212
# 4aca294d9cdc43bd885ed7e0873ddc8d
msgid "The :query:`$text` operator can search for words and phrases. The query matches on the complete stemmed words. For example, if a document field contains the word ``blueberry``, a search on the term ``blue`` will not match the document. However, a search on either ``blueberry`` or ``blueberries`` will match."
msgstr ""

#: ../source/core/index-text.txt:218
# 2e00b277e10e4a9aa9f231ae8351f12b
msgid "For information and examples on various text search patterns, see the :query:`$text` query operator. For examples of text search in aggregation pipeline, see :doc:`/tutorial/text-search-in-aggregation`."
msgstr ""

