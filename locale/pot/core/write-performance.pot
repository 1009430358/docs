# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-performance.txt:3
# 5cb3e6da1d15441592b8be03ca43fc5f
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:0
# 0a5e06f0b48c4969aed90d84bba2e97c
msgid "On this page"
msgstr ""

#: ../source/core/write-performance.txt:14
# ee63346db0cd498bacd57c8881059853
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:16
# 35e771cfbc2d4b7db66aef3781afe518
msgid "After every insert, update, or delete operation, MongoDB must update *every* index associated with the collection in addition to the data itself. Therefore, every index on a collection adds some amount of overhead for the performance of write operations. [#exceptions]_"
msgstr ""

#: ../source/core/write-performance.txt:21
# 6e96f4224a524c838fbfb3c619de809e
msgid "In general, the performance gains that indexes provide for *read operations* are worth the insertion penalty. However, in order to optimize write performance when possible, be careful when creating new indexes and evaluate the existing indexes to ensure that your queries actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:27
# 315a88b86aee4812808a34a415b502b0
msgid "For indexes and queries, see :doc:`/core/query-optimization`. For more information on indexes, see :doc:`/indexes` and :doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:31
# afd21539278b43e5a5ba485504a4c84f
msgid "For inserts and updates to un-indexed fields, the overhead for :ref:`sparse indexes <index-type-sparse>` is less than for non-sparse indexes. Also for non-sparse indexes, updates that do not change the record size have less indexing overhead."
msgstr ""

#: ../source/core/write-performance.txt:39
# 8bd69fc61f8e4636a0b53252fb6d30ee
msgid "Document Growth and the MMAPv1 Storage Engine"
msgstr ""

#: ../source/core/write-performance.txt:41
# d07c6950db6341e49ef96d1201c22e86
msgid "Some update operations can increase the size of the document; for instance, if an update adds a new field to the document."
msgstr ""

#: ../source/core/write-performance.txt:44
# 76c72cd23a9d478fb923657cbed801d8
msgid "For the MMAPv1 storage engine, if an update operation causes a document to exceed the currently allocated :term:`record size`, MongoDB relocates the document on disk with enough contiguous space to hold the document. Updates that require relocations take longer than updates that do not, particularly if the collection has indexes. If a collection has indexes, MongoDB must update all index entries. Thus, for a collection with many indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:55
# 402752ffbb614ebe86cd65283e558c24
msgid "By default, MongoDB uses :ref:`power-of-2-allocation` to add :ref:`padding automatically <record-allocation-strategies>` for the MMAPv1 storage engine. The :ref:`power-of-2-allocation` ensures that MongoDB allocates document space in sizes that are powers of 2, which helps ensure that MongoDB can efficiently reuse free space created by document deletion or relocation as well as reduce the occurrences of reallocations in many cases."
msgstr ""

#: ../source/core/write-performance.txt:63
# 676c1b31560c475ebb7568dbf881f458
msgid "Although :ref:`power-of-2-allocation` minimizes the occurrence of re-allocation, it does not eliminate document re-allocation."
msgstr ""

#: ../source/core/write-performance.txt:67
# 6f73beb5182d49fba94558263583d766
msgid "See :doc:`/core/mmapv1` for more information."
msgstr ""

#: ../source/core/write-performance.txt:70
# 4069e8c5a8a04ffe9ac7a81038e24446
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:73
# 9afcf0faade245d6a54dfc9567745317
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:75
# 07e1ba3310a44fc490395e3ff2db0297
msgid "The capability of the storage system creates some important physical limits for the performance of MongoDB's write operations. Many unique factors related to the storage system of the drive affect write performance, including random access patterns, disk caches, disk readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:81
# 194af5201bee4da783c2d34e97930d65
msgid "Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by 100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:0
# de52f427f3ce44498b69f2d1002fdb02
msgid "See"
msgstr ""

#: ../source/core/write-performance.txt:88
# be9f1721f8624524b94a66e895b56405
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:90
# 6be34ff5028949df82aa0024123308b5
msgid "To provide durability in the event of a crash, MongoDB uses *write ahead logging* to an on-disk :term:`journal`. MongoDB writes the in-memory changes first to the on-disk journal files. If MongoDB should terminate or encounter an error before committing the changes to the data files, MongoDB can use the journal files to apply the write operation to the data files."
msgstr ""

#: ../source/core/write-performance.txt:97
# 2e5c3dd56b5f4ca1a6a9a69c1640c821
msgid "While the durability assurance provided by the journal typically outweigh the performance costs of the additional write operations, consider the following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:102
# fee3b33a9b054654b7c7830cd333887a
msgid "If the journal and the data file reside on the same block device, the data files and the journal may have to contend for a finite number of available I/O resources. Moving the journal to a separate device may increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:107
# c12edd1dc03e4abf89fa46d409ebb9eb
msgid "If applications specify :doc:`write concerns </reference/write-concern>` that include the :writeconcern:`j option <j>`, :program:`mongod` will decrease the duration between journal writes, which can increase the overall write load."
msgstr ""

#: ../source/core/write-performance.txt:112
# c6039ec264b140228c8e2902674d321f
msgid "The duration between journal writes is configurable using the :setting:`~storage.journal.commitIntervalMs` run-time option. Decreasing the period between journal commits will increase the number of write operations, which can limit MongoDB's capacity for write operations. Increasing the amount of time between journal commits may decrease the total number of write operation, but also increases the chance that the journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:121
# 2d27bc118cf64fae967a0d93bb3a76fe
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:4
# 7c3b6facaa7c42079f48f049f814bbe8
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:6
# 44346a8224ec43d7b7202a98186bff90
msgid "`MongoDB Performance Evaluation and Tuning Consulting Package <https://www.mongodb.com/products/consulting?jmp=docs#performance_evaluation>`_"
msgstr ""

