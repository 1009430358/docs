# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/write-performance.txt:3
# 7dfab354d5764c4c8d8001d5c4c9f699
msgid "Write Operation Performance"
msgstr ""

#: ../source/core/write-performance.txt:8
# f9d3ad9d01714cc1ab11e28fef202aef
msgid "Indexes"
msgstr ""

#: ../source/core/write-performance.txt:10
# c39ab58d6893456e9491621793873358
msgid "After every insert, update, or delete operation, MongoDB must update *every* index associated with the collection in addition to the data itself. Therefore, every index on a collection adds some amount of overhead for the performance of write operations. [#exceptions]_"
msgstr ""

#: ../source/core/write-performance.txt:15
# 2b48397d0d56492c80c8ca36da83169c
msgid "In general, the performance gains that indexes provide for *read operations* are worth the insertion penalty. However, in order to optimize write performance when possible, be careful when creating new indexes and evaluate the existing indexes to ensure that your queries actually use these indexes."
msgstr ""

#: ../source/core/write-performance.txt:21
# 30039c79cbfd4c949d370c076b759e17
msgid "For indexes and queries, see :doc:`/core/query-optimization`. For more information on indexes, see :doc:`/indexes` and :doc:`/applications/indexes`."
msgstr ""

#: ../source/core/write-performance.txt:25
# b19895fd1c4a4fa8831a1187c4718ce6
msgid "For inserts and updates to un-indexed fields, the overhead for :ref:`sparse indexes <index-type-sparse>` is less than for non-sparse indexes. Also for non-sparse indexes, updates that do not change the record size have less indexing overhead."
msgstr ""

#: ../source/core/write-performance.txt:33
# 5a83287a65d34bdd8a653da3ec32cde7
msgid "Document Growth and the MMAPv1 Storage Engine"
msgstr ""

#: ../source/core/write-performance.txt:35
# 878aa8d008c64ec09bbae773fec65dbd
msgid "Some update operations can increase the size of the document; for instance, if an update adds a new field to the document."
msgstr ""

#: ../source/core/write-performance.txt:38
# 5e312de349c546a59cdeaec1dc42a8b4
msgid "For the MMAPv1 storage engine, if an update operation causes a document to exceed the currently allocated :term:`record size`, MongoDB relocates the document on disk with enough contiguous space to hold the document. Updates that require relocations take longer than updates that do not, particularly if the collection has indexes. If a collection has indexes, MongoDB must update all index entries. Thus, for a collection with many indexes, the move will impact the write throughput."
msgstr ""

#: ../source/core/write-performance.txt:49
# e2348df7959140e5a6dfb122b97a587b
msgid "By default, MongoDB uses :ref:`power-of-2-allocation` to add :ref:`padding automatically <record-allocation-strategies>` for the MMAPv1 storage engine. The :ref:`power-of-2-allocation` ensures that MongoDB allocates document space in sizes that are powers of 2, which helps ensure that MongoDB can efficiently reuse free space created by document deletion or relocation as well as reduce the occurrences of reallocations in many cases."
msgstr ""

#: ../source/core/write-performance.txt:57
# 3159b79467e947d48c5a9fac69cf8bf0
msgid "Although :ref:`power-of-2-allocation` minimizes the occurrence of re-allocation, it does not eliminate document re-allocation."
msgstr ""

#: ../source/core/write-performance.txt:61
# b8570447cd744c18a70657cfc8a023c5
msgid "See :doc:`/core/storage` for more information."
msgstr ""

#: ../source/core/write-performance.txt:64
# 21b694dbe9a0464d8213a58e8ee1d4f8
msgid "Storage Performance"
msgstr ""

#: ../source/core/write-performance.txt:67
# 3415bf0eb4c94b0095449944fca5a3b0
msgid "Hardware"
msgstr ""

#: ../source/core/write-performance.txt:69
# 4b93ce17caf3471588e040f5b52d2b29
msgid "The capability of the storage system creates some important physical limits for the performance of MongoDB's write operations. Many unique factors related to the storage system of the drive affect write performance, including random access patterns, disk caches, disk readahead and RAID configurations."
msgstr ""

#: ../source/core/write-performance.txt:75
# 0849edb3fcb34fb2a442a3c35841dbfa
msgid "Solid state drives (SSDs) can outperform spinning hard disks (HDDs) by 100 times or more for random workloads."
msgstr ""

#: ../source/core/write-performance.txt:0
# 974a2f38d6b84b10b2ed5ff7f948d622
msgid "See"
msgstr ""

#: ../source/core/write-performance.txt:82
# d9566390d6a44e1a910ad099c0981986
msgid "Journaling"
msgstr ""

#: ../source/core/write-performance.txt:84
# 79d3f7759d564d5bba2f8d59b9063688
msgid "MongoDB uses *write ahead logging* to an on-disk :term:`journal` to guarantee :doc:`write operation </core/write-operations>` durability and to provide crash resiliency. Before applying a change to the data files, MongoDB writes the change operation to the journal."
msgstr ""

#: ../source/core/write-performance.txt:89
# b938026be58542f4b429b25d4e423974
msgid "While the durability assurance provided by the journal typically outweigh the performance costs of the additional write operations, consider the following interactions between the journal and performance:"
msgstr ""

#: ../source/core/write-performance.txt:94
# 91b2c4f19d2e4316bebd8c9ec8966bff
msgid "if the journal and the data file reside on the same block device, the data files and the journal may have to contend for a finite number of available write operations. Moving the journal to a separate device may increase the capacity for write operations."
msgstr ""

#: ../source/core/write-performance.txt:99
# f84a090ee30f427cb6f799aff3cd2582
msgid "if applications specify :doc:`write concern </core/write-concern>` that includes :ref:`journaled <write-concern-replica-journaled>`, :program:`mongod` will decrease the duration between journal commits, which can increases the overall write load."
msgstr ""

#: ../source/core/write-performance.txt:104
# a7417d3cf99c4d9d90d250ef4d46a329
msgid "the duration between journal commits is configurable using the :setting:`~storage.journal.commitIntervalMs` run-time option. Decreasing the period between journal commits will increase the number of write operations, which can limit MongoDB's capacity for write operations. Increasing the amount of time between commits may decrease the total number of write operation, but also increases the chance that the journal will not record a write operation in the event of a failure."
msgstr ""

#: ../source/core/write-performance.txt:113
# 25d1554db7924e9a8683b05fc32a248a
msgid "For additional information on journaling, see :doc:`/core/journaling`."
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:4
# 6fbd763ea9d74853a622f7ea0c6bdc78
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-performance-eval.rst:6
# 5e51817c4e9c4a42a6f4565691c42bd2
msgid "`MongoDB Performance Evaluation and Tuning Consulting Package <https://www.mongodb.com/products/consulting?jmp=docs#performance_evaluation>`_"
msgstr ""

