# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/data-model-design.txt:5
# f4a41d9fdd8f490493ffcaf7a0d38f75
msgid "Data Model Design"
msgstr ""

#: ../source/core/data-model-design.txt:9
# d3023bcef7c44f6fbc6a329b86e01d08
msgid "Effective data models support your application needs. The key consideration for the structure of your documents is the decision to :ref:`embed <data-modeling-embedding>` or to :ref:`use references <data-modeling-referencing>`."
msgstr ""

#: ../source/core/data-model-design.txt:17
# b686da2e095540f69f61985fc13d01b9
msgid "Embedded Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:19
# d8d104a8046b4dbb8ccba919c0886b68
msgid "With MongoDB, you may embed related data in a single structure or document. These schema are generally known as \"denormalized\" models, and take advantage of MongoDB's rich documents. Consider the following diagram:"
msgstr ""

#: ../source/core/data-model-design.txt:26
# c0a95bfa489349e19a159e64c845e414
msgid "Embedded data models allow applications to store related pieces of information in the same database record. As a result, applications may need to issue fewer queries and updates to complete common operations."
msgstr ""

#: ../source/core/data-model-design.txt:30
# 2f72a1ba5aeb421b94dfabe184f366e9
msgid "In general, use embedded data models when:"
msgstr ""

#: ../source/core/data-model-design.txt:32
# 813832e553c34265a7d7032d64a9a91d
msgid "you have \"contains\" relationships between entities. See :ref:`data-modeling-example-one-to-one`."
msgstr ""

#: ../source/core/data-model-design.txt:35
# 3a844ede9ec84be0b7befa0ce97f699f
msgid "you have one-to-many relationships between entities. In these relationships the \"many\" or child documents always appear with or are viewed in the context of the \"one\" or parent documents.  See :ref:`data-modeling-example-one-to-many`."
msgstr ""

#: ../source/core/data-model-design.txt:40
# 44fee143ca6f447085c5945f068800bd
msgid "In general, embedding provides better performance for read operations, as well as the ability to request and retrieve related data in a single database operation. Embedded data models make it possible to update related data in a single atomic write operation."
msgstr ""

#: ../source/core/data-model-design.txt:45
# 8fbd9f7a15be48bfb6799f77601a4989
msgid "However, embedding related data in documents may lead to situations where documents grow after creation. With the MMAPv1 storage engine, document growth can impact write performance and lead to data fragmentation."
msgstr ""

#: ../source/core/data-model-design.txt:50
# 8374762c7cf040f1a7914b0ea4a38e27
msgid "In version 3.0.0, MongoDB uses :ref:`power-of-2-allocation` as the default allocation strategy for MMAPv1 in order to account for document growth, minimizing the likelihood of data fragmentation. See :ref:`power-of-2-allocation` for details. Furthermore, documents in MongoDB must be smaller than the :limit:`maximum BSON document size <BSON Document Size>`. For bulk binary data, consider :doc:`GridFS </core/gridfs>`."
msgstr ""

#: ../source/core/data-model-design.txt:58
# 78675a17d3bd4df69da3924986d2145d
msgid "To interact with embedded documents, use :term:`dot notation` to \"reach into\" embedded documents. See :ref:`query for data in arrays <read-operations-arrays>` and :ref:`query data in embedded documents <read-operations-embedded-documents>` for more examples on accessing data in arrays and embedded documents."
msgstr ""

#: ../source/core/data-model-design.txt:67
# 7a6c28e08401480f82b85aa46b15c00a
msgid "Normalized Data Models"
msgstr ""

#: ../source/core/data-model-design.txt:69
# 1d2e6428c32344fca81d9ee759ab49f1
msgid "Normalized data models describe relationships using :doc:`references </reference/database-references>` between documents."
msgstr ""

#: ../source/core/data-model-design.txt:74
# d85b7abd6443462dbac8a70080e518aa
msgid "In general, use normalized data models:"
msgstr ""

#: ../source/core/data-model-design.txt:76
# 37c5766bec334723831b442c9b99fc25
msgid "when embedding would result in duplication of data but would not provide sufficient read performance advantages to outweigh the implications of the duplication."
msgstr ""

#: ../source/core/data-model-design.txt:80
# d2f1ac31a9ce47699484611b5bbd813e
msgid "to represent more complex many-to-many relationships."
msgstr ""

#: ../source/core/data-model-design.txt:82
# 9e3df2360b6049c0834dcd1d7c5bff39
msgid "to model large hierarchical data sets."
msgstr ""

#: ../source/core/data-model-design.txt:84
# aaee77a43fc84f2590ef5c5660e79279
msgid "References provides more flexibility than embedding. However, client-side applications must issue follow-up queries to resolve the references. In other words, normalized data models can require more round trips to the server."
msgstr ""

#: ../source/core/data-model-design.txt:89
# 344a0df17af4453daae286dd1ae33e53
msgid "See :ref:`data-modeling-publisher-and-books` for an example of referencing. For examples of various tree models using references, see :doc:`/applications/data-models-tree-structures`."
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:4
# 4152794e43a844db892d95aa642e6071
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:6
# 0de7bfa9885442cbb6ee01c1ed32e1dc
msgid "`Thinking in Documents Part 1 (Blog Post) <https://www.mongodb.com/blog/post/thinking-documents-part-1?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:7
# 4e074f51067948a6aec04a14afbaeb49
msgid "`Thinking in Documents (Presentation) <http://www.mongodb.com/presentations/webinar-back-basics-1-thinking-documents?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:8
# 4b5857db43054b53a8d6adf944b12a20
msgid "`Schema Design for Time Series Data (Presentation) <http://www.mongodb.com/presentations/webinar-time-series-data-mongodb?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:9
# 2fc0a607631a4f8784f51d9f0b03ec94
msgid "`Socialite, the Open Source Status Feed - Storing a Social Graph (Presentation) <http://www.mongodb.com/presentations/socialite-open-source-status-feed-part-2-managing-social-graph?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-data-model-design.rst:10
# 5b8807403df14184ad9d460d37ea782f
msgid "`MongoDB Rapid Start Consultation Services <https://www.mongodb.com/products/consulting?jmp=docs#rapid_start>`_"
msgstr ""

