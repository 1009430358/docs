# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2dsphere.txt:3
# 148e93bb62d441a0a8d4050abe75be61
msgid "``2dsphere`` Indexes"
msgstr ""

#: ../source/core/2dsphere.txt:10
# 3f4f5d9ac72445fd81e2185ebd6ac4ac
msgid "Overview"
msgstr ""

#: ../source/core/2dsphere.txt:12
# d9af1c9625914aaaa0ca47f6900a33b5
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. ``2dsphere`` index supports all MongoDB geospatial queries: queries for inclusion, intersection and proximity. See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2dsphere.txt:18
# 7b966dd29e99451e9ec3b47d87733a47
msgid "The ``2dsphere`` index supports data stored as :doc:`GeoJSON </reference/geojson>` objects and as legacy coordinate pairs (See also :ref:`2dsphere-data-restrictions`). For legacy coordinate pairs, the index converts the data to GeoJSON :ref:`geojson-point`. For details on the supported GeoJSON objects, see :doc:`/reference/geojson`."
msgstr ""

#: ../source/core/2dsphere.txt:24
# 8b0f8ebad4834a3cb46b82fc7e8c45a4
msgid "The default datum for an earth-like sphere is :term:`WGS84`. Coordinate-axis order is **longitude, latitude**."
msgstr ""

#: ../source/core/2dsphere.txt:30
# f82b5536f5a043c68aae974f2b6fc6f0
msgid "``2dsphere (Version 2)``"
msgstr ""

#: ../source/core/2dsphere.txt:34
# 75ca5bbb7b964a64a2425ea6adc16d19
msgid "MongoDB 2.6 introduces a version 2 of ``2dsphere`` indexes. Version 2 is the default version of ``2dsphere`` indexes created in MongoDB 2.6 and later series. To override the default version 2 and create a version 1 index, include the option ``{ \"2dsphereIndexVersion\": 1 }`` when creating the index."
msgstr ""

#: ../source/core/2dsphere.txt:41
# 62d7bf4b916a4137b84ef69df9d565af
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2dsphere.txt:45
# 765a0d862cc94a18a381c3a40ea59143
msgid "``2dsphere (Version 2)`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``2dsphere`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the index. For inserts, MongoDB inserts the document but does not add to the ``2dsphere`` index."
msgstr ""

#: ../source/core/2dsphere.txt:52
# aa611f65bf9d40929d7cc6bf30aba443
msgid "For a compound index that includes a ``2dsphere`` index key along with keys of other types, only the ``2dsphere`` index field determines whether the index references a document."
msgstr ""

#: ../source/core/2dsphere.txt:56
# 60224388fae3405c83702625fe035555
msgid "Earlier versions of MongoDB only support ``2dsphere (Version 1)`` indexes. ``2dsphere (Version 1)`` indexes are *not* sparse by default and will reject documents with ``null`` location fields."
msgstr ""

#: ../source/core/2dsphere.txt:61
# f80517c601224dab9ca97e024d5a341e
msgid "Additional GeoJSON Objects"
msgstr ""

#: ../source/core/2dsphere.txt:63
# 16ea84b3ad1a44ae985ff439a6be8d29
msgid "``2dsphere (Version 2)`` includes support for additional GeoJSON object: :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multipolygon`, and :ref:`geojson-geometrycollection`. For details on all supported GeoJSON objects, see :doc:`/reference/geojson`."
msgstr ""

#: ../source/core/2dsphere.txt:69
# f73221bcd91d43269a4a60f29c7dadee
msgid "Considerations"
msgstr ""

#: ../source/core/2dsphere.txt:72
# b078a1d6753345ac9d1f9929d7cf18ed
msgid "``geoNear`` and ``$geoNear`` Restrictions"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# ddca4707ed7a4911b3ee87f9dfe238a9
msgid "The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage require that a collection have *at most* only one |first-geo-index| and/or only one |second-geo-index| whereas :ref:`geospatial query operators <geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
# f426dc24e60b473aa93cb92996512d2b
msgid "The geospatial index restriction for the :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage exists because neither the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage syntax includes the location field. As such, index selection among multiple ``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
# 0cd9116efd054ca381bed49dfca4ea3d
msgid "No such restriction applies for :ref:`geospatial query operators <geospatial-query-selectors>` since these operators take a location field, eliminating the ambiguity."
msgstr ""

#: ../source/core/2dsphere.txt:79
# 45370e4828494102ae20ad38d138a351
msgid "Shard Key Restrictions"
msgstr ""

#: ../source/core/2dsphere.txt:81
# d732d776a8064c5789eee9d8d02a39fa
msgid "You cannot use a ``2dsphere`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2dsphere.txt:88
# e66a4235e7394594998b90617bcde8ab
msgid "``2dsphere`` Indexed Field Restrictions"
msgstr ""

#: ../source/includes/geo-data-limit-for-2dsphere.rst:1
# 60862e80178540d2ab0cefe15b307002
msgid "Fields with :doc:`2dsphere </core/2dsphere>` indexes must hold geometry data in the form of :term:`coordinate pairs <legacy coordinate pairs>` or :term:`GeoJSON` data. If you attempt to insert a document with non-geometry data in a ``2dsphere`` indexed field, or build a ``2dsphere`` index on a collection where the indexed field has non-geometry data, the operation will fail."
msgstr ""

#: ../source/core/2dsphere.txt:93
# f184dacea4cf4c55b63de1c066db195f
msgid "Create a ``2dsphere`` Index"
msgstr ""

#: ../source/core/2dsphere.txt:95
# 4e27406301aa4150b0fcecea9e247901
msgid "To create a ``2dsphere`` index, use the :method:`db.collection.createIndex()` method, specifying the location field as the key and specify the string literal ``\"2dsphere\"`` as the index type:"
msgstr ""

#: ../source/core/2dsphere.txt:104
# 412df701601941a8bb1bfd38c1e1bba9
msgid "Unlike a compound :doc:`2d </core/2d>` index which can reference one location field and one other field, a :ref:`compound <index-type-compound>` ``2dsphere`` index can reference multiple location and non-location fields."
msgstr ""

#: ../source/core/2dsphere.txt:109
# 74f482d384d04e20ba248eb3167efb3d
msgid "For more information on creating ``2dspshere`` indexes, see :doc:`/tutorial/build-a-2dsphere-index`."
msgstr ""

