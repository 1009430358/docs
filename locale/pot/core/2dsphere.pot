# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2dsphere.txt:3
# 79a4ea4365f54c72b196bc66cc55eb98
msgid "``2dsphere`` Indexes"
msgstr ""

#: ../source/core/2dsphere.txt:0
# 82f4cc03aa16401fb92e11af851a4dc8
msgid "On this page"
msgstr ""

#: ../source/core/2dsphere.txt:16
# a267dd3775aa4172901c7694f2840cc8
msgid "Overview"
msgstr ""

#: ../source/core/2dsphere.txt:18
# 8b0beccc523041dfa8c78b4dc55b8bc0
msgid "A ``2dsphere`` index supports queries that calculate geometries on an earth-like sphere. ``2dsphere`` index supports all MongoDB geospatial queries: queries for inclusion, intersection and proximity. See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2dsphere.txt:24
# 80f52cdf3c344227ad447b5d70bf6584
msgid "The ``2dsphere`` index supports data stored as :doc:`GeoJSON </reference/geojson>` objects and as legacy coordinate pairs (See also :ref:`2dsphere-data-restrictions`). For legacy coordinate pairs, the index converts the data to GeoJSON :ref:`geojson-point`. For details on the supported GeoJSON objects, see :doc:`/reference/geojson`."
msgstr ""

#: ../source/core/2dsphere.txt:30
# e00d471b936944c1942918db366ff1cd
msgid "The default datum for an earth-like sphere is :term:`WGS84`. Coordinate-axis order is **longitude, latitude**."
msgstr ""

#: ../source/core/2dsphere.txt:36
# 94c269699cde4ae1a5116295dbcacfac
msgid "``2dsphere (Version 2)``"
msgstr ""

#: ../source/core/2dsphere.txt:40
# 94bab66fdacd45febfa6a0914b46788f
msgid "MongoDB 2.6 introduces a version 2 of ``2dsphere`` indexes. Version 2 is the default version of ``2dsphere`` indexes created in MongoDB 2.6 and later series. To override the default version 2 and create a version 1 index, include the option ``{ \"2dsphereIndexVersion\": 1 }`` when creating the index."
msgstr ""

#: ../source/core/2dsphere.txt:47
# 9b22f825ad774932b13e3f94d44aef30
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2dsphere.txt:51
# 6bb28ae997e54638bc45b98ce277af8e
msgid "``2dsphere (Version 2)`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``2dsphere`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the index. For inserts, MongoDB inserts the document but does not add to the ``2dsphere`` index."
msgstr ""

#: ../source/core/2dsphere.txt:58
# a6be4ae4dd014b19a589b70da176a86d
msgid "For a compound index that includes a ``2dsphere`` index key along with keys of other types, only the ``2dsphere`` index field determines whether the index references a document."
msgstr ""

#: ../source/core/2dsphere.txt:62
# 64bc22f041614673ad534af91f53d276
msgid "Earlier versions of MongoDB only support ``2dsphere (Version 1)`` indexes. ``2dsphere (Version 1)`` indexes are *not* sparse by default and will reject documents with ``null`` location fields."
msgstr ""

#: ../source/core/2dsphere.txt:67
# 90a37ae66c054d1dac29157d07bd7c20
msgid "Additional GeoJSON Objects"
msgstr ""

#: ../source/core/2dsphere.txt:69
# 567a9b9cea2840fdba1133cfa5beac24
msgid "``2dsphere (Version 2)`` includes support for additional GeoJSON object: :ref:`geojson-multipoint`, :ref:`geojson-multilinestring`, :ref:`geojson-multipolygon`, and :ref:`geojson-geometrycollection`. For details on all supported GeoJSON objects, see :doc:`/reference/geojson`."
msgstr ""

#: ../source/core/2dsphere.txt:75
# 013117cb986947f8b10cd6fb3f95d7f1
msgid "Considerations"
msgstr ""

#: ../source/core/2dsphere.txt:78
# 322e89bf77ad4ca4bed02b41951a7c63
msgid "``geoNear`` and ``$geoNear`` Restrictions"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# ecf188a00f394166a6cb3081b6f435e3
msgid "The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage require that a collection have *at most* only one |first-geo-index| and/or only one |second-geo-index| whereas :ref:`geospatial query operators <geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
# c937e7d94e044bcd8a40c0cf9f2e0cba
msgid "The geospatial index restriction for the :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage exists because neither the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage syntax includes the location field. As such, index selection among multiple ``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
# 2740072447e94a0199bbcb2b81517c8a
msgid "No such restriction applies for :ref:`geospatial query operators <geospatial-query-selectors>` since these operators take a location field, eliminating the ambiguity."
msgstr ""

#: ../source/core/2dsphere.txt:85
# fd80fb376af646b7a4061b10cb3da0a7
msgid "Shard Key Restrictions"
msgstr ""

#: ../source/core/2dsphere.txt:87
# 944b2052cd2a47e59811bb77b1b8dd9c
msgid "You cannot use a ``2dsphere`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2dsphere.txt:94
# 5f8d34434d14445783ea2ccf8e52259b
msgid "``2dsphere`` Indexed Field Restrictions"
msgstr ""

#: ../source/includes/geo-data-limit-for-2dsphere.rst:1
# c6352ddc31734ab9abe752baa7d5127a
msgid "Fields with :doc:`2dsphere </core/2dsphere>` indexes must hold geometry data in the form of :term:`coordinate pairs <legacy coordinate pairs>` or :term:`GeoJSON` data. If you attempt to insert a document with non-geometry data in a ``2dsphere`` indexed field, or build a ``2dsphere`` index on a collection where the indexed field has non-geometry data, the operation will fail."
msgstr ""

#: ../source/core/2dsphere.txt:99
#: ../source/core/2dsphere.txt:138
# 3407995298d54168ae0ce31b7e500584
# 5ece8fdcc9b4491782b07c678d385d9d
msgid "Create a ``2dsphere`` Index"
msgstr ""

#: ../source/core/2dsphere.txt:101
# 24c93ff5b90640938d27cfed209f5fe3
msgid "To create a ``2dsphere`` index, use the :method:`db.collection.createIndex()` method, specifying the location field as the key and the string literal ``\"2dsphere\"`` as the index type:"
msgstr ""

#: ../source/core/2dsphere.txt:110
# 566648ae60204d95a88dd3b27bb55864
msgid "Unlike a compound :doc:`2d </core/2d>` index which can reference one location field and one other field, a :ref:`compound <index-type-compound>` ``2dsphere`` index can reference multiple location and non-location fields."
msgstr ""

#: ../source/core/2dsphere.txt:115
# b1598c0b3ac444328c66678310160801
msgid "For the following examples, consider a collection ``places`` with documents that store location data as :ref:`GeoJSON Point <geojson-point>` in a field named ``loc``:"
msgstr ""

#: ../source/core/2dsphere.txt:140
# af0e0e53696445c782de7eef759a84e7
msgid "The following operation creates a :doc:`2dsphere </core/2dsphere>` index on the location field ``loc``:"
msgstr ""

#: ../source/core/2dsphere.txt:148
# df98bb0fed524999bd6bc304b4357b50
msgid "Create a Compound Index with ``2dsphere`` Index Key"
msgstr ""

#: ../source/core/2dsphere.txt:150
# 570b635943f14b82923be95bd3643723
msgid "A :ref:`compound index <index-type-compound>` can include a ``2dsphere`` index key in combination with non-geospatial index keys. For example, the following operation creates a compound index where the first key ``loc`` is a ``2dsphere`` index key, and the remaining keys ``category`` and ``names`` are non-geospatial index keys, specifically descending (``-1``) and ascending (``1``) keys respectively."
msgstr ""

#: ../source/core/2dsphere.txt:162
# 08ac50ebbb264ee1bb38b9107db5a401
msgid "Unlike the :doc:`2d </core/2d>` index, a compound ``2dsphere`` index does not require the location field to be the first field indexed. For example:"
msgstr ""

