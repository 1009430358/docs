# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/aggregation-pipeline.txt:3
# c28dd12f044d47d1981958ac4007b5bf
msgid "Aggregation Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:0
# 6ed7b5c64dfb496ebb4b47b755bdb1e3
msgid "On this page"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:13
# 966af536ca454fc39c4b7c65db481900
msgid "The aggregation pipeline is a framework for data aggregation modeled on the concept of data processing pipelines. Documents enter a multi-stage pipeline that transforms the documents into aggregated results."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:20
# 901f9e5319444a7db10797e19ca81a41
msgid "The aggregation pipeline provides an alternative to :term:`map-reduce` and may be the preferred solution for aggregation tasks where the complexity of map-reduce may be unwarranted."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:24
# 26839dddbb1249069644444e75904161
msgid "Aggregation pipeline have some limitations on value types and result size. See :doc:`/core/aggregation-pipeline-limits` for details on limits and restrictions on the aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:31
# 9d992205e5b34da2bd9dad066ffbe059
msgid "Pipeline"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:33
# eaae09dce58d447d91d9faf276f8e152
msgid "The MongoDB aggregation pipeline consists of :ref:`stages <aggregation-pipeline-operator-reference>`. Each stage transforms the documents as they pass through the pipeline. Pipeline stages do not need to produce one output document for every input document; e.g., some stages may generate new documents or filter out documents. Pipeline stages can appear multiple times in the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:40
# 683ff5d3aaa64ccf9838277b9ea12e4c
msgid "MongoDB provides the :method:`db.collection.aggregate()` method in the :program:`mongo` shell and the :dbcommand:`aggregate` command for aggregation pipeline. See :ref:`aggregation-pipeline-operator-reference` for the available stages."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:45
# ee4cbf9e7dfc430d80651453967aaffa
msgid "For example usage of the aggregation pipeline, consider :doc:`/tutorial/aggregation-with-user-preference-data` and :doc:`/tutorial/aggregation-zip-code-data-set`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:52
# 4547cb2eabad4697a9d90b8eece9153f
msgid "Pipeline Expressions"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:54
# 74e91089e72046c29bfd93b5f89c9c1b
msgid "Some pipeline stages takes a pipeline expression as its operand. Pipeline expressions specify the transformation to apply to the input documents. Expressions have a :doc:`document </core/document>` structure and can contain other :ref:`expression <aggregation-expressions>`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:60
# 3ad60b52b908497981fc40cbaa2e2eb6
msgid "Pipeline expressions can only operate on the current document in the pipeline and cannot refer to data from other documents: expression operations provide in-memory transformation of documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:64
# 2e5f658e2a06477ebc5254da93bc7ae9
msgid "Generally, expressions are stateless and are only evaluated when seen by the aggregation process with one exception: :ref:`accumulator <aggregation-accumulator-operators>` expressions."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:68
# ab365189ffc54e18ab5fcdf03827c8b9
msgid "The accumulators, used in the :pipeline:`$group` stage, maintain their state (e.g. totals, maximums, minimums, and related data) as documents progress through the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:74
# 0f107c0f73e04628bc25f45decbbc91e
msgid "Some accumulators are available in the :pipeline:`$project` stage; however, when used in the :pipeline:`$project` stage, the accumulators do not maintain their state across documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:78
# 1dd1ba88bd754c05972e3a121090f5d8
msgid "For more information on expressions, see :ref:`aggregation-expressions`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:84
# 45b4e649f700448e8a75ed23077b0b37
msgid "Aggregation Pipeline Behavior"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:86
# be856a3a2b4548a3acfc017500afa45d
msgid "In MongoDB, the :dbcommand:`aggregate` command operates on a single collection, logically passing the *entire* collection into the aggregation pipeline. To optimize the operation, wherever possible, use the following strategies to avoid scanning the entire collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:94
# 54c97dbd39ea4f7499c29018648e29cf
msgid "Pipeline Operators and Indexes"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:96
# 22eae46c59e04f399f0629ece984f6ec
msgid "The :pipeline:`$match` and :pipeline:`$sort` pipeline operators can take advantage of an index when they occur at the **beginning** of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:100
# 825d02d995284b88a6b14d2515481e58
msgid "The :pipeline:`$geoNear` pipeline operator takes advantage of a geospatial index. When using :pipeline:`$geoNear`, the :pipeline:`$geoNear` pipeline operation must appear as the first stage in an aggregation pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:108
# a79b1dd922c2492fa1fac83d01c0ff05
msgid "Starting in MongoDB 3.2, indexes can :ref:`cover <read-operations-covered-query>` an aggregation pipeline. In MongoDB 2.6 and 3.0, indexes could not cover an aggregation pipeline since even when the pipeline uses an index, aggregation still requires access to the actual documents."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:115
# 9546eef35e4a4033acb4a047c765793a
msgid "Early Filtering"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:117
# 34937303b9a94b33b61e805b76f7eec3
msgid "If your aggregation operation requires only a subset of the data in a collection, use the :pipeline:`$match`, :pipeline:`$limit`, and :pipeline:`$skip` stages to restrict the documents that enter at the beginning of the pipeline. When placed at the beginning of a pipeline, :pipeline:`$match` operations use suitable indexes to scan only the matching documents in a collection."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:124
# 129513cb3b9a4d47bda38e8c8e477a47
msgid "Placing a :pipeline:`$match` pipeline stage followed by a :pipeline:`$sort` stage at the start of the pipeline is logically equivalent to a single query with a sort and can use an index. When possible, place :pipeline:`$match` operators at the beginning of the pipeline."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:131
# da48a8519ad34e08bb484c4c793c6f34
msgid "Additional Features"
msgstr ""

#: ../source/core/aggregation-pipeline.txt:133
# c532d364d57e444fa7e9d7d3eeb4298c
msgid "The aggregation pipeline has an internal optimization phase that provides improved performance for certain sequences of operators. For details, see :doc:`/core/aggregation-pipeline-optimization`."
msgstr ""

#: ../source/core/aggregation-pipeline.txt:137
# 040b69d6b42942f0af2cbc7390802852
msgid "The aggregation pipeline supports operations on sharded collections. See :ref:`aggregation-pipeline-sharded-collection`."
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:4
# eab9852f900c43f58e54b08b3d5d5acc
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:6
# 0212c0e78adf4296a2a77c2d99af5d94
msgid "`MongoDB Analytics: Learn Aggregation by Example: Exploratory Analytics and Visualization Using Flight Data <http://www.mongodb.com/presentations/mongodb-analytics-learn-aggregation-example-exploratory-analytics-and-visualization?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:7
# 440f1d8dc5db48feb56f19a41cf2b094
msgid "`MongoDB for Time Series Data: Analyzing Time Series Data Using the Aggregation Framework and Hadoop <http://www.mongodb.com/presentations/mongodb-time-series-data-part-2-analyzing-time-series-data-using-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:8
# 001b41a3d1b8469e83a45f98c36ff8a4
msgid "`The Aggregation Framework <https://www.mongodb.com/presentations/aggregation-framework-0?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:9
# 584b164ae5264b5d933e6d89e18275f6
msgid "`Webinar: Exploring the Aggregation Framework <https://www.mongodb.com/webinar/exploring-the-aggregation-framework?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-aggregation.rst:10
# e65579bebb9746afb7e76842c083037f
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

