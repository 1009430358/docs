# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-architectures.txt:6
# 5f2c4cacd7c04f9ba9c8dc53083726d3
msgid "Replica Set Deployment Architectures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:10
# 58c3aa56bcfb4d5bb34f1db4f807849f
msgid "The architecture of a :term:`replica set <replica set>` affects the set's capacity and capability. This document provides strategies for replica set deployments and describes common architectures."
msgstr ""

#: ../source/core/replica-set-architectures.txt:14
# dfee35bbc92c4e568ffd8ab2303c5068
msgid "The standard replica set deployment for production system is a three-member replica set. These sets provide redundancy and fault tolerance. Avoid complexity when possible, but let your application requirements dictate the architecture."
msgstr ""

#: ../source/core/replica-set-architectures.txt:20
# 56ad6567cc6941f2b419b0501b58b2b7
msgid "Strategies"
msgstr ""

#: ../source/core/replica-set-architectures.txt:23
# 3a9b653710c14cbeb1d0af6997477cc8
msgid "Determine the Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:25
# d82c517251514a76ac421f15cd4913ec
msgid "Add members in a replica set according to these strategies."
msgstr ""

#: ../source/core/replica-set-architectures.txt:28
# f7a2f90329d44fc2aaee4bd2e045c00f
msgid "Deploy an Odd Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:30
# a75baccdc3284b12a9d4e4ee7dcb0996
msgid "An odd number of members ensures that the replica set is always able to elect a primary. If you have an even number of members, add an arbiter to get an odd number. :term:`Arbiters <arbiter>` do not store a copy of the data and require fewer resources. As a result, you may run an arbiter on an application server or other shared process."
msgstr ""

#: ../source/core/replica-set-architectures.txt:39
# e75a390a48fa4d5188b525e230f59b0e
msgid "Consider Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:41
# d5368ded05b34b0f9eca83a4bb88a903
msgid "*Fault tolerance* for a replica set is the number of members that can become unavailable and still leave enough members in the set to elect a primary. In other words, it is the difference between the number of members in the set and the majority needed to elect a primary. Without a primary, a replica set cannot accept write operations. Fault tolerance is an effect of replica set size, but the relationship is not direct. See the following table:"
msgstr ""

#: ../source/core/replica-set-architectures.txt:53
# 711ee8efb5394c85915c26483dbefe95
msgid "Number of Members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:55
# 7e2c000a786b4c1eaaac30c98481b6dd
msgid "Majority Required to Elect a New Primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:57
# e31e7f0fb343472ab49dcce7f1c1bc8a
msgid "Fault Tolerance."
msgstr ""

#: ../source/core/replica-set-architectures.txt:59
#: ../source/core/replica-set-architectures.txt:67
#: ../source/core/replica-set-architectures.txt:73
# bbe4008d073748cb89a9547f72807a16
# d3b6fa4195464d7dad883734ef835a78
# 3f81f168b4d34f58ac89751c44b97535
msgid "3"
msgstr ""

#: ../source/core/replica-set-architectures.txt:61
#: ../source/core/replica-set-architectures.txt:75
#: ../source/core/replica-set-architectures.txt:81
# a4c4ba6f74da479db81cc1673b3e8617
# 660079e9390946ceb9a25b4eb13df923
# 1a970e9059bc4cbe858a73b0ab7f7dc3
msgid "2"
msgstr ""

#: ../source/core/replica-set-architectures.txt:63
#: ../source/core/replica-set-architectures.txt:69
# 48aeb4b68c06442ab9856cc963b1c4b2
# 9907f8391fbf4e93800d775a29eb9036
msgid "1"
msgstr ""

#: ../source/core/replica-set-architectures.txt:65
#: ../source/core/replica-set-architectures.txt:79
# 8b71f52ea0204b88be5470478014e655
# 9b676ad16cbb4ba9b703347e28f97cbc
msgid "4"
msgstr ""

#: ../source/core/replica-set-architectures.txt:71
# 71d76ca93ec743d095a89c48cd50391b
msgid "5"
msgstr ""

#: ../source/core/replica-set-architectures.txt:77
# c7c256c8cc80401f97f683d35a8563dd
msgid "6"
msgstr ""

#: ../source/core/replica-set-architectures.txt:83
# ab00619a24d1404f85ad7b7dba7795c5
msgid "Adding a member to the replica set does not *always* increase the fault tolerance. However, in these cases, additional members can provide support for dedicated functions, such as backups or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:88
# 4ffaf6d29b6f4a22b86c6422ce9e9c0d
msgid "Use Hidden and Delayed Members for Dedicated Functions"
msgstr ""

#: ../source/core/replica-set-architectures.txt:90
# adeb9587e2794eaca55f06c45cae388a
msgid "Add :ref:`hidden <replica-set-hidden-members>` or :ref:`delayed <replica-set-delayed-members>` members to support dedicated functions, such as backup or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:95
# 14120eddf81c45f792b491dcf07a67a3
msgid "Load Balance on Read-Heavy Deployments"
msgstr ""

#: ../source/core/replica-set-architectures.txt:97
# 6f2f5902b2264a80849d499c0b5e84fc
msgid "In a deployment with *very* high read traffic, you can improve read throughput by distributing reads to secondary members. As your deployment grows, add or move members to alternate data centers to improve redundancy and availability."
msgstr ""

#: ../source/core/replica-set-architectures.txt:102
# d92d0e1420154073ad9aa2c3ddad2d36
msgid "Always ensure that the main facility is able to elect a primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:105
# e0ca57438caa48d8b34c6560754710a1
msgid "Add Capacity Ahead of Demand"
msgstr ""

#: ../source/core/replica-set-architectures.txt:107
# 0f5f9981341b4293a79f94668a8fddb2
msgid "The existing members of a replica set must have spare capacity to support adding a new member. Always add new members before the current demand saturates the capacity of the set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:114
# c61dc72bc6db4f90977c4c73ad62ac12
msgid "Determine the Distribution of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:117
# 2c5a4aaf66e6475d9dd70a42c5b9b380
msgid "Distribute Members Geographically"
msgstr ""

#: ../source/core/replica-set-architectures.txt:119
# bd7f4e8a40a74f5c8c4fc0f1a3ce997f
msgid "To protect your data if your main data center fails, keep at least one member in an alternate data center. Set these members' :data:`~replSetGetConfig.members[n].priority` to 0 to prevent them from becoming primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:125
# 603e11ee9cbc4261a6cd79f0a650f5f2
msgid "Keep a Majority of Members in One Location"
msgstr ""

#: ../source/core/replica-set-architectures.txt:127
# 0c0d6de50bc346e9a953715070e7dc89
msgid "When a replica set has members in multiple data centers, network partitions can prevent communication between data centers. To replicate data, members must be able to communicate to other members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:131
# 3de74e0997914f16b014069fffb9cf18
msgid "In an election, members must see each other to create a majority. To ensure that the replica set members can confirm a majority and elect a primary, keep a majority of the setâ€™s members in one location."
msgstr ""

#: ../source/core/replica-set-architectures.txt:137
# 28ea4aac4b9a4c16bd15823f722460ba
msgid "Target Operations with Tag Sets"
msgstr ""

#: ../source/core/replica-set-architectures.txt:139
# 4d486c5cbe2b4a72965396229d3e354c
msgid "Use :ref:`replica set tag sets <replica-set-configuration-tag-sets>` to ensure that operations replicate to specific data centers. Tag sets also allow the routing of read operations to specific machines."
msgstr ""

#: ../source/core/replica-set-architectures.txt:143
# 6e9937f0b3184132ba988b8637c4b66f
msgid ":doc:`/data-center-awareness` and :doc:`/core/operational-segregation`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:147
# e7362aa796084b698c42c25a7f9dec45
msgid "Use Journaling to Protect Against Power Failures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:149
# 763d1c16f4c945e7b858e473a2d7b52b
msgid "Enable journaling to protect data against service interruptions. Without journaling MongoDB cannot recover data after unexpected shutdowns, including power failures and unexpected reboots."
msgstr ""

#: ../source/core/replica-set-architectures.txt:153
# 5b05b5bf7f174647811546b47b3c0588
msgid "All 64-bit versions of MongoDB after version 2.0 have journaling enabled by default."
msgstr ""

#: ../source/core/replica-set-architectures.txt:157
# 8bf0dcee8fc54973a3c6a7b4dcda4275
msgid "Replica Set Naming"
msgstr ""

#: ../source/includes/fact-unique-replica-set-names.rst:1
# f9e8e98009eb40f8ab8d712908e5a222
msgid "If your application connects to more than one replica set, each set should have a distinct name. Some drivers group replica set connections by replica set name."
msgstr ""

#: ../source/core/replica-set-architectures.txt:162
# d9ae42ab43314e2592364870f6fa0c7b
msgid "Deployment Patterns"
msgstr ""

#: ../source/core/replica-set-architectures.txt:164
# 387c0b8eb0f847d8bc00736bc57dd2de
msgid "The following documents describe common replica set deployment patterns. Other patterns are possible and effective depending on the application's requirements. If needed, combine features of each architecture in your own deployment:"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:5
# ff23203e0ba744ae8266a258ea206a8a
msgid ":doc:`/core/replica-set-architecture-three-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:4
# 61775589547e48bdad83c483cb8ee6a6
msgid "Three-member replica sets provide the minimum recommended architecture for a replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:10
# c04307a9830d4c959d9475d2318ec432
msgid ":doc:`/core/replica-set-architecture-four-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:8
# 3f32a0254a0d42959babf8bf9cba326e
msgid "Four or more member replica sets provide greater redundancy and can support greater distribution of read operations and dedicated functionality."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:14
# fff53f30cb84459da101b73bd26177cc
msgid ":doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:13
# 41d2aa62778140bc9e4d79c6bc9574a0
msgid "Geographically distributed sets include members in multiple locations to protect against facility-specific failures, such as power outages."
msgstr ""

