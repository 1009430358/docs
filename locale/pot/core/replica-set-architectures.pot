# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-architectures.txt:6
# dc8dab003d0e462dba6f3dc817b1f387
msgid "Replica Set Deployment Architectures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:0
# 20d51a910b6b4a50bfaab2726c0b4fea
msgid "On this page"
msgstr ""

#: ../source/core/replica-set-architectures.txt:16
# 2aea8b12a4cf418096be32321d7c7a9a
msgid "The architecture of a :term:`replica set <replica set>` affects the set's capacity and capability. This document provides strategies for replica set deployments and describes common architectures."
msgstr ""

#: ../source/core/replica-set-architectures.txt:20
# e610760d17004c72a549346b12491aa9
msgid "The standard replica set deployment for production system is a three-member replica set. These sets provide redundancy and fault tolerance. Avoid complexity when possible, but let your application requirements dictate the architecture."
msgstr ""

#: ../source/core/replica-set-architectures.txt:26
# 291ac4678d6a4fc998292a52df3ea329
msgid "Strategies"
msgstr ""

#: ../source/core/replica-set-architectures.txt:29
# f1c7db7a7c5c4ddab8f2d3deb7ed6d91
msgid "Determine the Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:31
# bb4179f5f69945799f957a68d6df940e
msgid "Add members in a replica set according to these strategies."
msgstr ""

#: ../source/core/replica-set-architectures.txt:34
# d781b103dbb84dbbbc417302a5e6ad77
msgid "Maximum Number of Voting Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:36
# f63e71e865b547a2b0b353e1a3968c5b
msgid "A replica set can have up to :limit:`50 members <Number of Members of a Replica Set>`, but only :limit:`7 voting members <Number of Voting Members of a Replica Set>`. [#master-slave]_ If the replica set already has 7 voting members, additional members must be :ref:`non-voting members <replica-set-non-voting-members>`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:44
# 61d09c4cca9049bd8ee24349d796bcbd
msgid "Deploy an Odd Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:46
# 982915eb26e14f25b523fff324ab0020
msgid "Ensure that the replica set has an odd number of voting members. If you have an *even* number of voting members, deploy an :ref:`arbiter <replica-set-arbiters>` so that the set has an odd number of voting members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:51
# bc01d5bae8ae433c97818c574fab4235
msgid "An :term:`arbiter <arbiter>` does not store a copy of the data and requires fewer resources. As a result, you may run an arbiter on an application server or other shared process. With no copy of the data, it may be possible to place an arbiter into environments that you would not place other members of the replica set. Consult your security policies."
msgstr ""

#: ../source/core/replica-set-architectures.txt:60
# ed6f10d0da154fad896e445ee1948a15
msgid "In general, avoid deploying more than one arbiter per replica set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:65
# 9c0b0373b4d746e3b3494d8de2478706
msgid "Consider Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:67
# 39fc44333d1c46ff95f306a480b49a8e
msgid "*Fault tolerance* for a replica set is the number of members that can become unavailable and still leave enough members in the set to elect a primary. In other words, it is the difference between the number of members in the set and the majority of voting members needed to elect a primary. Without a primary, a replica set cannot accept write operations. Fault tolerance is an effect of replica set size, but the relationship is not direct. See the following table:"
msgstr ""

#: ../source/core/replica-set-architectures.txt:79
# 77443bb37fbe4d6882f1ea25a2339ba0
msgid "Number of Members"
msgstr ""

#: ../source/core/replica-set-architectures.txt:81
# e27b62ba30254308a01efa3b97b9cdad
msgid "Majority Required to Elect a New Primary"
msgstr ""

#: ../source/core/replica-set-architectures.txt:83
# 9d9b5f89ce394fdea4c515f28ec66e2a
msgid "Fault Tolerance"
msgstr ""

#: ../source/core/replica-set-architectures.txt:85
#: ../source/core/replica-set-architectures.txt:93
#: ../source/core/replica-set-architectures.txt:99
# c1f6d4908f0e43749feb7be13ead3eee
# f2ad9170426f43e8bb4df7f33e54211e
# 9913964e19a741759dc07654616e9e6c
msgid "3"
msgstr ""

#: ../source/core/replica-set-architectures.txt:87
#: ../source/core/replica-set-architectures.txt:101
#: ../source/core/replica-set-architectures.txt:107
# e4e5e89635334ccbae6877a712ff1b54
# 0474e4ade8874fe5bcbdb5acee23cc30
# d319bf595db142b3a0ac69ef0b50d383
msgid "2"
msgstr ""

#: ../source/core/replica-set-architectures.txt:89
#: ../source/core/replica-set-architectures.txt:95
# bbbde2cc71124905bb81dddca7c08e7c
# 8568546c764b4362b6a4727c3f75e32a
msgid "1"
msgstr ""

#: ../source/core/replica-set-architectures.txt:91
#: ../source/core/replica-set-architectures.txt:105
# 37e08946e437417b9e2f10172478883e
# f93009b4b2f341cc9a2f30a69d758e05
msgid "4"
msgstr ""

#: ../source/core/replica-set-architectures.txt:97
# 69834111a9f84d40bb23d273125da111
msgid "5"
msgstr ""

#: ../source/core/replica-set-architectures.txt:103
# a432412647ff4945a151bf0b292b1fee
msgid "6"
msgstr ""

#: ../source/core/replica-set-architectures.txt:109
# 44f4ef581215436ca8a8b7b406756cf9
msgid "Adding a member to the replica set does not *always* increase the fault tolerance. However, in these cases, additional members can provide support for dedicated functions, such as backups or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:114
# 5b7230bbf4554159a8e7861ba17b9167
msgid "Use Hidden and Delayed Members for Dedicated Functions"
msgstr ""

#: ../source/core/replica-set-architectures.txt:116
# 141b0c9dd1fa44e2968990c253d0319f
msgid "Add :ref:`hidden <replica-set-hidden-members>` or :ref:`delayed <replica-set-delayed-members>` members to support dedicated functions, such as backup or reporting."
msgstr ""

#: ../source/core/replica-set-architectures.txt:121
# 7cca58cd48e74776ac0046207c553175
msgid "Load Balance on Read-Heavy Deployments"
msgstr ""

#: ../source/core/replica-set-architectures.txt:123
# 8099deab318d4c24afb28bee74e53d37
msgid "In a deployment with *very* high read traffic, you can improve read throughput by distributing reads to secondary members. As your deployment grows, add or move members to alternate data centers to improve redundancy and availability."
msgstr ""

#: ../source/core/replica-set-architectures.txt:128
# 3a0c18bf23614825ba7ba6bcbb39ddea
msgid "Always ensure that the main facility is able to elect a primary."
msgstr ""

#: ../source/core/replica-set-architectures.txt:131
# a4f7d09f53834b90befe9e2d38cac00d
msgid "Add Capacity Ahead of Demand"
msgstr ""

#: ../source/core/replica-set-architectures.txt:133
# d4f6da8ddd4a4377be90240303235b15
msgid "The existing members of a replica set must have spare capacity to support adding a new member. Always add new members before the current demand saturates the capacity of the set."
msgstr ""

#: ../source/core/replica-set-architectures.txt:140
# e1e23e4de30c4dbeb6ed89e362a1dac0
msgid "Distribute Members Geographically"
msgstr ""

#: ../source/core/replica-set-architectures.txt:142
# af16ec95dec04e439b157a61046fea8a
msgid "To protect your data in case of a data center failure, keep at least one member in an alternate data center. If possible, use an odd number of data centers, and choose a distribution of members that maximizes the likelihood that even with a loss of a data center, the remaining replica set members can form a majority or at minimum, provide a copy of your data."
msgstr ""

#: ../source/core/replica-set-architectures.txt:149
# be686b967c7c46c892bc0ee6af1229c7
msgid "To ensure that the members in your main data center be elected primary before the members in the alternate data center, set the :rsconf:`members[n].priority` of the members in the alternate data center to be lower than that of the members in the primary data center."
msgstr ""

#: ../source/core/replica-set-architectures.txt:154
# 477c46da726640f5a0045719a392719d
msgid "For more information, see :doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/core/replica-set-architectures.txt:158
# 4650cd0823904ce9b8573f11081ea644
msgid "Target Operations with Tag Sets"
msgstr ""

#: ../source/core/replica-set-architectures.txt:160
# 8a69e623ad5e4d26946fc40bf3ce24f2
msgid "Use :ref:`replica set tag sets <replica-set-configuration-tag-sets>` to target read operations to specific members or to customize write concern to request acknowledgement from specific members."
msgstr ""

#: ../source/core/replica-set-architectures.txt:164
# 99fc91fc6dfd42069dfb5a9bbffdd06f
msgid ":doc:`/data-center-awareness` and :doc:`/core/operational-segregation`."
msgstr ""

#: ../source/core/replica-set-architectures.txt:168
# c092ac630366476f8a4a1bf578f0a05e
msgid "Use Journaling to Protect Against Power Failures"
msgstr ""

#: ../source/core/replica-set-architectures.txt:170
# 38ec6af220aa47d4965038e349650ad0
msgid "MongoDB enables :doc:`journaling </core/journaling>` by default. Journaling protects against data loss in the event of service interruptions, such as power failures and unexpected reboots."
msgstr ""

#: ../source/core/replica-set-architectures.txt:175
# 269d72e54d334329a24aa518e6aabb02
msgid "Replica Set Naming"
msgstr ""

#: ../source/includes/fact-unique-replica-set-names.rst:1
# 6a63c36687124066a0f51a981255163e
msgid "If your application connects to more than one replica set, each set should have a distinct name. Some drivers group replica set connections by replica set name."
msgstr ""

#: ../source/core/replica-set-architectures.txt:180
# 56077ec7502b432ea0a3a1a2f1935aad
msgid "Deployment Patterns"
msgstr ""

#: ../source/core/replica-set-architectures.txt:182
# 6b8411fd6799446db5d222223a90c626
msgid "The following documents describe common replica set deployment patterns. Other patterns are possible and effective depending on the application's requirements. If needed, combine features of each architecture in your own deployment:"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:5
# 09c54d66e8784630a021259076b99003
msgid ":doc:`/core/replica-set-architecture-three-members`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:4
# c1fab87eec004e46b6eb61a34f461945
msgid "Three-member replica sets provide the minimum recommended architecture for a replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:9
# b0059104de8f4e06939a7a969297795d
msgid ":doc:`/core/replica-set-architecture-geographically-distributed`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-architectures.rst:8
# 271e519222e34bad991d748ff49b9aa4
msgid "Geographically distributed sets include members in multiple locations to protect against facility-specific failures, such as power outages."
msgstr ""

#: ../source/includes/fact-master-slave-workaround.rst:1
# dea6491eb9a04eeeb10ba38777eeda09
msgid "While replica sets are the recommended solution for production, a replica set can support up to :limit:`50 members <Number of Members of a Replica Set>` in total. If your deployment requires more than 50 members, you’ll need to use :doc:`master-slave </core/master-slave>` replication. However, master-slave replication lacks the automatic failover capabilities."
msgstr ""

