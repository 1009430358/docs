# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-rollbacks.txt:10
# 247806406f4242d1abd1e8c9f2abdddf
msgid "Rollbacks During Replica Set Failover"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:0
# 9256c8c3ca794cdd8beab666062b6d2f
msgid "On this page"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:20
# 2b456383e2a345809a9500d58cbab58f
msgid "A rollback reverts write operations on a former :term:`primary` when the member rejoins its :term:`replica set` after a :term:`failover`. A rollback is necessary only if the primary had accepted write operations that the :term:`secondaries <secondary>` had **not** successfully replicated before the primary stepped down. When the primary rejoins the set as a secondary, it reverts, or \"rolls back,\" its write operations to maintain database consistency with the other members."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:29
# 1a3a500a72aa43f3968b1edca93c3d0a
msgid "MongoDB attempts to avoid rollbacks, which should be rare. When a rollback does occur, it is often the result of a network partition. Secondaries that can not keep up with the throughput of operations on the former primary, increase the size and impact of the rollback."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:35
# 46d5829b3b8642078b27e6cd23a1f96b
msgid "A rollback does *not* occur if the write operations replicate to another member of the replica set before the primary steps down *and* if that member remains available and accessible to a majority of the replica set."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:41
# 8b94c59b265f4cd09fa8ff67bab1b42a
msgid "Collect Rollback Data"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:43
# 20fb8c9a95ad486aa737f056f95a3595
msgid "When a rollback does occur, MongoDB writes the rollback data to :term:`BSON` files in the ``rollback/`` folder under the database's :setting:`~storage.dbPath` directory. The names of rollback files have the following form:"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:52
# 924b9bfd2e1045b99bbf094074ff7f93
msgid "For example:"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:58
# 1969030c30844140bece71fa1bb4892f
msgid "To read the contents of the rollback files, use :doc:`bsondump </reference/program/bsondump>`. Based on the content and the knowledge of their applications, administrators can decide the next course of action to take."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:64
# 264100e6696f4a7a96cea64213845924
msgid "Avoid Replica Set Rollbacks"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:66
# d9e0718d2bb5485ab7fdc74711924d2c
msgid "For replica sets, the default :doc:`write concern {w: 1} </reference/write-concern>` only provides acknowledgement of write operations on the primary. With the default write concern, data may be rolled back if the primary steps down before the write operations have replicated to any of the secondaries."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:72
# 9230754c35e145da9bd5317229606f71
msgid "To prevent rollbacks of data that have been acknowledged to the client, use :ref:`w: majority write concern <wc-w>` to guarantee that the write operations propagate to a majority of the replica set nodes before returning with acknowledgement to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:1
# ce60c89a0f454d2188ec9e104b4ad370
msgid "Regardless of :doc:`write concern </reference/write-concern>`, other clients using :readconcern:`\"local\"` (i.e. the default) readConcern can see the result of a write operation before the write operation is acknowledged to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:6
# bad75a4944e54214a9a439aac60d5d80
msgid "Clients using :readconcern:`\"local\"` (i.e. the default) readConcern can read data which may be subsequently :doc:`rolled back </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:83
# e6c1a0a822864156b57f7249e2d9f435
msgid "Rollback Limitations"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:85
# 56c73bb7bc6f47b8b9487f7f9f5d41ab
msgid "A :program:`mongod` instance will not rollback more than 300 megabytes of data. If your system must rollback more than 300 megabytes, you must manually intervene to recover the data. If this is the case, the following line will appear in your :program:`mongod` log:"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:95
# f8058e4765dc486994b92fbb84e2e4cf
msgid "In this situation, save the data directly or force the member to perform an initial sync. To force initial sync, sync from a \"current\" member of the set by deleting the content of the :setting:`~storage.dbPath` directory for the member that requires a larger rollback."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:100
# 476eb800d6764650a3a9e18180c6d7e1
msgid ":doc:`/core/replica-set-high-availability` and :doc:`/core/replica-set-elections`."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:1
#: ../source/core/replica-set-rollbacks.txt:1
#: ../source/core/replica-set-rollbacks.txt:1
# 62649aeed84c431882667172b8cb3777
# 62649aeed84c431882667172b8cb3777
# 62649aeed84c431882667172b8cb3777
msgid "rollbacks"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:1
# 62649aeed84c431882667172b8cb3777
msgid "replica set"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:1
# 62649aeed84c431882667172b8cb3777
msgid "consistency"
msgstr ""

