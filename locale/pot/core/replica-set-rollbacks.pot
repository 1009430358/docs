# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-rollbacks.txt:10
# 069d50cf7e034d1bbcf549877d174029
msgid "Rollbacks During Replica Set Failover"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:14
# 3fa72d99c06541ba8b6e23499808edf4
msgid "A rollback reverts write operations on a former :term:`primary` when the member rejoins its :term:`replica set` after a :term:`failover`. A rollback is necessary only if the primary had accepted write operations that the :term:`secondaries <secondary>` had **not** successfully replicated before the primary stepped down. When the primary rejoins the set as a secondary, it reverts, or \"rolls back,\" its write operations to maintain database consistency with the other members."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:23
# 5af83a94b1444e8f825048fe71babd34
msgid "MongoDB attempts to avoid rollbacks, which should be rare. When a rollback does occur, it is often the result of a network partition. Secondaries that can not keep up with the throughput of operations on the former primary, increase the size and impact of the rollback."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:29
# 237cb7a6d0f944e9a30e54e20af5e16d
msgid "A rollback does *not* occur if the write operations replicate to another member of the replica set before the primary steps down *and* if that member remains available and accessible to a majority of the replica set."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:35
# 7c54321bf9eb4a998b3a7bd175afcf00
msgid "Collect Rollback Data"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:37
# a781425aad104687ab119b65d38d5fde
msgid "When a rollback does occur, administrators must decide whether to apply or ignore the rollback data. MongoDB writes the rollback data to :term:`BSON` files in the ``rollback/`` folder under the database's :setting:`~storage.dbPath` directory.  The names of rollback files have the following form:"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:47
# 8f22cd428bf3451ca5b00dec2a6268dd
msgid "For example:"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:53
# 922f002d036d4e468eee534bdd5dcb36
msgid "Administrators must apply rollback data manually after the member completes the rollback and returns to secondary status. Use :doc:`bsondump </reference/program/bsondump>` to read the contents of the rollback files. Then use :program:`mongorestore` to apply the changes to the new primary."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:60
# 49a9a22afd814f43babfee2c26fcdfaa
msgid "Avoid Replica Set Rollbacks"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:62
# 688330ce067c4a639149d74ebf52b8cc
msgid "For replica sets, the default :doc:`write concern {w: 1} </reference/write-concern>` only provides acknowledgement of write operations on the primary. With the default write concern, data may be rolled back if the primary steps down before the write operations have replicated to any of the secondaries."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:68
# 9c8ebc46b1134781baef07216ca03d07
msgid "To prevent rollbacks of data that have been acknowledged to the client, use :ref:`w: majority write concern <wc-w>` to guarantee that the write operations propagate to a majority of the replica set nodes before returning with acknowledgement to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:1
# 8fde631da1404057b66246941a13c359
msgid "Regardless of :doc:`write concern </reference/write-concern>`, other clients can see the result of the write operations before the write operation is acknowledged to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:5
# 477838c5d7ee4df0b25ccea527d65f00
msgid "Clients can read data which may be subsequently :doc:`rolled back </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:79
# 464b0d9f16764d079185cd077e6bea15
msgid "Rollback Limitations"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:81
# ea9e180106b148ef8d12a418919f67b9
msgid "A :program:`mongod` instance will not rollback more than 300 megabytes of data. If your system must rollback more than 300 megabytes, you must manually intervene to recover the data. If this is the case, the following line will appear in your :program:`mongod` log:"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:91
# 0713bf9616574b63ba7bf29f4e7c67fc
msgid "In this situation, save the data directly or force the member to perform an initial sync. To force initial sync, sync from a \"current\" member of the set by deleting the content of the :setting:`~storage.dbPath` directory for the member that requires a larger rollback."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:96
# b276426bd6e7407a99449c24b23fe401
msgid ":doc:`/core/replica-set-high-availability` and :doc:`/core/replica-set-elections`."
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:1
#: ../source/core/replica-set-rollbacks.txt:1
#: ../source/core/replica-set-rollbacks.txt:1
# d34765ffabe841288d5f4ff0f28727d1
# d34765ffabe841288d5f4ff0f28727d1
# d34765ffabe841288d5f4ff0f28727d1
msgid "rollbacks"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:1
# d34765ffabe841288d5f4ff0f28727d1
msgid "replica set"
msgstr ""

#: ../source/core/replica-set-rollbacks.txt:1
# d34765ffabe841288d5f4ff0f28727d1
msgid "consistency"
msgstr ""

