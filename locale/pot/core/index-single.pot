# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-single.txt:3
# b957483b827b40b0ab7c9e3642938000
msgid "Single Field Indexes"
msgstr ""

#: ../source/core/index-single.txt:0
# 0b491aed788e4443a5f346dd6cfdbb72
msgid "On this page"
msgstr ""

#: ../source/core/index-single.txt:13
# 2dc2b38c942e447b88de90375711bbde
msgid "MongoDB provides complete support for indexes on any field in a :term:`collection` of :term:`documents <document>`. By default, all collections have an index on the :ref:`_id field <index-type-id>`, and applications and users may add additional indexes to support important queries and operations."
msgstr ""

#: ../source/core/index-single.txt:19
# abef84e5cf454fe9bd14f945bdc0538a
msgid "This document describes ascending/descending indexes on a single field."
msgstr ""

#: ../source/core/index-single.txt:24
# fdfe2a07c9d04e3fb23972b6f61169e0
msgid "Create an Ascending Index on a Single Field"
msgstr ""

#: ../source/core/index-single.txt:26
#: ../source/core/index-single.txt:70
#: ../source/core/index-single.txt:101
# 9767d22bb82f407a99df9def179ec310
# a40a133d6f6d4c00bcb5f3059fcdaba4
# 11ba4879599c46879aee15102a578fe1
msgid "Consider a collection named ``records`` that holds documents that resemble the following sample document:"
msgstr ""

#: ../source/core/index-single.txt:37
# 650540a957ef4b53bfea04f56c8fd505
msgid "The following operation creates an ascending index on the ``score`` field of the ``records`` collection:"
msgstr ""

#: ../source/includes/fact-index-specification-field-value.rst:1
# 2511f9eca5d64c1b92761b9d335c2d1c
msgid "The value of the field in the index specification describes the kind of index for that field. For example, a value of ``1`` specifies an index that orders items in ascending order. A value of ``-1`` specifies an index that orders items in descending order. For additional index types, see :ref:`index types <index-types>`."
msgstr ""

#: ../source/core/index-single.txt:46
# 56206afced1c46499c51afd74d673cd1
msgid "The created index will support queries that select on the field ``score``, such as the following:"
msgstr ""

#: ../source/core/index-single.txt:60
# 8d87476ca12c46a3b3b976b094a14d91
msgid "Create an Index on an Embedded Field"
msgstr ""

#: ../source/core/index-single.txt:62
# e9aaebb9b6d84214b13321c728dc4095
msgid "You can create indexes on fields within embedded documents, just as you can index top-level fields in documents. Indexes on embedded fields differ from :ref:`indexes on embedded documents <index-embedded-documents>`, which include the full content up to the maximum :limit:`index size <Index Key>` of the embedded document in the index. Instead, indexes on embedded fields allow you to use a \"dot notation,\" to introspect into embedded documents."
msgstr ""

#: ../source/core/index-single.txt:81
# 42c72cd94d2046afa888bd63d0175fa5
msgid "The following operation creates an index on the ``location.state`` field:"
msgstr ""

#: ../source/core/index-single.txt:88
# 13a6ee2548b34a03b42e263cdea48716
msgid "The created index will support queries that select on the field ``location.state``, such as the following:"
msgstr ""

#: ../source/core/index-single.txt:97
# d103f0e357d142659f1790e0f0a8e7e9
msgid "Create an Index on Embedded Document"
msgstr ""

#: ../source/core/index-single.txt:99
# e57ef881cad349d6a499641f7622551b
msgid "You can also create indexes on embedded document as a whole."
msgstr ""

#: ../source/core/index-single.txt:112
# 773996b388d04dbfb2ff4d91013d679d
msgid "The ``location`` field is an embedded document, containing the embedded fields ``city`` and ``state``. The following command creates an index on the ``location`` field as a whole:"
msgstr ""

#: ../source/core/index-single.txt:120
# 799dc0a578eb4af082fa6ba0ccc5c52f
msgid "The following query can use the index on the ``location`` field:"
msgstr ""

#: ../source/core/index-single.txt:126
# c7c9072b91054b558f92f76887cf7024
msgid "Although the query can use the index, the result set does not include the sample document above. When performing equality matches on embedded documents, field order matters and the embedded documents must match exactly. See :ref:`query-embedded-documents` for more information regarding querying on embedded documents."
msgstr ""

#: ../source/core/index-single.txt:133
# af147ee442684aaa92be20cf742c7324
msgid "Additional Considerations"
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:1
# 4d6c8b98b9d74a49bd96a6e6039b4f1e
msgid "If your collection holds a large amount of data, and your application needs to be able to access the data while building the index, consider building the index in the background, as described in :ref:`index-creation-background`."
msgstr ""

#: ../source/includes/note-build-indexes-on-replica-sets.rst:1
# 259758bedc4f4fcbb6eb27b0a65b917b
msgid "To build or rebuild indexes for a :term:`replica set`, see :ref:`index-building-replica-sets`."
msgstr ""

#: ../source/includes/index-tutorials-considerations.rst:8
# 680a257f23164a46914998be1273042f
msgid "Some drivers may specify indexes, using ``NumberLong(1)`` rather than ``1`` as the specification. This does not have any affect on the resulting index."
msgstr ""

#: ../source/core/index-single.txt:54
# b557f56e2bec4801beafe06b1d0a7884
msgid "index"
msgstr ""

#: ../source/core/index-single.txt:54
# b557f56e2bec4801beafe06b1d0a7884
msgid "embedded fields"
msgstr ""

