# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/document-validation.txt:3
# 5e82efbe1c5b4d0f94dbe8d557481794
msgid "Document Validation"
msgstr ""

#: ../source/core/document-validation.txt:0
# afcfc36108734107a98da669a70bff5e
msgid "On this page"
msgstr ""

#: ../source/core/document-validation.txt:15
# 4c3a18c0d5d54da1a993717d3219e012
msgid "MongoDB provides the capability to validate documents during updates and insertions. Validation rules are specified on a per-collection basis using the ``validator`` option, which takes a document that specifies the validation rules or expressions. Specify the expressions using any :ref:`query operators <query-selectors>`, with the exception of :query:`$near`, :query:`$nearSphere`, :query:`$text`, and :query:`$where`."
msgstr ""

#: ../source/core/document-validation.txt:23
# b7a697a13deb4d9b8eab2af765e43ec6
msgid "Add document validation to an existing collection using the :dbcommand:`collMod` command with the ``validator`` option. You can also specify document validation rules when creating a new collection using :method:`db.createCollection()` with the ``validator`` option, as in the following:"
msgstr ""

#: ../source/core/document-validation.txt:41
# 44c2cf1c4b7542279b69b7bfd8b33896
msgid "MongoDB also provides the ``validationLevel`` option, which determines how strictly MongoDB applies validation rules to existing documents during an update, and the ``validationAction`` option, which determines whether MongoDB should ``error`` and reject documents that violate the validation rules or ``warn`` about the violations in the log but allow invalid documents."
msgstr ""

#: ../source/core/document-validation.txt:49
# 0c1dc0af22834e0bbe64bc4c7ccdb744
msgid "Behavior"
msgstr ""

#: ../source/core/document-validation.txt:51
# 9349f4538a6342799e028d5693eb15b5
msgid "Validation occurs during updates and inserts. When you add validation to a collection, existing documents do not undergo validation checks until modification."
msgstr ""

#: ../source/core/document-validation.txt:56
# 2cbdfea61f8e4161b2303c2ae0eadd5b
msgid "Existing Documents"
msgstr ""

#: ../source/core/document-validation.txt:58
# bef19c6b3d254c7fa00feb40b595b57f
msgid "You can control how MongoDB handles existing documents using the ``validationLevel`` option."
msgstr ""

#: ../source/core/document-validation.txt:61
# 76fce1c5ba49447a9b1d0e39e5ff23cd
msgid "By default, ``validationLevel`` is ``strict`` and MongoDB applies validation rules to all inserts and updates. Setting ``validationLevel`` to ``moderate`` applies validation rules to inserts and to updates to existing documents that fulfill the validation criteria. With the ``moderate`` level, updates to existing documents that do not fulfill the validation criteria are not checked for validity."
msgstr ""

#: ../source/core/document-validation.txt:0
#: ../source/core/document-validation.txt:0
# d79a7b7e86274102817798389d79b016
# 4f9c6a3cde404794b0f0bdc744729024
msgid "Example"
msgstr ""

#: ../source/core/document-validation.txt:70
# c02b2a1447b145f09d9437877b3b36b6
msgid "Consider the following documents in a ``contacts`` collection:"
msgstr ""

#: ../source/core/document-validation.txt:87
# 6a8b3f8a76e045e9936fbc9bb022eb1a
msgid "Issue the following command to add a validator to the ``contacts`` collection:"
msgstr ""

#: ../source/core/document-validation.txt:98
# 7cd88658d52b401b89e101749d246efc
msgid "The ``contacts`` collection now has a validator with the ``moderate`` validationLevel. If you attempted to update the document with ``_id`` of ``125876``, MongoDB would apply validation rules since the existing document matches the criteria. In contrast, MongoDB will not apply validation rules to updates to the document with ``_id`` of ``860000`` as it does not meet the validation rules."
msgstr ""

#: ../source/core/document-validation.txt:106
# 005fd5feae594c03b9b508e6694de331
msgid "To disable validation entirely, you can set ``validationLevel`` to ``off``."
msgstr ""

#: ../source/core/document-validation.txt:110
# 2d9028b2317c421198c30c6b5889d939
msgid "Accept or Reject Invalid Documents"
msgstr ""

#: ../source/core/document-validation.txt:112
# 98794f5027ce4e409e8b3f698314bdb4
msgid "The ``validationAction`` option determines how MongoDB handles documents that violate the validation rules."
msgstr ""

#: ../source/core/document-validation.txt:115
# 3e009e7eded5440ebe6d370a35dfdf43
msgid "By default, ``validationAction`` is ``error`` and MongoDB rejects any insertion or update that violates the validation criteria. When ``validationAction`` is set to ``warn``, MongoDB logs any violations but allows the insertion or update to proceed."
msgstr ""

#: ../source/core/document-validation.txt:122
# 0281d93d8dd84f7a9bfd2c5a76105298
msgid "The following example creates a ``contacts`` collection with a validator that specifies that inserted or updated documents should match at least one of three following conditions:"
msgstr ""

#: ../source/core/document-validation.txt:126
# a4f0393692ac43b38505c496d8c3fbf8
msgid "the ``phone`` field is a string"
msgstr ""

#: ../source/core/document-validation.txt:127
# 868ae8fd863c41e48c43a6884c775f0a
msgid "the ``email`` field matches the regular expression"
msgstr ""

#: ../source/core/document-validation.txt:128
# fce75749c3554e68833420264b421eeb
msgid "the ``status`` field is either ``Unknown`` or ``Incomplete``."
msgstr ""

#: ../source/core/document-validation.txt:145
# b741963027754d75987b8584b8b98478
msgid "With the validator in place, the following insert operation fails the validation rules, but since the ``validationAction`` is ``warn``, the write operation logs the failure and succeeds."
msgstr ""

#: ../source/core/document-validation.txt:154
# a8fba8e3038a4e4a8f4f9d7249cdc184
msgid "The log includes the full namespace of the collection and the document that failed the validation rules, as well as the time of the operation:"
msgstr ""

#: ../source/core/document-validation.txt:163
# 5a9ab5156241499297e2dc14ef1cc331
msgid "Restrictions"
msgstr ""

#: ../source/core/document-validation.txt:165
# cecb01b0a95148d3988ef3174e231a49
msgid "You cannot specify a validator for collections in the ``admin``, ``local``, and ``config`` databases."
msgstr ""

#: ../source/core/document-validation.txt:168
# 0e7b1f6099de4ba58791d22902f82142
msgid "You cannot specify a validator for ``system.*`` collections."
msgstr ""

#: ../source/core/document-validation.txt:171
# ecd325301c24448dbacb12a8d38bca15
msgid "Bypass Document Validation"
msgstr ""

#: ../source/core/document-validation.txt:173
# 89759f22d297421fb4c5975aacc6fe78
msgid "User can bypass document validation using the ``bypassDocumentValidation`` option. For a list of commands that support the ``bypassDocumentValidation`` option, see :ref:`3.2-rel-notes-document-validation`."
msgstr ""

#: ../source/core/document-validation.txt:178
# 0641e7bb35704bc58c95d79e126a604e
msgid "For deployments that have enabled access control, to bypass document validation, the authenticated user must have :authaction:`bypassDocumentValidation` action. The built-in roles :authrole:`dbAdmin` and :authrole:`restore` provide this action."
msgstr ""

#: ../source/core/document-validation.txt:184
# 5348811ff9f6467689e104e1d2af2042
msgid "Additional Information"
msgstr ""

#: ../source/core/document-validation.txt:186
# a45e3ce6b07241099c880b9f457c741b
msgid ":dbcommand:`collMod`, :method:`db.createCollection()`, :method:`db.getCollectionInfos()`."
msgstr ""

