# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authentication.txt:5
# 6b3f406b6f604d2fac145b5e80471a78
msgid "Authentication"
msgstr ""

#: ../source/core/authentication.txt:9
# 0b32768561854fe0a036d35520de6889
msgid "Authentication is the process of verifying the identity of a client. When access control, i.e. :doc:`authorization </core/authorization>`, is enabled, MongoDB requires all clients to authenticate themselves first in order to determine the access for the client."
msgstr ""

#: ../source/core/authentication.txt:14
# 6598ab43fade4701bdfa6e5efea5c284
msgid "Although authentication and :doc:`authorization </core/authorization>` are closely connected, authentication is distinct from authorization. Authentication verifies the identity of a user; authorization determines the verified user's access to resources and operations."
msgstr ""

#: ../source/core/authentication.txt:19
# b9dbcd97a6284713a5be234f945e60df
msgid "MongoDB supports a number of :ref:`authentication mechanisms <security-authentication-mechanisms>` that clients can use to verify their identity. These mechanisms allow MongoDB to integrate into your existing authentication system. See :ref:`security-authentication-mechanisms` for details."
msgstr ""

#: ../source/core/authentication.txt:25
# a640a5de75b3470d9febac3df291b7f8
msgid "In addition to verifying the identity of a client, MongoDB can require members of replica sets and sharded clusters to :ref:`authenticate their membership <inter-process-auth>` to their respective replica set or sharded cluster. See :ref:`inter-process-auth` for more information."
msgstr ""

#: ../source/core/authentication.txt:34
# 1880abaad6c34939a1267b0b3f74e0d6
msgid "Client Users"
msgstr ""

#: ../source/core/authentication.txt:36
# 3c3181c97d4c41bfbc96bb8b95cc48d4
msgid "To authenticate a client in MongoDB, you must add a corresponding user to MongoDB. When adding a user, you create the user in a specific database. This database is the :ref:`authentication database <mongo-shell-authentication-options>` for the user."
msgstr ""

#: ../source/core/authentication.txt:41
# 229aed0e70714d5e83a165ab74090c52
msgid "Together, the user's name and database serve as a unique identifier for that user. That is, if two users have the same name but are created in different databases, they are two separate users. To authenticate, the client must authenticate the user against the user's :ref:`authentication database <mongo-shell-authentication-options>`. For instance, if using the :program:`mongo` shell as a client, you can specify the authentication database for the user with the :ref:`--authenticationDatabase <mongo-shell-authentication-options>` option."
msgstr ""

#: ../source/core/authentication.txt:51
# cb8d0863057e4fab8ffce9d547a59b3e
msgid "To add and manage user information, MongoDB provides the :method:`db.createUser()` method as well as other :ref:`user management methods <user-management-methods>`. For examples of user management in MongoDB, see :doc:`/tutorial/manage-users-and-roles`."
msgstr ""

#: ../source/core/authentication.txt:56
# 216961c6537846679941db39fe874165
msgid "MongoDB stores all user information, including :data:`name <admin.system.users.user>`, :data:`password <admin.system.users.credentials>`, and the :data:`user's database <admin.system.users.db>`, in the :doc:`system.users </reference/system-users-collection>` collection in the ``admin`` database."
msgstr ""

#: ../source/core/authentication.txt:66
# 878086e5a96141b59cd298a1a714fbe9
msgid "Authentication Mechanisms"
msgstr ""

#: ../source/core/authentication.txt:70
# 084722fb88a84ad2a7dd4001fff365ae
msgid "MongoDB supports multiple authentication mechanisms. MongoDB's default authentication method is a :ref:`challenge and response mechanism (SCRAM-SHA-1) <authentication-scram-sha-1>`. Previously, MongoDB used :ref:`MongoDB Challenge and Response (MONGODB-CR) <authentication-mongodb-cr>` as the default."
msgstr ""

#: ../source/core/authentication.txt:76
# f97f791618cd4b3b88ef99c5eb689102
msgid "MongoDB also supports :ref:`x509 certificate authentication <security-auth-x509>`, :ref:`LDAP proxy authentication <security-auth-ldap>`, and :ref:`Kerberos authentication <security-auth-kerberos>`."
msgstr ""

#: ../source/core/authentication.txt:81
# 45446b121fea4cf8963d1a536d1d3235
msgid "This section introduces the mechanisms available in MongoDB."
msgstr ""

#: ../source/core/authentication.txt:83
# 457fdda9a4de4065bcacd169b12f1e46
msgid "To specify the authentication mechanism to use, see :parameter:`authenticationMechanisms`."
msgstr ""

#: ../source/core/authentication.txt:89
# 1a7933abf99642098b89ea80522d2afc
msgid "``SCRAM-SHA-1`` Authentication"
msgstr ""

#: ../source/core/authentication.txt:93
# 27c243f88ef948c4a7334669e252112b
msgid "``SCRAM-SHA-1`` is an IETF standard, `RFC 5802 <https://tools.ietf.org/html/rfc5802>`_, that defines best practice methods for implementation of challenge-response mechanisms for authenticating users with passwords."
msgstr ""

#: ../source/core/authentication.txt:98
# d34e769323714696872d554804cf3149
msgid "``SCRAM-SHA-1`` verifies supplied user credentials against the user's :data:`name <admin.system.users.user>`, :data:`password <admin.system.users.credentials>` and :data:`database <admin.system.users.db>`. The user's database is the database where the user was created, and the user's database and the user's name together serves to identify the user."
msgstr ""

#: ../source/core/authentication.txt:107
# bd92024e65ac4e01b0c1a356f6ac8224
msgid "A driver upgrade is **necessary** to use the ``SCRAM-SHA-1`` authentication mechanism if your current driver version does not support ``SCRAM-SHA-1``. See :ref:`required driver versions <considerations-scram-sha-1-drivers>` for details."
msgstr ""

#: ../source/core/authentication.txt:113
# c2c4ff7398c847ce9edbe9d5eb2cf99e
msgid "`Blog Post: Improved Password-Based Authentication in MongoDB 3.0: SCRAM Explained (Part 1) <https://www.mongodb.com/blog/post/improved-password-based-authentication-mongodb-30-scram-explained-part-1?jmp=docs>`_"
msgstr ""

#: ../source/core/authentication.txt:114
# 28273e5a25744258b6ad33245d7dc848
msgid "`Blog Post: Improved Password-Based Authentication in MongoDB 3.0: SCRAM Explained (Part 2) <https://www.mongodb.com/blog/post/improved-password-based-authentication-mongodb-30-scram-explained-part-2?jmp=docs>`_"
msgstr ""

#: ../source/core/authentication.txt:117
# ca39dfa7628f45bfa23dab0f63824058
msgid "``SCRAM-SHA-1`` Advantages"
msgstr ""

#: ../source/core/authentication.txt:119
# 057d5580689f464aaa4f2d47dff59191
msgid "MongoDB's implementation of ``SCRAM-SHA-1`` represents an improvement in security over the previously-used ``MONGODB-CR``, providing:"
msgstr ""

#: ../source/core/authentication.txt:122
# 841d009397e34dd98f0a656a7dcbd6ce
msgid "A tunable work factor (``iterationCount``),"
msgstr ""

#: ../source/core/authentication.txt:123
# 24b361e976544b9db0c3abfdc03eacda
msgid "Per-user random salts rather than server-wide salts,"
msgstr ""

#: ../source/core/authentication.txt:124
# b6bf9ba7ee124f3ebc69e3db8bf773fb
msgid "A cryptographically stronger hash function (``SHA-1`` rather than ``MD5``), and"
msgstr ""

#: ../source/core/authentication.txt:126
# a9dfe4d0fb284caa9aa4dbb0add8af9b
msgid "Authentication of the server to the client as well as the client to the server."
msgstr ""

#: ../source/core/authentication.txt:130
# 94d89ccf7e80434faa650a0888602041
msgid "``SCRAM-SHA-1`` and Existing User Credentials"
msgstr ""

#: ../source/core/authentication.txt:132
# 2a90c2b3efd54d78a0a56c93f924800e
msgid "``SCRAM-SHA-1`` is the default mechanism for MongoDB versions beginning with the 3.0 series. However, if you are upgrading a MongoDB 2.6 instances that already have users credentials, MongoDB will continue to use ``MONGODB-CR`` for challenge-response authentication until you upgrade the authentication schema. Even when using the ``MONGODB-CR`` authentication mechanism, clients and drivers that support MongoDB 3.0 features (see :ref:`compatibility-driver-versions`) will use the ``SCRAM`` communication protocol."
msgstr ""

#: ../source/core/authentication.txt:141
# 9bd6e96a90984502882f3e55dd0a2bd9
msgid "For details on upgrading the authentication schema model to ``SCRAM-SHA-1``, see :doc:`/release-notes/3.0-scram`."
msgstr ""

#: ../source/includes/fact-upgrade-scram-irreversible.rst:1
# 1fe213549f614a4ca3c79b06989ad3fe
msgid "The procedure to upgrade to ``SCRAM-SHA-1`` **discards** the ``MONGODB-CR`` credentials used by 2.6. As such, the procedure is **irreversible**, short of restoring from backups."
msgstr ""

#: ../source/includes/fact-upgrade-scram-irreversible.rst:5
# 9216e0cb4ab44dd28a1cc8254b61b40c
msgid "The procedure also disables ``MONGODB-CR`` as an authentication mechanism."
msgstr ""

#: ../source/core/authentication.txt:151
# 50faca32d2e34e5b9dc8b741c10f5acf
msgid "``MONGODB-CR`` Authentication"
msgstr ""

#: ../source/core/authentication.txt:153
# 704501ca13c24937a096b973f348c844
msgid "``MONGODB-CR`` is a challenge-response mechanism that authenticates users through passwords."
msgstr ""

#: ../source/core/authentication.txt:156
# bb279704965848378d8958c33fa449c7
msgid "As of version 3.0, MongoDB no longer defaults to ``MONGODB-CR`` and instead uses ``SCRAM-SHA-1`` as the default authentication mechanism."
msgstr ""

#: ../source/core/authentication.txt:160
# 5f22ce665cdd4d1eb2d6dec32b106dd3
msgid "``MONGODB-CR`` verifies supplied user credentials against the user's :data:`name <admin.system.users.user>`, :data:`password <admin.system.users.credentials>` and :data:`database <admin.system.users.db>`. The user's database is the database where the user was created, and the user's database and the user's name together serve to identify the user."
msgstr ""

#: ../source/core/authentication.txt:167
# 415cfb50448948969816e1e6a1a91dc9
msgid "Using :setting:`key files <security.keyFile>`, you can also use ``MONGODB-CR`` authentication for the :ref:`internal member authentication <inter-process-auth>` of replica set members and sharded cluster members. The contents of the key files serve as the shared password for the members. You must store the key file on each :program:`mongod` or :program:`mongos` instance for that replica set or sharded cluster. The content of the key file is arbitrary but must be the same on all :program:`mongod` and :program:`mongos` instances that connect to each other."
msgstr ""

#: ../source/core/authentication.txt:177
# f21c2cce5ea046dba08b9c94ff14ed69
msgid "See :doc:`/tutorial/generate-key-file` for instructions on generating a key file and turning on key file authentication for members."
msgstr ""

#: ../source/core/authentication.txt:183
# 0d61cea2fa834de08c0d75d3894edc7d
msgid "x.509 Certificate Authentication"
msgstr ""

#: ../source/core/authentication.txt:187
# 7ee5f8f16e91456da710e3826f35288b
msgid "MongoDB supports x.509 certificate authentication for use with a secure :doc:`TLS/SSL connection </tutorial/configure-ssl>`."
msgstr ""

#: ../source/core/authentication.txt:190
# 92d2479e84824565b9ca2f07c1c7c276
msgid "To authenticate to servers, clients can use x.509 certificates instead of usernames and passwords. See :ref:`x509-client-authentication` for more information."
msgstr ""

#: ../source/core/authentication.txt:194
# 8ea4d3f911d64dda9e6978a71e5bd412
msgid "For membership authentication, members of sharded clusters and replica sets can use x.509 certificates instead of key files. See :ref:`x509-internal-authentication` for more information."
msgstr ""

#: ../source/core/authentication.txt:201
# 6894c4cf0f1845aeb757e6afed00f7e3
msgid "Kerberos Authentication"
msgstr ""

#: ../source/core/authentication.txt:203
# a7338f72d64f426aa99e3ac7fc37a702
msgid "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_ supports authentication using a Kerberos service. Kerberos is an industry standard authentication protocol for large client/server systems."
msgstr ""

#: ../source/core/authentication.txt:207
# 3d478d6eddf64e31ad1cf5713751ce1b
msgid "To use MongoDB with Kerberos, you must have a properly configured Kerberos deployment, configured :ref:`Kerberos service principals <kerberos-service-principal>` for MongoDB, and added :ref:`Kerberos user principal <kerberos-user-principal>` to MongoDB."
msgstr ""

#: ../source/core/authentication.txt:212
# 4c8211d2e85b4014ad2bf2b61ff5e482
msgid "See :doc:`/core/kerberos` for more information on Kerberos and MongoDB. To configure MongoDB to use Kerberos authentication, see :doc:`/tutorial/control-access-to-mongodb-with-kerberos-authentication` and :doc:`/tutorial/control-access-to-mongodb-windows-with-kerberos-authentication`."
msgstr ""

#: ../source/core/authentication.txt:221
# 4221e557da4f4f74bc659d4e1233729e
msgid "LDAP Proxy Authority Authentication"
msgstr ""

#: ../source/core/authentication.txt:223
# 5ed676f93f454c3ba833dfc67eabe7ba
msgid "`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-enterprise?jmp=docs>`_ supports proxy authentication through a Lightweight Directory Access Protocol (LDAP) service. See :doc:`/tutorial/configure-ldap-sasl-openldap` and :doc:`/tutorial/configure-ldap-sasl-activedirectory`."
msgstr ""

#: ../source/includes/admonition-mongodb-enterprise-windows-ldap.rst:1
# d31cd5306b3f445cbc6aba6723ad80e3
msgid "MongoDB Enterprise for Windows does **not** include LDAP support for authentication. However, MongoDB Enterprise for Linux supports using LDAP authentication with an ActiveDirectory server."
msgstr ""

#: ../source/core/authentication.txt:231
# 59839bc8e6fd4b82a77836326a8d312b
msgid "MongoDB does **not** support LDAP authentication in mixed sharded cluster deployments that contain both version 2.4 and version 2.6 shards."
msgstr ""

#: ../source/core/authentication.txt:235
# fd89b63b0e38495fa756faab20bed5a8
msgid "Authentication Behavior"
msgstr ""

#: ../source/core/authentication.txt:240
# 3abbb24adf5640aab36267f5588c14f8
msgid "Client Authentication"
msgstr ""

#: ../source/core/authentication.txt:242
# 19b78fd59e0b42939e309d9cc01693c3
msgid "Clients can authenticate using the :ref:`challenge and response <authentication-mongodb-cr>`, :ref:`x.509 <security-auth-x509>`, :ref:`LDAP Proxy <security-auth-ldap>` and :ref:`Kerberos <security-auth-kerberos>` mechanisms."
msgstr ""

#: ../source/core/authentication.txt:247
# 9ce293f0443d4651a75aaafc29305149
msgid "Each client connection should authenticate as exactly one user. If a client authenticates to a database as one user and later authenticates to the same database as a different user, the second authentication invalidates the first. While clients can authenticate as multiple users if the users are defined on different databases, we recommend authenticating as one user at a time, providing the user with appropriate privileges on the databases required by the user."
msgstr ""

#: ../source/core/authentication.txt:255
# c2d059ee8cf640fa9ece273922f43ada
msgid "See :doc:`/tutorial/authenticate-as-client` for more information."
msgstr ""

#: ../source/core/authentication.txt:261
# 961ac19285074982a425f63422b8e225
msgid "Authentication Between MongoDB Instances"
msgstr ""

#: ../source/core/authentication.txt:263
# f3f392a1f1c047319f9ce4595c9abf98
msgid "You can authenticate members of :term:`replica sets <replica set>` and :term:`sharded clusters <sharded cluster>`. To authenticate members of a single MongoDB deployment to each other, MongoDB can use the :setting:`~security.keyFile` and :ref:`x.509 <security-auth-x509>` mechanisms. Using :setting:`~security.keyFile` authentication for members also enables authorization."
msgstr ""

#: ../source/core/authentication.txt:277
# 4460ebbe8f7b43ffa7821da6dde929da
msgid "Always run replica sets and sharded clusters in a trusted networking environment. Ensure that the network permits only trusted traffic to reach each :program:`mongod` and :program:`mongos` instance."
msgstr ""

#: ../source/core/authentication.txt:281
# 804de6b42d204911bc7a4bdbf7f3629f
msgid "Use your environment's firewall and network routing to ensure that traffic *only* from clients and other members can reach your :program:`mongod` and :program:`mongos` instances. If needed, use virtual private networks (VPNs) to ensure secure connections over wide area networks (WANs)."
msgstr ""

#: ../source/core/authentication.txt:286
# 0475696b21f94c09b0d9a98e73a19de2
msgid "Always ensure that:"
msgstr ""

#: ../source/core/authentication.txt:288
# 57e1a25b0dc44b98954c9db114d3e164
msgid "Your network configuration will allow every member of the replica set or sharded cluster to contact every other member."
msgstr ""

#: ../source/core/authentication.txt:291
# caf50b51c9f74881a228c78d972142eb
msgid "If you use MongoDB's authentication system to limit access to your infrastructure, ensure that you configure a :setting:`~security.keyFile` on all members to permit authentication."
msgstr ""

#: ../source/core/authentication.txt:295
# 1c7d89986100496bac3a4d03ca710b14
msgid "See :doc:`/tutorial/generate-key-file` for instructions on generating a key file and turning on key file authentication for members. For an example of using key files for sharded cluster authentication, see :doc:`/tutorial/enable-authentication-in-sharded-cluster`."
msgstr ""

#: ../source/core/authentication.txt:305
# d3d87446b1e54dc180d3550bc74757f2
msgid "Authentication on Sharded Clusters"
msgstr ""

#: ../source/core/authentication.txt:307
# f78a3eadcba84f70974af7e14306c346
msgid "In sharded clusters, applications authenticate to directly to :program:`mongos` instances, using credentials stored in the ``admin`` database of the :term:`config servers <config server>`. The shards in the sharded cluster also have credentials, and clients can authenticate directly to the shards to perform maintenance directly on the shards. In general, applications and clients should connect to the sharded cluster through the :program:`mongos`."
msgstr ""

#: ../source/core/authentication.txt:316
# adfddcf9eb0f4c3f81cb4fd4e8a4bd28
msgid "Previously, the credentials for authenticating to a database on a cluster resided on the :ref:`primary shard <primary-shard>` for that database."
msgstr ""

#: ../source/core/authentication.txt:321
# 8354273b390a43e1ad4d66836bd19253
msgid "Some maintenance operations, such as :dbcommand:`cleanupOrphaned`, :dbcommand:`compact`, :method:`rs.reconfig()`, require direct connections to specific shards in a sharded cluster. To perform these operations with authentication enabled, you must connect directly to the shard and authenticate as a *shard local* administrative user. To create a *shard local* administrative user, connect directly to the shard and create the user. MongoDB stores *shard local* users in the ``admin`` database of the shard itself. These *shard local* users are completely independent from the users added to the sharded cluster via :program:`mongos`. *Shard local* users are local to the shard and are inaccessible by :program:`mongos`. Direct connections to a shard should only be for shard-specific maintenance and configuration."
msgstr ""

#: ../source/core/authentication.txt:337
# 9d91cd7dff564b0998f5a4cb1aec2ac9
msgid "Localhost Exception"
msgstr ""

#: ../source/core/authentication.txt:339
# 249161b11392473dbb07f1e55072e56c
msgid "The localhost exception allows you to enable authorization *before* creating the first user in the system. When active, the localhost exception allows connections from the localhost interface to create the first user on the ``admin`` database. The exception applies only when there are no users created in the MongoDB instance."
msgstr ""

#: ../source/core/authentication.txt:345
# 812b21c955ce4a0684463d376fc4e003
msgid "The localhost exception changed so that these connections *only* have access to create the first user on the ``admin`` database. In previous versions, connections that gained access using the localhost exception had unrestricted access to the MongoDB instance."
msgstr ""

#: ../source/core/authentication.txt:352
# d644917efa794e09b389bf1948285a7b
msgid "If you use the localhost exception when deploying a new MongoDB system, the first user you create must be in the ``admin`` database with privileges to create other users, such as a user with the :authrole:`userAdmin` or :authrole:`userAdminAnyDatabase` role. See :doc:`/tutorial/enable-authentication` and :doc:`/tutorial/add-user-administrator` for more information."
msgstr ""

#: ../source/core/authentication.txt:359
# 714da0ca1597472298a8fa9a43971757
msgid "In the case of a sharded cluster, the localhost exception applies to each shard individually as well as to the cluster as a whole. Once you create a sharded cluster and add an administrator to the :program:`mongos` instance, you must still prevent unauthorized access to the individual shards. Follow one of the following steps for each shard in your cluster:"
msgstr ""

#: ../source/core/authentication.txt:365
# 0b7d3a6fb32243b89a3a3c26891483b7
msgid "Create an administrative user, or"
msgstr ""

#: ../source/core/authentication.txt:366
# 0e32456ea0104b8cb9241c77848de088
msgid "Disable the localhost exception at startup.  To disable the localhost exception, use :setting:`setParameter` in your :doc:`configuration file </reference/configuration-options>`, or :option:`--setParameter` on the command line to set the :parameter:`enableLocalhostAuthBypass` parameter to ``0``."
msgstr ""

#: ../source/core/authentication.txt:300
# ca5d953400df4471b4203c95627fa582
msgid "sharding"
msgstr ""

#: ../source/core/authentication.txt:300
# ca5d953400df4471b4203c95627fa582
msgid "localhost"
msgstr ""

