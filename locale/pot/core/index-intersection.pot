# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-intersection.txt:3
# 858c0640670d455395d1391e40c45e52
msgid "Index Intersection"
msgstr ""

#: ../source/core/index-intersection.txt:0
# ac85ebfff8c342b1bdf81842cf91ede8
msgid "On this page"
msgstr ""

#: ../source/core/index-intersection.txt:15
# 51c715d7f36d44c48776cde2b25fed1b
msgid "MongoDB can use the intersection of multiple indexes to fulfill queries. [#previous-versions]_ In general, each index intersection involves two indexes; however, MongoDB can employ multiple/nested index intersections to resolve a query."
msgstr ""

#: ../source/core/index-intersection.txt:20
# 07ee5650915f45c3b7f9bed1803c53eb
msgid "To illustrate index intersection, consider a collection ``orders`` that has the following indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:28
# d1c20055d4ce405f86e14d01f9fffa5c
msgid "MongoDB can use the intersection of the two indexes to support the following query:"
msgstr ""

#: ../source/core/index-intersection.txt:35
# f370edc43758452888e7cf3f6aae3589
msgid "To determine if MongoDB used index intersection, run :method:`~cursor.explain()`; the results of :ref:`explain() <explain-output-index-intersection>` will include either an ``AND_SORTED`` stage or an ``AND_HASH`` stage."
msgstr ""

#: ../source/core/index-intersection.txt:40
# 1841b0d457b54ce1997a537057ac772a
msgid "In previous versions, MongoDB could use only a single index to fulfill most queries. The exception to this is queries with :query:`$or` clauses, which could use a single index for each :query:`$or` clause."
msgstr ""

#: ../source/core/index-intersection.txt:46
# 489f5884ea544ee2996da18d3b21b04b
msgid "Index Prefix Intersection"
msgstr ""

#: ../source/core/index-intersection.txt:48
# b77dd0ce95b74a6186d6fa1155d99f31
msgid "With index intersection, MongoDB can use an intersection of either the entire index or the index prefix. An index prefix is a subset of a compound index, consisting of one or more keys starting from the beginning of the index."
msgstr ""

#: ../source/core/index-intersection.txt:53
# 3057ab87e29e4f9b8455dd9f30a0e30d
msgid "Consider a collection ``orders`` with the following indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:60
# 018bba42565344b988da3f8ad6be41fd
msgid "To fulfill the following query which specifies a condition on both the ``qty`` field and the ``status`` field, MongoDB can use the intersection of the two indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:71
# 1a66d6077de448fe84b1d7b9072ab208
msgid "Index Intersection and Compound Indexes"
msgstr ""

#: ../source/core/index-intersection.txt:73
# 99ddae8474fc4d7e879243dd4f15cdec
msgid "Index intersection does not eliminate the need for creating :doc:`compound indexes </core/index-compound>`. However, because both the list order (i.e. the order in which the keys are listed in the index) and the sort order (i.e. ascending or descending), matter in :doc:`compound indexes </core/index-compound>`, a compound index may not support a query condition that does not include the :ref:`index prefix keys <compound-index-prefix>` or that specifies a different sort order."
msgstr ""

#: ../source/core/index-intersection.txt:82
# 090383be3a2e424f8d77ce46945c502c
msgid "For example, if a collection ``orders`` has the following compound index, with the ``status`` field listed before the ``ord_date`` field:"
msgstr ""

#: ../source/core/index-intersection.txt:89
# 8f52e024dac942d98758b153978eee22
msgid "The compound index can support the following queries:"
msgstr ""

#: ../source/core/index-intersection.txt:101
# e3d5731eded948378874d9ed8d5ef14d
msgid "But not the following two queries:"
msgstr ""

#: ../source/core/index-intersection.txt:108
# e00a43917f8b49428ebe7fbb2471d815
msgid "However, if the collection has two separate indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:115
# 1d5dc05b4ba14e299b05fe1295f10ace
msgid "The two indexes can, either individually or through index intersection, support all four aforementioned queries."
msgstr ""

#: ../source/core/index-intersection.txt:118
# 966c12bb073c414085c6fa462b41fe54
msgid "The choice between creating compound indexes that support your queries or relying on index intersection depends on the specifics of your system."
msgstr ""

#: ../source/core/index-intersection.txt:122
# d8094063489e4792afff6dafe77a9c93
msgid ":doc:`compound indexes </core/index-compound>`, :ref:`compound-key-indexes`"
msgstr ""

#: ../source/core/index-intersection.txt:126
# 62d8121b0dca49498d5f1e2c5524bdba
msgid "Index Intersection and Sort"
msgstr ""

#: ../source/core/index-intersection.txt:128
# c7e42800236b40ffa78d148c7e4ab5b8
msgid "Index intersection does not apply when the :method:`~cursor.sort()` operation requires an index completely separate from the query predicate."
msgstr ""

#: ../source/core/index-intersection.txt:132
# 64eb14a7dcae45c78cbf557e65c9a85c
msgid "For example, the ``orders`` collection has the following indexes:"
msgstr ""

#: ../source/core/index-intersection.txt:141
# 3f1449e00eff453f935ee4d8597d2e28
msgid "MongoDB cannot use index intersection for the following query with sort:"
msgstr ""

#: ../source/core/index-intersection.txt:147
# c1b6aff891374a36b0883f6b5976de27
msgid "That is, MongoDB does not use the ``{ qty: 1 }`` index for the query, and the separate ``{ status: 1 }`` or the ``{ status: 1, ord_date: -1 }`` index for the sort."
msgstr ""

#: ../source/core/index-intersection.txt:151
# 374bb9e6d60c4c11838a835841b7b30e
msgid "However, MongoDB can use index intersection for the following query with sort since the index ``{ status: 1, ord_date: -1 }`` can fulfill part of the query predicate."
msgstr ""

