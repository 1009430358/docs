# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/read-preference.txt:9
# d9a43c3b1e934aa89fcd4779e1bdd9f3
msgid "Read Preference"
msgstr ""

#: ../source/includes/introduction-read-preference.rst:1
# 7309478a63e745ef88be9f783432c388
msgid "Read preference describes how MongoDB clients route read operations to the members of a :term:`replica set`."
msgstr ""

#: ../source/includes/introduction-read-preference.rst:6
# ce134296f5684c5982720aa75e8b7036
msgid "By default, an application directs its read operations to the :term:`primary` member in a :term:`replica set`. Because write operations are issued to the single primary, reading from the primary returns the latest version of a document [#edge-cases-2-primaries]_."
msgstr ""

#: ../source/includes/introduction-read-preference.rst:11
# 1db49c1410474cc193650fd9962ac31a
msgid "For an application that does not require fully up-to-date data, you can improve read throughput or reduce latency by distributing some or all reads to secondary members of the replica set."
msgstr ""

#: ../source/core/read-preference.txt:16
# b14319475e0447c2a3faf9d9f0533a8e
msgid "Exercise care when specifying read preferences: Modes other than :readmode:`primary` may return stale data because with :ref:`asynchronous replication <asynchronous-replication>`, data in the secondary may not reflect the most recent write operations. [#edge-cases-2-primaries]_"
msgstr ""

#: ../source/core/read-preference.txt:23
# 3fc55f233d3745028743f5cd1398c11f
msgid "The read preference does not affect the visibility of data; i.e, clients can see the results of writes before they are made durable:"
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:1
# 17ca29c42ea4487c868f1e3a9b33c948
msgid "Regardless of :doc:`write concern </reference/write-concern>`, other clients can see the result of the write operations before the write operation is acknowledged to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:5
# cc63ead435e547cd88b61b7d3e3fe300
msgid "Clients can read data which may be subsequently :doc:`rolled back </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/core/read-preference.txt:29
# d6193601e6304e4494dbb4554f51aac8
msgid "Use Cases"
msgstr ""

#: ../source/core/read-preference.txt:32
# fcebd1b2dc1342cd839d6d433299a4a8
msgid "Indications"
msgstr ""

#: ../source/core/read-preference.txt:34
# 436e7f98696c430581f0aa7df93414fd
msgid "The following are common use cases for using non-:readmode:`primary` read preference modes:"
msgstr ""

#: ../source/core/read-preference.txt:37
# f2928750418441568132c144133fdad3
msgid "Running systems operations that do not affect the front-end application."
msgstr ""

#: ../source/core/read-preference.txt:42
# c416b1974a6b465886a86e022f18ea03
msgid "Read preferences aren't relevant to direct connections to a single :program:`mongod` instance. However, in order to perform read operations on a direct connection to a secondary member of a replica set, you must set a read preference, such as :term:`secondary`."
msgstr ""

#: ../source/core/read-preference.txt:48
# 0d38c69a36ef48ea90d727a68328bb62
msgid "Providing local reads for geographically distributed applications."
msgstr ""

#: ../source/core/read-preference.txt:50
# 7de8f2be76ea45afa093f04cd43c24b9
msgid "If you have application servers in multiple data centers, you may consider having a :ref:`geographically distributed replica set <replica-set-geographical-distribution>` and using a non primary read preference or the :readmode:`nearest`. This allows the client to read from the lowest-latency members, rather than always reading from the primary."
msgstr ""

#: ../source/core/read-preference.txt:57
# 08ee4eaa812c4d249ee73bc73b9f7774
msgid "Maintaining availability during a failover."
msgstr ""

#: ../source/core/read-preference.txt:59
# 41c40718a01a4e2781c611daafd47b49
msgid "Use :readmode:`primaryPreferred` if you want an application to read from the primary under normal circumstances, but to allow stale reads from secondaries when the primary is unavailable. This provides a \"read-only mode\" for your application during a failover."
msgstr ""

#: ../source/core/read-preference.txt:65
# 9c5c6d0179d94c50807a8503935c7037
msgid "Counter-Indications"
msgstr ""

#: ../source/core/read-preference.txt:67
# 2e644e439ade447f8899e7521bea2c22
msgid "In general, do *not* use :readmode:`secondary` and :readmode:`secondaryPreferred` to provide extra capacity for reads, because:"
msgstr ""

#: ../source/core/read-preference.txt:71
# bb0e82f1a1984f61b366302b3c14888f
msgid "All members of a replica have roughly equivalent write traffic; as a result, secondaries will service reads at roughly the same rate as the primary."
msgstr ""

#: ../source/core/read-preference.txt:75
# 3f838cfe63ad47e8b9ae936e3faf8b51
msgid "Replication is asynchronous and there is some amount of delay between a successful write operation and its replication to secondaries; reading from a secondary can return out-of-date data."
msgstr ""

#: ../source/core/read-preference.txt:79
# cad48e592a684dd89ff6d3152ab0a348
msgid "Distributing read operations to secondaries can compromise availability if *any* members of the set become unavailable because the remaining members of the set will need to be able to handle all application requests."
msgstr ""

#: ../source/core/read-preference.txt:84
# e37de68f818348299456421534c59065
msgid "For queries of sharded collections, for clusters with the :ref:`balancer <sharding-internals-balancing>` active, secondaries may return stale results with missing or duplicated data because of incomplete or terminated chunk migrations."
msgstr ""

#: ../source/core/read-preference.txt:90
# d7824941f700438b9dbb6df0be814086
msgid ":doc:`Sharding </sharding>` increases read and write capacity by distributing read and write operations across a group of machines, and is often a better strategy for adding capacity."
msgstr ""

#: ../source/core/read-preference.txt:94
# 4f56557174ec4eeab908e5e25500b0b7
msgid "See :doc:`/core/read-preference-mechanics` for more information about the internal application of read preferences."
msgstr ""

#: ../source/core/read-preference.txt:98
# ffef1a58f0974028ac524258ef1a40a9
msgid "Read Preference Modes"
msgstr ""

#: ../source/core/read-preference.txt:102
# a3362554b3844118b47a529f5a2b0911
msgid "All read preference modes except :readmode:`primary` may return stale data because :term:`secondaries <secondary>` replicate operations from the primary with some delay. [#edge-cases-2-primaries]_ Ensure that your application can tolerate stale data if you choose to use a non-:readmode:`primary` mode."
msgstr ""

#: ../source/core/read-preference.txt:108
# a098bc3a332d489a8d9e115028c1e098
msgid "MongoDB :doc:`drivers </applications/drivers>` support five read preference modes."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:5
# 9fc99787c60b4c2aa193c8645e363533
msgid "Read Preference Mode"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:6
# 0c7806b810af40d4be1719e805692c1e
msgid "Description"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:7
# 7fec9f95716342dcb01b270c2e11880d
msgid ":readmode:`primary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:8
# 8b63e5e8aab544d5a42d13619e8b98f1
msgid "Default mode. All operations read from the current replica set :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:10
#: ../source/core/read-preference.txt:149
# cc84de229cfc44bf91f8f07b5a131443
# 58f934a693134f0597d2556e5b7c8f26
msgid ":readmode:`primaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:11
# c210dbae957749ad9153877ed9cf3685
msgid "In most situations, operations read from the :term:`primary` but if it is unavailable, operations read from :term:`secondary` members."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:14
#: ../source/core/read-preference.txt:150
# e6ef4c8483764e3b89ed8071a9c196b1
# 3e9dbe631a5342f98efc3391dfe8f11c
msgid ":readmode:`secondary`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:15
# e1ed99914a494f6aabb12538344f4cf0
msgid "All operations read from the :term:`secondary` members of the replica set."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:17
#: ../source/core/read-preference.txt:151
# 5b5bdfc520884ccba553ef37f3f20d4e
# b915564306564b4ab463cdf7f34e50e3
msgid ":readmode:`secondaryPreferred`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:18
# 76238a45334945338ee83102d6b8b2dd
msgid "In most situations, operations read from :term:`secondary` members but if no :term:`secondary` members are available, operations read from the :term:`primary`."
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:21
#: ../source/core/read-preference.txt:152
# e191b6ab806b4fb6b9133684e66db7f3
# 4b289f6648584123ae84d1e9f38fa7e5
msgid ":readmode:`nearest`"
msgstr ""

#: ../source/includes/read-preference-modes-table.rst:22
# fb1fab2d8e9e408c8cce2f81d63280da
msgid "Operations read from member of the :term:`replica set` with the least network latency, irrespective of the member's type."
msgstr ""

#: ../source/core/read-preference.txt:113
# fb2a4cde893a4d07b9b55434fd39efd1
msgid "The syntax for specifying the read preference mode is :api:`specific to the driver and to the idioms of the host language <>`."
msgstr ""

#: ../source/core/read-preference.txt:117
# d68f2a98f5fc45c9887cb907cc31b95e
msgid "Read preference modes are also available to clients connecting to a :term:`sharded cluster` through a :program:`mongos`. The :program:`mongos` instance obeys specified read preferences when connecting to the :term:`replica set` that provides each :term:`shard` in the cluster."
msgstr ""

#: ../source/core/read-preference.txt:123
# ceda82005a7c48cbb433b77d826cc355
msgid "In the :program:`mongo` shell, the :method:`~cursor.readPref()` cursor method provides access to read preferences."
msgstr ""

#: ../source/core/read-preference.txt:126
# f0fb59ae3b5b4159abe4ee08775e31bd
msgid "For more information, see :ref:`read preference background <replica-set-read-preference-background>` and :ref:`read preference behavior <replica-set-read-preference-behavior>`. See also the :api:`documentation for your driver <>`."
msgstr ""

#: ../source/core/read-preference.txt:136
# abd4a836e5b54fee9ba3c663a3d1d595
msgid "Tag Sets"
msgstr ""

#: ../source/core/read-preference.txt:138
# 54f2cd671d954c3387596c5dd479f9a1
msgid "Tag sets allow you to target read operations to specific members of a replica set."
msgstr ""

#: ../source/core/read-preference.txt:141
# cfc82f3d782a4fb89ff00ace5e6c0b75
msgid "Custom read preferences and write concerns evaluate tag sets in different ways. Read preferences consider the value of a tag when selecting a member to read from. Write concerns ignore the value of a tag to when selecting a member, *except* to consider whether or not the value is unique."
msgstr ""

#: ../source/core/read-preference.txt:147
# 704b32cb44f94126988af3547b881375
msgid "You can specify tag sets with the following read preference modes:"
msgstr ""

#: ../source/core/read-preference.txt:154
# 20b146b3e40847cea5436ba58f0f19dd
msgid "Tags are not compatible with mode :readmode:`primary` and, in general, only apply when :ref:`selecting <replica-set-read-preference-behavior-member-selection>` a :term:`secondary` member of a set for a read operation. However, the :readmode:`nearest` read mode, when combined with a tag set, selects the matching member with the lowest network latency. This member may be a primary or secondary."
msgstr ""

#: ../source/core/read-preference.txt:161
# eda51e790b504632a72f667bf0906637
msgid "All interfaces use the same :ref:`member selection logic <replica-set-read-preference-behavior-member-selection>` to choose the member to which to direct read operations, basing the choice on read preference mode and tag sets."
msgstr ""

#: ../source/core/read-preference.txt:166
# 817e060714e24017b36fe11791ef8c23
msgid "For information on configuring tag sets, see the :doc:`/tutorial/configure-replica-set-tag-sets` tutorial."
msgstr ""

#: ../source/core/read-preference.txt:169
# f5110e92fb654e94821593913bb3fb58
msgid "For more information on how read preference :ref:`modes <replica-set-read-preference-modes>` interact with tag sets, see the :doc:`documentation for each read preference mode </reference/read-preference>`."
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
# ce53816a581340c4806bc40e3c1cb012
msgid "In some circumstances, two nodes in a replica set may *transiently* believe that they are the primary, but at most, one of them will be able to complete writes with :ref:`{w: majority} write concern <wc-w>`. The node that can complete :ref:`{w: majority} <wc-w>` writes is the current primary, and the other node is a former primary that has not yet recognized its demotion, typically due to a :term:`network partition`. When this occurs, clients that connect to the former primary may observe stale data despite having requested read preference :readmode:`primary`."
msgstr ""

#: ../source/core/read-preference.txt:1
#: ../source/core/read-preference.txt:3
#: ../source/core/read-preference.txt:132
# 04d7ad97f96e4de897e7096f303ba866
# 22bf73a017ec4152ad989ce2d91bf744
# d3699a8b64cb44ebb63366eaaf64f6b5
msgid "read preference"
msgstr ""

#: ../source/core/read-preference.txt:2
# 336fd523dd7f4d9293398b2b8a7c2b96
msgid "slaveOk"
msgstr ""

#: ../source/core/read-preference.txt:3
# 22bf73a017ec4152ad989ce2d91bf744
msgid "background"
msgstr ""

#: ../source/core/read-preference.txt:131
#: ../source/core/read-preference.txt:132
# 6009db0f94cb4647ba97be3a405615c6
# d3699a8b64cb44ebb63366eaaf64f6b5
msgid "tag sets"
msgstr ""

