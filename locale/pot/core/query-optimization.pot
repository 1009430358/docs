# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/query-optimization.txt:5
# 9b056d28f9ea463d9d78d2e644e84471
msgid "Query Optimization"
msgstr ""

#: ../source/core/query-optimization.txt:9
# f5f2bc1e307e4e96a48b0d8071455f8d
msgid "Indexes improve the efficiency of read operations by reducing the amount of data that query operations need to process. This simplifies the work associated with fulfilling queries within MongoDB."
msgstr ""

#: ../source/core/query-optimization.txt:14
# f63a2da3e1e34418985e79e5c06b07cd
msgid "Create an Index to Support Read Operations"
msgstr ""

#: ../source/core/query-optimization.txt:16
# 9ed228c08eca4fa1809a149154d3b950
msgid "If your application queries a collection on a particular field or set of fields, then an index on the queried field or a :doc:`compound index </core/index-compound>` on the set of fields can prevent the query from scanning the whole collection to find and return the query results. For more information about indexes, see the :doc:`complete documentation of indexes in MongoDB </core/indexes>`."
msgstr ""

#: ../source/core/query-optimization.txt:0
# cd92330f779e460b9af31b0706bf31e4
msgid "Example"
msgstr ""

#: ../source/core/query-optimization.txt:31
# 5d5aafc96fb44048af2c6071446ab6e3
msgid "To improve the performance of this query, add an ascending or a descending index to the ``inventory`` collection on the ``type`` field. [#ensureIndexOrder]_ In the :program:`mongo` shell, you can create indexes using the :method:`db.collection.createIndex()` method:"
msgstr ""

#: ../source/core/query-optimization.txt:41
# b30a490e3c86482b9a860f33cc7bbdc6
msgid "This index can prevent the above query on ``type`` from scanning the whole collection to return the results."
msgstr ""

#: ../source/core/query-optimization.txt:44
# 74f5d0eed9b24f20b0fc6af394389f12
msgid "To analyze the performance of the query with an index, see :doc:`/tutorial/analyze-query-plan`."
msgstr ""

#: ../source/core/query-optimization.txt:47
# 5df89431d8eb4605bc11d6fbf2b5f3a8
msgid "In addition to optimizing read operations, indexes can support sort operations and allow for a more efficient storage utilization. See :method:`db.collection.createIndex()` and :doc:`/administration/indexes` for more information about index creation."
msgstr ""

#: ../source/core/query-optimization.txt:54
# a1b6d55c39d1451d908160ee561e0376
msgid "For single-field indexes, the selection between ascending and descending order is immaterial. For compound indexes, the selection is important. See :ref:`indexing order <index-ascending-and-descending>` for more details."
msgstr ""

#: ../source/core/query-optimization.txt:62
# a8afead92e0e47bf89fc1606b5ddc2ad
msgid "Query Selectivity"
msgstr ""

#: ../source/core/query-optimization.txt:64
# 92fd51c2ac204906a49082dd5429fb29
msgid "Query selectivity refers to how well the query predicate excludes or filters out documents in a collection. Query selectivity can determine whether or not queries can use indexes effectively or even use indexes at all."
msgstr ""

#: ../source/core/query-optimization.txt:69
# f522eb8b11fc4271b9afbc70f2fa5c49
msgid "More selective queries match a smaller percentage of documents. For instance, an equality match on the unique ``_id`` field is highly selective as it can match at most one document."
msgstr ""

#: ../source/core/query-optimization.txt:73
# 2407f9dabc2546dba076d3a00107c561
msgid "Less selective queries match a larger percentage of documents. Less selective queries cannot use indexes effectively or even at all."
msgstr ""

#: ../source/core/query-optimization.txt:76
# 67c0e2c46beb4eff8367905306dd075d
msgid "For instance, the inequality operators :query:`$nin` and :query:`$ne` are *not* very selective since they often match a large portion of the index. As a result, in many cases, a :query:`$nin` or :query:`$ne` query with an index may perform no better than a :query:`$nin` or :query:`$ne` query that must scan all documents in a collection."
msgstr ""

#: ../source/core/query-optimization.txt:82
# f84dba15a29e405e892fc910f886968b
msgid "The selectivity of :query:`regular expressions <$regex>` depends on the expressions themselves. For details, see :ref:`regular expression and index use <regex-index-use>`."
msgstr ""

#: ../source/core/query-optimization.txt:91
# 7e9a57a2000441f88aa487a0b545869a
msgid "Covered Query"
msgstr ""

#: ../source/core/query-optimization.txt:93
# fdb546af61d14de697e51d4c043e538c
msgid "An index :ref:`covers <indexes-covered-queries>` a query when both of the following apply:"
msgstr ""

#: ../source/core/query-optimization.txt:96
# 71edcc96ae994f04b5f98eeeb084275f
msgid "all the fields in the :ref:`query <read-operations-query-document>` are part of an index, **and**"
msgstr ""

#: ../source/core/query-optimization.txt:99
# 7f2d8fe6eaf9450ca9d69702c003963c
msgid "all the fields returned in the results are in the same index."
msgstr ""

#: ../source/core/query-optimization.txt:101
# b9eafbc9d4404f13a45be370682335c8
msgid "For example, a collection ``inventory`` has the following index on the ``type`` and ``item`` fields:"
msgstr ""

#: ../source/core/query-optimization.txt:108
# e755ab8af94c49b484c3b0b56a68c539
msgid "This index will cover the following operation which queries on the ``type`` and ``item`` fields and returns only the ``item`` field:"
msgstr ""

#: ../source/core/query-optimization.txt:118
# bbcb188fde364babb32edf1dd88e3d01
msgid "For the specified index to cover the query, the projection document must explicitly specify ``_id: 0`` to exclude the ``_id`` field from the result since the index does not include the ``_id`` field."
msgstr ""

#: ../source/core/query-optimization.txt:123
# 61caf1a968774bf3b313afb3715e331d
msgid "Performance"
msgstr ""

#: ../source/core/query-optimization.txt:125
# 11a20de7006b4ac6adb6c39be1ec1c77
msgid "Because the index contains all fields required by the query, MongoDB can both match the :ref:`query conditions <read-operations-query-document>` and return the results using only the index."
msgstr ""

#: ../source/core/query-optimization.txt:129
# 71238b35791f415cb22e24380b7ea8ce
msgid "Querying *only* the index can be much faster than querying documents outside of the index. Index keys are typically smaller than the documents they catalog, and indexes are typically available in RAM or located sequentially on disk."
msgstr ""

#: ../source/core/query-optimization.txt:135
# eae7fb77134344498b1fb7de445c557b
msgid "Limitations"
msgstr ""

#: ../source/core/query-optimization.txt:138
# 89f6d67d544645a8965bbb8f8f9b5a96
msgid "Restrictions on Indexed Fields"
msgstr ""

#: ../source/core/query-optimization.txt:140
# ff77aa3914ce40bb8df243414c0075a4
msgid "An index **cannot** cover a query if:"
msgstr ""

#: ../source/core/query-optimization.txt:142
# c869e3cdcc144ec1903f7affba20fa0e
msgid "any of the indexed fields in any of the documents in the collection includes an array. If an indexed field is an array, the index becomes a :ref:`multi-key index <index-type-multikey>` and cannot support a covered query."
msgstr ""

#: ../source/core/query-optimization.txt:147
# b793eacdc7cf4f0b8c0584d94609c6a7
msgid "any of the indexed field in the query predicate or returned in the projection are fields in embedded documents. [#index-embedded-document-fields]_ For example, consider a collection ``users`` with documents of the following form:"
msgstr ""

#: ../source/core/query-optimization.txt:156
# eedf59c4f68e440f9571ed16bd9a7a7b
msgid "The collection has the following index:"
msgstr ""

#: ../source/core/query-optimization.txt:162
# 58b9be5dcbcc4edb971ab5e3807eca42
msgid "The ``{ \"user.login\": 1 }`` index does **not** cover the following query:"
msgstr ""

#: ../source/core/query-optimization.txt:169
# 9677b8fbae6941b8b6189fa15bbea3f8
msgid "However, the query can use the ``{ \"user.login\": 1 }`` index to find matching documents."
msgstr ""

#: ../source/core/query-optimization.txt:175
# f03b11c3f69c47218b474f912fa3ba3c
msgid "Restrictions on Sharded Collection"
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-cover.rst:1
# c83ee80168324771b5d36da65eef4a8d
msgid "An index cannot cover a query on a :term:`sharded <shard>` collection when run against a :program:`mongos` if the index does not contain the shard key, with the following exception for the ``_id`` index: If a query on a sharded collection only specifies a condition on the ``_id`` field and returns only the ``_id`` field, the ``_id`` index can cover the query when run against a :program:`mongos` even if the ``_id`` field is not the shard key."
msgstr ""

#: ../source/includes/extracts/fact-covered-query-sharded-collection-cover.rst:11
# 659684f8338947338d14aa5b2d29c06e
msgid "In previous versions, an index cannot :ref:`cover <covered-queries>` a query on a :term:`sharded <shard>` collection when run against a :program:`mongos`."
msgstr ""

#: ../source/core/query-optimization.txt:180
# ceeb9c69de0844ab86081283fa493bb5
msgid "``explain``"
msgstr ""

#: ../source/core/query-optimization.txt:182
# 35058661a9a947419808b7c29be8dbea
msgid "To determine whether a query is a covered query, use the :method:`db.collection.explain()` or the :method:`~cursor.explain()` method and review the :ref:`results <explain-output-covered-queries>`."
msgstr ""

#: ../source/includes/fact-explain-collection-method.rst:1
# fafdd5ac381d4d4d80ae6c5636d3ac69
msgid ":method:`db.collection.explain()` provides information on the execution of other operations, such as :method:`db.collection.update()`. See :method:`db.collection.explain()` for details."
msgstr ""

#: ../source/core/query-optimization.txt:188
# d8e9b7e0c18d450ea2af0816d448a6aa
msgid "For more information see :ref:`indexes-measuring-use`."
msgstr ""

#: ../source/core/query-optimization.txt:190
# 7ace6480a10e4fd784627daae7ec2ebc
msgid "To index fields in embedded documents, use :term:`dot notation`."
msgstr ""

