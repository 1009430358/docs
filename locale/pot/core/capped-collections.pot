# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/capped-collections.txt:3
# fccb88c29e9c468cbc1100e09c64232f
msgid "Capped Collections"
msgstr ""

#: ../source/core/capped-collections.txt:0
# 6742682ad1364dab83322a305de096e6
msgid "On this page"
msgstr ""

#: ../source/core/capped-collections.txt:14
# 41f8e07d44a64cea941e52a482ec374d
msgid "Overview"
msgstr ""

#: ../source/core/capped-collections.txt:16
# fe81416ff1754ea2a9a91aaa17d5c533
msgid ":term:`Capped collections <capped collection>` are fixed-size collections that support high-throughput operations that insert and retrieve documents based on insertion order. Capped collections work in a way similar to circular buffers: once a collection fills its allocated space, it makes room for new documents by overwriting the oldest documents in the collection."
msgstr ""

#: ../source/core/capped-collections.txt:23
# b20740d2eccd4442909e7c997993e55d
msgid "See :method:`~db.createCollection()` or :dbcommand:`create` for more information on creating capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:27
# 270bea7c2a3d45fb9325789e8cc53109
msgid "Behavior"
msgstr ""

#: ../source/core/capped-collections.txt:30
# 57f4da412704499fa0ec54a3adad2782
msgid "Insertion Order"
msgstr ""

#: ../source/core/capped-collections.txt:32
# bb5482a8c5bb41c5a2cf76ac36493ddf
msgid "Capped collections guarantee preservation of the insertion order. As a result, queries do not need an index to return documents in insertion order. Without this indexing overhead, capped collections can support higher insertion throughput."
msgstr ""

#: ../source/core/capped-collections.txt:38
# e446158171904f3a9399853ef96ac98f
msgid "Automatic Removal of Oldest Documents"
msgstr ""

#: ../source/core/capped-collections.txt:40
# b1c99fd2bad34b28bc9c78ca7d98a39f
msgid "To make room for new documents, capped collections automatically remove the oldest documents in the collection without requiring scripts or explicit remove operations."
msgstr ""

#: ../source/core/capped-collections.txt:44
# a6349c2551be4549bcbc9c419471053f
msgid "For example, the :term:`oplog.rs <oplog>` collection that stores a log of the operations in a :term:`replica set` uses a capped collection. Consider the following potential use cases for capped collections:"
msgstr ""

#: ../source/core/capped-collections.txt:49
# 96d03dc5968c44f2b5621da7d00db069
msgid "Store log information generated by high-volume systems. Inserting documents in a capped collection without an index is close to the speed of writing log information directly to a file system. Furthermore, the built-in *first-in-first-out* property maintains the order of events, while managing storage use."
msgstr ""

#: ../source/core/capped-collections.txt:55
# 6277a0f5ca7f4f2eba3d791fe6cc06f2
msgid "Cache small amounts of data in a capped collections. Since caches are read rather than write heavy, you would either need to ensure that this collection *always* remains in the working set (i.e. in RAM) *or* accept some write penalty for the required index or indexes."
msgstr ""

#: ../source/core/capped-collections.txt:62
# 5992f4eaa69641bd8a806e69509df973
msgid "``_id`` Index"
msgstr ""

#: ../source/core/capped-collections.txt:64
# 8f51bf6c06bb41439bde1b2654bc297d
msgid "Capped collections have an ``_id`` field and an index on the ``_id`` field by default."
msgstr ""

#: ../source/core/capped-collections.txt:70
# 3a7137d890ce42e4a8193427edca827a
msgid "Restrictions and Recommendations"
msgstr ""

#: ../source/core/capped-collections.txt:73
# 7061e1505e014c17979605f82d2b71fa
msgid "Updates"
msgstr ""

#: ../source/core/capped-collections.txt:75
# 5c98531afead4b18b32471b6dcf0e75a
msgid "If you plan to update documents in a capped collection, create an index so that these update operations do not require a collection scan."
msgstr ""

#: ../source/core/capped-collections.txt:79
# d239ad26cfdb41478bf40accb5b6c0af
msgid "Document Size"
msgstr ""

#: ../source/includes/extracts/capped-collection-immutable-document-size.rst:1
# 9bd865235ca449cea3254a97a982cbdc
msgid "If an update or a replacement operation changes the document size, the operation will fail."
msgstr ""

#: ../source/core/capped-collections.txt:86
# 7a47c399e07e4557b316be2f8e5fd85e
msgid "Document Deletion"
msgstr ""

#: ../source/core/capped-collections.txt:88
# 0f6eafed86b544d797889d7478eebfbc
msgid "You cannot delete documents from a capped collection. To remove all documents from a collection, use the :method:`~db.collection.drop()` method to drop the collection and recreate the capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:93
# bf6e5df5642e4e38912da4f8079d7e3b
msgid "Sharding"
msgstr ""

#: ../source/core/capped-collections.txt:95
# bfef0803ef244acab3396b5588ff2802
msgid "You cannot shard a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:98
# 787d34439bc840fdb1eb8ce3972f8a57
msgid "Query Efficiency"
msgstr ""

#: ../source/core/capped-collections.txt:100
# 3bfceb8ae80242bfbed5c98b72496c88
msgid "Use natural ordering to retrieve the most recently inserted elements from the collection efficiently. This is (somewhat) analogous to tail on a log file."
msgstr ""

#: ../source/core/capped-collections.txt:105
# 311e6619974d4b55a8b8e2bdf055ddad
msgid "Aggregation ``$out``"
msgstr ""

#: ../source/core/capped-collections.txt:107
# dec0d979d268404c91edfba02ffe40e7
msgid "The aggregation pipeline operator :pipeline:`$out` cannot write results to a capped collection."
msgstr ""

#: ../source/core/capped-collections.txt:113
# 532cce4fda5c48a4856d21e6b2ef1695
msgid "Procedures"
msgstr ""

#: ../source/core/capped-collections.txt:116
# 06b7b16fa5f14716bc196bc90f97992a
msgid "Create a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:118
# be8a8eb6945e42d69076f77631a525ca
msgid "You must create capped collections explicitly using the :method:`db.createCollection()` method, which is a helper in the :program:`mongo` shell for the :dbcommand:`create` command. When creating a capped collection you must specify the maximum size of the collection in bytes, which MongoDB will pre-allocate for the collection. The size of the capped collection includes a small amount of space for internal overhead."
msgstr ""

#: ../source/core/capped-collections.txt:130
# 7dac3a9405ae4acab14d43358a46ca13
msgid "If the ``size`` field is less than or equal to 4096, then the collection will have a cap of 4096 bytes. Otherwise, MongoDB will raise the provided size to make it an integer multiple of 256."
msgstr ""

#: ../source/core/capped-collections.txt:134
# 7eb4eb75abca4beeb2a665817fd36a14
msgid "Additionally, you may also specify a maximum number of documents for the collection using the ``max`` field as in the following document:"
msgstr ""

#: ../source/core/capped-collections.txt:141
# 69af48f27095421fbdff6219a2cbc42b
msgid "The ``size`` argument is *always* required, even when you specify ``max`` number of documents. MongoDB will remove older documents if a collection reaches the maximum size limit before it reaches the maximum document count."
msgstr ""

#: ../source/core/capped-collections.txt:0
# b09085ba059e484c9f874b715fa7255a
msgid "See"
msgstr ""

#: ../source/core/capped-collections.txt:151
# 98c68a7e9eca418bb1550fff00115449
msgid "Query a Capped Collection"
msgstr ""

#: ../source/core/capped-collections.txt:153
# 063388ff0d5646f5a015b6a5006b5a76
msgid "If you perform a :method:`~db.collection.find()` on a capped collection with no ordering specified, MongoDB guarantees that the ordering of results is the same as the insertion order."
msgstr ""

#: ../source/core/capped-collections.txt:157
# 10aeed845b0149f8a061e0f1e316d0f7
msgid "To retrieve documents in reverse insertion order, issue :method:`~db.collection.find()` along with the :method:`~cursor.sort()` method with the :operator:`$natural` parameter set to ``-1``, as shown in the following example:"
msgstr ""

#: ../source/core/capped-collections.txt:167
# 4bfaebcf0ede4490a042ca2a8b48fa64
msgid "Check if a Collection is Capped"
msgstr ""

#: ../source/core/capped-collections.txt:169
# bf8ec5a15b584d579a7841f59129e53e
msgid "Use the :method:`~db.collection.isCapped()` method to determine if a collection is capped, as follows:"
msgstr ""

#: ../source/core/capped-collections.txt:177
# 634e9a00057d44229c5a040e678a4602
msgid "Convert a Collection to Capped"
msgstr ""

#: ../source/core/capped-collections.txt:179
# 9e382d0e0e9d491bac6b84c16d826274
msgid "You can convert a non-capped collection to a capped collection with the :dbcommand:`convertToCapped` command:"
msgstr ""

#: ../source/core/capped-collections.txt:186
# 274e1028e6a94103857e8fb221ba861a
msgid "The ``size`` parameter specifies the size of the capped collection in bytes."
msgstr ""

#: ../source/includes/warning-blocking-global.rst:3
# 782c762004104e9e859140f2b4f00943
msgid "This command obtains a global write lock and will block other operations until it has completed."
msgstr ""

#: ../source/core/capped-collections.txt:192
# 81d90216997e4af4b347b2bffa36f30e
msgid "Automatically Remove Data After a Specified Period of Time"
msgstr ""

#: ../source/core/capped-collections.txt:194
# fb814989ca7f4f0cbbfa1402c32a99d1
msgid "For additional flexibility when expiring data, consider MongoDB's :term:`TTL` indexes, as described in :doc:`/tutorial/expire-data`. These indexes allow you to expire and remove data from normal collections using a special type, based on the value of a date-typed field and a TTL value for the index."
msgstr ""

#: ../source/core/capped-collections.txt:200
# 46a733f840f945388972d1107df9da22
msgid ":doc:`TTL Collections </tutorial/expire-data>` are not compatible with capped collections."
msgstr ""

#: ../source/core/capped-collections.txt:204
# 4359103a9f9e4e2b8f2ca5662fbb9c74
msgid "Tailable Cursor"
msgstr ""

#: ../source/core/capped-collections.txt:206
# 4e4fab7d10a04bae91dffd46a95ee722
msgid "You can use a :term:`tailable cursor` with capped collections. Similar to the Unix ``tail -f`` command, the tailable cursor \"tails\" the end of a capped collection. As new documents are inserted into the capped collection, you can use the tailable cursor to continue retrieving documents."
msgstr ""

#: ../source/core/capped-collections.txt:212
# e9a5c7d5c9da45258dda1e20cfd99584
msgid "See :doc:`/core/tailable-cursors` for information on creating a tailable cursor."
msgstr ""

