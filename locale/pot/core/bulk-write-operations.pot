# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/bulk-write-operations.txt:3
# ffd26ccb8e4b4de4a944da775e352e6b
msgid "Bulk Write Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:0
# 6254b06bd26949e1bddb1abe29d3c9b6
msgid "On this page"
msgstr ""

#: ../source/core/bulk-write-operations.txt:14
# d1f2c97ebb2a40778a35cb66471fa106
msgid "Overview"
msgstr ""

#: ../source/core/bulk-write-operations.txt:16
# bcf144f731244c11894842c9eba5524b
msgid "MongoDB provides clients the ability to perform write operations in bulk. Bulk write operations affect a *single* collection. MongoDB allows applications to determine the acceptable level of acknowledgement required for bulk write operations."
msgstr ""

#: ../source/core/bulk-write-operations.txt:23
# a6c5802b562d436e93226d6d2f09ff16
msgid "The :method:`db.collection.bulkWrite()` method provides the ability to perform bulk insert, update, and remove operations. MongoDB also supports bulk insert through the :method:`db.collection.insertMany()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:29
# e45ea6c585374fcdbebc314cb7de1f94
msgid "Ordered vs Unordered Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:31
# cc3d49d645cc4393956349f65ca58069
msgid "Bulk write operations can be either *ordered* or *unordered*."
msgstr ""

#: ../source/core/bulk-write-operations.txt:33
# 2bdfe96b9c4e435892058687ed6d6c83
msgid "With an ordered list of operations, MongoDB executes the operations serially. If an error occurs during the processing of one of the write operations, MongoDB will return without processing any remaining write operations in the list. See :ref:`ordered Bulk Write<bulkwrite-example-bulk-write-operation>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:39
# 1706fccb82dc494b939c49275bc84b98
msgid "With an unordered list of operations, MongoDB can execute the operations in parallel, but this behavior is not guaranteed. If an error occurs during the processing of one of the write operations, MongoDB will continue to process remaining write operations in the list. See :ref:`bulkwrite-example-unordered-bulk-write`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:46
# 1e36379236cc4da9b01e173644696c21
msgid "Executing an ordered list of operations on a sharded collection will generally be slower than executing an unordered list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/core/bulk-write-operations.txt:51
# aff7a98b9f684b1baa8d33e74d5bd714
msgid "By default, :method:`~db.collection.bulkWrite()` performs ``ordered`` operations. To specify ``unordered`` write operations, set ``ordered : false`` in the options document."
msgstr ""

#: ../source/core/bulk-write-operations.txt:55
# 792b06f8c83b4c5e899de3e37fe76ccf
msgid "See :ref:`bulkwrite-write-operations-executionofoperations`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:58
# b1e177372d1f44e4a7a3ce798a0d9a17
msgid "bulkWrite() Methods"
msgstr ""

#: ../source/core/bulk-write-operations.txt:60
# c8f150b52d57419fb37f5ab413ed647c
msgid ":method:`~db.collection.bulkWrite()` supports the following write operations:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:62
# ad93dd2d4f85431cb7930ac877fab06b
msgid ":ref:`bulkwrite-write-operations-insertOne`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:63
# c750ba8dacf141f382d8c87320693738
msgid ":ref:`updateOne <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:64
# 9e32544cb6364030bbffbec9cfd7f02b
msgid ":ref:`updateMany <bulkwrite-write-operations-updateOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:65
# 9eba5383c37f46e686ac1a8e7fb76a74
msgid ":ref:`bulkwrite-write-operations-replaceOne`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:66
# d115de195c9b49a49a8daea959a049f1
msgid ":ref:`deleteOne <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:67
# 9b541c1e12f64dca9491fd06a653f5e7
msgid ":ref:`deleteMany <bulkwrite-write-operations-deleteOneMany>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:69
# 79ac4fc23f2d4b6cbb3bba01973fdfbd
msgid "Each write operation is passed to :method:`~db.collection.bulkWrite()` as a document in an array."
msgstr ""

#: ../source/core/bulk-write-operations.txt:72
# 6e9a9f7eb64c4611b7945402807a7960
msgid "For example, the following performs multiple write operations:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:74
# 06b600aa60b8470bb1b58bf15047a546
msgid "The ``characters`` collection contains the following documents:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:82
# 8289d228108248bfa32e8064eb297c3e
msgid "The following :method:`~db.collection.bulkWrite()` performs multiple operations on the collection:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:128
# 467e22b3d514470881c66e038ed25af4
msgid "The operation returns the following:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:147
# 4a391118c6bb4056ac1df3e574fecf99
msgid "For more examples, see :ref:`bulkWrite() Examples <bulkwrite-example-bulk-write-operation>`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:151
# 2546f909bd25429a828fd54152531697
msgid "Strategies for Bulk Inserts to a Sharded Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:153
# 926e995b8a3048f59dabe655dd840607
msgid "Large bulk insert operations, including initial data inserts or routine data import, can affect :term:`sharded cluster` performance. For bulk inserts, consider the following strategies:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:158
# 428771ad3d1b46acaf8793c365c86787
msgid "Pre-Split the Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:160
# b29218db14f2401782d248dffc0ae325
msgid "If the sharded collection is empty, then the collection has only one initial :term:`chunk`, which resides on a single shard. MongoDB must then take time to receive data, create splits, and distribute the split chunks to the available shards. To avoid this performance cost, you can pre-split the collection, as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:168
# dc900a831a2541249b3e1929b3d799ab
msgid "Unordered Writes to ``mongos``"
msgstr ""

#: ../source/core/bulk-write-operations.txt:170
# dbc0a2e12adf4164b3a1d947e100c683
msgid "To improve write performance to sharded clusters, use :method:`~db.collection.bulkWrite()` with the optional parameter ``ordered`` set to ``false``. :program:`mongos` can attempt to send the writes to multiple shards simultaneously. For *empty* collections, first pre-split the collection as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:178
# ce4ab0d10a7641a3842cbb6396fcfb06
msgid "Avoid Monotonic Throttling"
msgstr ""

#: ../source/core/bulk-write-operations.txt:180
# 11137a5c00de4a279f2420138287ec8b
msgid "If your shard key increases monotonically during an insert, then all inserted data goes to the last chunk in the collection, which will always end up on a single shard. Therefore, the insert capacity of the cluster will never exceed the insert capacity of that single shard."
msgstr ""

#: ../source/core/bulk-write-operations.txt:185
# 41136b18c4c84afcbfc3d4b1fe5679f2
msgid "If your insert volume is larger than what a single shard can process, and if you cannot avoid a monotonically increasing shard key, then consider the following modifications to your application:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:189
# b7567d92306f42ff9a74ada0bd194fb4
msgid "Reverse the binary bits of the shard key. This preserves the information and avoids correlating insertion order with increasing sequence of values."
msgstr ""

#: ../source/core/bulk-write-operations.txt:193
# 47e35695b21f4d6cbecf3659bac8e478
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

#: ../source/core/bulk-write-operations.txt:0
# 4ace5c8f6d724c008b5e7a695167a4a4
msgid "Example"
msgstr ""

#: ../source/core/bulk-write-operations.txt:215
# b6f9639f3a8a49928ea059145ce4f7a7
msgid ":ref:`sharding-shard-key` for information on choosing a sharded key. Also see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""

