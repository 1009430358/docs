# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/bulk-write-operations.txt:5
# 00a4f909c7fb4a67ac9ecfb1fa95b5b5
msgid "Bulk Write Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:10
# 83d5a15e8d9b47c09eff9c386e6642f1
msgid "Overview"
msgstr ""

#: ../source/core/bulk-write-operations.txt:12
# 9077fea5eb074106b0e6591b25873b5f
msgid "MongoDB provides clients the ability to perform write operations in bulk. Bulk write operations affect a *single* collection. MongoDB allows applications to determine the acceptable level of acknowledgement required for bulk write operations."
msgstr ""

#: ../source/core/bulk-write-operations.txt:17
# 185689221c634fc59eb0e3288f43e80c
msgid "New :method:`Bulk` methods provide the ability to perform bulk insert, update, and remove operations. MongoDB also supports bulk insert through passing an array of documents to the :method:`db.collection.insert()` method."
msgstr ""

#: ../source/core/bulk-write-operations.txt:24
# e7f2f846e13e4b86a7597aa3cf514e83
msgid "Previous versions of MongoDB provided the ability for bulk inserts only. With previous versions, clients could perform bulk inserts by passing an array of documents to the :v2.4:`db.collection.insert() </core/bulk-inserts>` method. To see the documentation for earlier versions, see :v2.4:`Bulk Inserts </core/bulk-inserts>`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:31
# 53012532e79a481a863a5ae9df190639
msgid "Ordered vs Unordered Operations"
msgstr ""

#: ../source/core/bulk-write-operations.txt:33
# c43e5d0bbca6447fba364ada1a375835
msgid "Bulk write operations can be either *ordered* or *unordered*. With an ordered list of operations, MongoDB executes the operations serially. If an error occurs during the processing of one of the write operations, MongoDB will return without processing any remaining write operations in the list."
msgstr ""

#: ../source/core/bulk-write-operations.txt:39
# 2f790e6cfa55476ea3e4fd6e25564218
msgid "With an unordered list of operations, MongoDB can execute the operations in parallel. If an error occurs during the processing of one of the write operations, MongoDB will continue to process remaining write operations in the list."
msgstr ""

#: ../source/core/bulk-write-operations.txt:44
# 508ee8a9f88949f0bd1908f9903dffd4
msgid "Executing an ordered list of operations on a sharded collection will generally be slower than executing an unordered list since with an ordered list, each operation must wait for the previous operation to finish."
msgstr ""

#: ../source/core/bulk-write-operations.txt:50
# 7bf5e0bed18a4160a77b8c61f040f2af
msgid "``Bulk`` Methods"
msgstr ""

#: ../source/core/bulk-write-operations.txt:52
# b4c834ee195f4f7e846b14be1480d1e4
msgid "To use the :method:`Bulk()` methods:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:54
# 3e14a2f863e747ebbbe09600f0003d5e
msgid "Initialize a list of operations using either :method:`db.collection.initializeUnorderedBulkOp()` or :method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:58
# 59d88836b7044122bed3135f95198f64
msgid "Add write operations to the list using the following methods:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:60
# f74ce884beb34af49cded6b9f09bc36c
msgid ":method:`Bulk.insert()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:61
# 2592db94158c4d678eb8aaffef63b52c
msgid ":method:`Bulk.find()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:62
# 7add7ea67bcd4709bcd25cd2601af197
msgid ":method:`Bulk.find.upsert()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:63
# 4c82fb60caa44ea7904abdb58ecc7c43
msgid ":method:`Bulk.find.update()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:64
# f5b7728a3269435193de68a9db83a9d3
msgid ":method:`Bulk.find.updateOne()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:65
# 61dd39a392174e2c96d627d5612d574f
msgid ":method:`Bulk.find.replaceOne()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:66
# 1802f8c3037b4bacaf5d76183a70c191
msgid ":method:`Bulk.find.remove()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:67
# e6bb9d603e56440cbfcc5fea0e442985
msgid ":method:`Bulk.find.removeOne()`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:69
# 206ecd708d664a448d3066e05cdabc26
msgid "To execute the list of operations, use the :method:`Bulk.execute()` method. You can specify the write concern for the list in the :method:`Bulk.execute()` method."
msgstr ""

#: ../source/core/bulk-write-operations.txt:73
# 0a45e78b87804f10ae1fc9bca3c75921
msgid "Once executed, you cannot re-execute the list without reinitializing."
msgstr ""

#: ../source/core/bulk-write-operations.txt:76
# 79dc3414ecb44a648c74e5109989f28d
msgid "For example,"
msgstr ""

#: ../source/core/bulk-write-operations.txt:86
# 03f4085ea3ec4b4db4ced9d70581dab0
msgid "For more examples, refer to the reference page for each :doc:`/reference/method/js-bulk` method. For information and examples on performing bulk insert using the :method:`db.collection.insert()`, see :method:`db.collection.insert()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:91
# 96c93c82e5a44b7c961e9577aabf1e26
msgid ":ref:`rel-notes-write-operations`"
msgstr ""

#: ../source/core/bulk-write-operations.txt:94
# 23439c90429441cd949dad9ea54f3a39
msgid "``Bulk`` Execution Mechanics"
msgstr ""

#: ../source/core/bulk-write-operations.txt:96
# 4761f9c6e6184059a3914a1f55330779
msgid "When executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB groups adjacent operations by the :data:`operation type <batchType>`. When executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB groups and may also reorder the operations to increase performance. As such, when performing *unordered* bulk operations, applications should not depend on the ordering."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
# 5aebbae669304354a18bff67931df78a
msgid "Each group of operations can have at most :limit:`1000 operations <Write Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write Command Operation Limit Size>`, MongoDB will divide the group into smaller groups of 1000 or less. For example, if the bulk operations list consists of 2000 insert operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
# 2fdf7e4bcb8647e6a19ab02a5022de89
msgid "The sizes and grouping mechanics are internal performance details and are subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
# a6ef0e5db497469f950bbe0473f359ed
msgid "To see how the operations are grouped for a bulk operation execution, call :method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/core/bulk-write-operations.txt:107
# b954ad6e388c448a93b689739960c794
msgid "For more information, see :method:`Bulk.execute()`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:110
# 0afbfc1e89aa4751b704b62304dc51bc
msgid "Strategies for Bulk Inserts to a Sharded Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:112
# 9263798f899441109a4e695855b5b15a
msgid "Large bulk insert operations, including initial data inserts or routine data import, can affect :term:`sharded cluster` performance. For bulk inserts, consider the following strategies:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:117
# 6e8a8baadabc4102b98a1bef59582f58
msgid "Pre-Split the Collection"
msgstr ""

#: ../source/core/bulk-write-operations.txt:119
# 818c4efd94a44605b5f0a3b375adb48b
msgid "If the sharded collection is empty, then the collection has only one initial :term:`chunk`, which resides on a single shard. MongoDB must then take time to receive data, create splits, and distribute the split chunks to the available shards. To avoid this performance cost, you can pre-split the collection, as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:127
# 904dcc00f700418dba50cc4a3c6133f8
msgid "Insert to Multiple ``mongos``"
msgstr ""

#: ../source/core/bulk-write-operations.txt:129
# 076d26db67a64ebbacea755366fc22b4
msgid "To parallelize import processes, send bulk insert or insert operations to more than one :program:`mongos` instance. For *empty* collections, first pre-split the collection as described in :doc:`/tutorial/split-chunks-in-sharded-cluster`."
msgstr ""

#: ../source/core/bulk-write-operations.txt:135
# 74bd733734954e92829353f4af79d511
msgid "Avoid Monotonic Throttling"
msgstr ""

#: ../source/core/bulk-write-operations.txt:137
# 03c8df217b1443729d413c285a16d713
msgid "If your shard key increases monotonically during an insert, then all inserted data goes to the last chunk in the collection, which will always end up on a single shard. Therefore, the insert capacity of the cluster will never exceed the insert capacity of that single shard."
msgstr ""

#: ../source/core/bulk-write-operations.txt:142
# 28ea284c3cd543b3a7b3f714b59b7f79
msgid "If your insert volume is larger than what a single shard can process, and if you cannot avoid a monotonically increasing shard key, then consider the following modifications to your application:"
msgstr ""

#: ../source/core/bulk-write-operations.txt:146
# 09aa87d430364ab49fe4c86791f2e997
msgid "Reverse the binary bits of the shard key. This preserves the information and avoids correlating insertion order with increasing sequence of values."
msgstr ""

#: ../source/core/bulk-write-operations.txt:150
# 4cfd583f872a44f58a3f73d66595589b
msgid "Swap the first and last 16-bit words to \"shuffle\" the inserts."
msgstr ""

#: ../source/core/bulk-write-operations.txt:0
# 1a06dda979a04fe3a31a235d5a113978
msgid "Example"
msgstr ""

#: ../source/core/bulk-write-operations.txt:172
# 6a48885a0c9344d988e3cb84939ea5af
msgid ":ref:`sharding-shard-key` for information on choosing a sharded key. Also see :ref:`Shard Key Internals <sharding-internals-shard-keys>` (in particular, :ref:`sharding-internals-operations-and-reliability`)."
msgstr ""

