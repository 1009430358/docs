# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-introduction.txt:5
# 194443fd89ef4e3f8930f9da14cb3874
msgid "Sharding Introduction"
msgstr ""

#: ../source/core/sharding-introduction.txt:11
# c0135f0f1da24da38b9cab9308286e36
msgid "Sharding is a method for storing data across multiple machines. MongoDB uses sharding to support deployments with very large data sets and high throughput operations."
msgstr ""

#: ../source/core/sharding-introduction.txt:16
# 78fa5f41483b41698fee7a42a764c921
msgid "Purpose of Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:18
# 5c4e5e98cf504e9aa0178f3c8ce40646
msgid "Database systems with large data sets and high throughput applications can challenge the capacity of a single server. High query rates can exhaust the CPU capacity of the server. Larger data sets exceed the storage capacity of a single machine. Finally, working set sizes larger than the system's RAM stress the I/O capacity of disk drives."
msgstr ""

#: ../source/core/sharding-introduction.txt:24
# 209d83860d4c415786419134cfc4817e
msgid "To address these issues of scales, database systems have two basic approaches: **vertical scaling** and **sharding**."
msgstr ""

#: ../source/core/sharding-introduction.txt:27
# ff5b7834210646f28f63d4ad09cd8941
msgid "**Vertical scaling** adds more CPU and storage resources to increase capacity. Scaling by adding capacity has limitations: high performance systems with large numbers of CPUs and large amount of RAM are disproportionately *more expensive* than smaller systems. Additionally, cloud-based providers may only allow users to provision smaller instances.  As a result there is a *practical maximum* capability for vertical scaling."
msgstr ""

#: ../source/core/sharding-introduction.txt:35
# d7333c92a879475786d00832174333cc
msgid "**Sharding**, or *horizontal scaling*, by contrast, divides the data set and distributes the data over multiple servers, or **shards**. Each shard is an independent database, and collectively, the shards make up a single logical database."
msgstr ""

#: ../source/core/sharding-introduction.txt:42
# 2647bdcc3440442bad984512f1230310
msgid "Sharding addresses the challenge of scaling to support high throughput and large data sets:"
msgstr ""

#: ../source/core/sharding-introduction.txt:45
# 03b8250c90404e09b535d421af04af03
msgid "Sharding reduces the number of operations each shard handles. Each shard processes fewer operations as the cluster grows. As a result, a cluster can increase capacity and throughput *horizontally*."
msgstr ""

#: ../source/core/sharding-introduction.txt:49
# 9c33cadcc8d044b7b80c9ac4e48da9fa
msgid "For example, to insert data, the application only needs to access the shard responsible for that record."
msgstr ""

#: ../source/core/sharding-introduction.txt:52
# 5204da3a2ff6443ab826c61821b16827
msgid "Sharding reduces the amount of data that each server needs to store. Each shard stores less data as the cluster grows."
msgstr ""

#: ../source/core/sharding-introduction.txt:55
# 66eb44c374454781b6f00a97d21ed608
msgid "For example, if a database has a 1 terabyte data set, and there are 4 shards, then each shard might hold only 256GB of data. If there are 40 shards, then each shard might hold only 25GB of data."
msgstr ""

#: ../source/core/sharding-introduction.txt:60
# 1540a104cb4145feaf521284166defe9
msgid "Sharding in MongoDB"
msgstr ""

#: ../source/core/sharding-introduction.txt:62
# 358cbe4dbcc243bda7c41870dc1931f7
msgid "MongoDB supports sharding through the configuration of a :term:`sharded clusters <sharded cluster>`."
msgstr ""

#: ../source/core/sharding-introduction.txt:67
# 829e21c0cfd5437fb39866fc322f1fc1
msgid "Sharded cluster has the following components: :term:`shards <shard>`, :term:`query routers <mongos>` and :term:`config servers <config server>`."
msgstr ""

#: ../source/core/sharding-introduction.txt:70
# 1f98b043a7774576806f401ee0eda41b
msgid "**Shards** store the data. To provide high availability and data consistency, in a production sharded cluster, each shard is a :term:`replica set` [#dev-only-shard-deployment]_. For more information on replica sets, see :doc:`Replica Sets </core/replication>`."
msgstr ""

#: ../source/core/sharding-introduction.txt:76
# 17bbacf71be8496097037e9c5cd51bf8
msgid "**Query Routers**, or :program:`mongos` instances, interface with client applications and direct operations to the appropriate shard or shards. The query router processes and targets operations to shards and then returns results to the clients. A sharded cluster can contain more than one query router to divide the client request load. A client sends requests to one query router. Most sharded clusters have many query routers."
msgstr ""

#: ../source/core/sharding-introduction.txt:83
# 5a8d5c4781fb49b5b218742d84e2a1d9
msgid "**Config servers** store the cluster's metadata. This data contains a mapping of the cluster's data set to the shards. The query router uses this metadata to target operations to specific shards. Production sharded clusters have *exactly* 3 config servers."
msgstr ""

#: ../source/core/sharding-introduction.txt:88
# 27fb84355f2e448d8d2ed6da4175fb4c
msgid "For development and testing purposes only, each **shard** can be a single :program:`mongod` instead of a replica set. Do **not** deploy production clusters without 3 config servers."
msgstr ""

#: ../source/core/sharding-introduction.txt:96
# a79f9b411a8043038ddf820a7c5fa540
msgid "Data Partitioning"
msgstr ""

#: ../source/core/sharding-introduction.txt:98
# 45d82ad0ee8c44f5b1b63e7e8054d430
msgid "MongoDB distributes data, or shards, at the collection level. Sharding partitions a collection's data by the **shard key**."
msgstr ""

#: ../source/core/sharding-introduction.txt:102
# 0480822a60aa46d791d6136aab04f6de
msgid "Shard Keys"
msgstr ""

#: ../source/core/sharding-introduction.txt:104
# 65dd4be70dd14cb48f3156de5a74675d
msgid "To shard a collection, you need to select a **shard key**. A :term:`shard key` is either an indexed field or an indexed compound field that exists in every document in the collection. MongoDB divides the shard key values into **chunks** and distributes the :term:`chunks <chunk>` evenly across the shards. To divide the shard key values into chunks, MongoDB uses either **range based partitioning** or **hash based partitioning**. See the :doc:`Shard Key </core/sharding-shard-key>` documentation for more information."
msgstr ""

#: ../source/core/sharding-introduction.txt:114
# a727b92793d7492292531f39a1ff1373
msgid "Range Based Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:116
# b40b4d76819b42c9b211100b0ff90e6f
msgid "For *range-based sharding*, MongoDB divides the data set into ranges determined by the shard key values to provide **range based partitioning**. Consider a numeric shard key: If you visualize a number line that goes from negative infinity to positive infinity, each value of the shard key falls at some point on that line. MongoDB partitions this line into smaller, non-overlapping ranges called **chunks** where a chunk is range of values from some minimum value to some maximum value."
msgstr ""

#: ../source/core/sharding-introduction.txt:125
# 23a18257c82c451b93aee63d33aaad3a
msgid "Given a range based partitioning system, documents with \"close\" shard key values are likely to be in the same chunk, and therefore on the same shard."
msgstr ""

#: ../source/core/sharding-introduction.txt:132
# 274ccc8542b94a059206619004e438a5
msgid "Hash Based Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:134
# 642046bf7247494680cecb55f22df8df
msgid "For *hash based partitioning*, MongoDB computes a hash of a field's value, and then uses these hashes to create chunks."
msgstr ""

#: ../source/core/sharding-introduction.txt:137
# 622b5c4159e8415788db501e532dfdfc
msgid "With hash based partitioning, two documents with \"close\" shard key values are *unlikely* to be part of the same chunk. This ensures a more random distribution of a collection in the cluster."
msgstr ""

#: ../source/core/sharding-introduction.txt:144
# d77037dff60842a2be2fb22423c00a2e
msgid "Performance Distinctions between Range and Hash Based Partitioning"
msgstr ""

#: ../source/core/sharding-introduction.txt:146
# 68760f7868684544829d8196f60ee46b
msgid "Range based partitioning supports more efficient range queries. Given a range query on the shard key, the query router can easily determine which chunks overlap that range and route the query to only those shards that contain these chunks."
msgstr ""

#: ../source/core/sharding-introduction.txt:151
# 962ed88540dd44d8bedfab200e75043c
msgid "However, range based partitioning can result in an uneven distribution of data, which may negate some of the benefits of sharding. For example, if the shard key is a linearly increasing field, such as time, then all requests for a given time range will map to the same chunk, and thus the same shard. In this situation, a small set of shards may receive the majority of requests and the system would not scale very well."
msgstr ""

#: ../source/core/sharding-introduction.txt:159
# 3e45f0400746411fb76219490ba34dd1
msgid "Hash based partitioning, by contrast, ensures an even distribution of data at the expense of efficient range queries. Hashed key values results in random distribution of data across chunks and therefore shards. But random distribution makes it more likely that a range query on the shard key will not be able to target a few shards but would more likely query every shard in order to return a result."
msgstr ""

#: ../source/core/sharding-introduction.txt:167
# 0fbc3960d2284cdd9d83100cb7d828b3
msgid "Customized Data Distribution with Tag Aware Sharding"
msgstr ""

#: ../source/core/sharding-introduction.txt:169
# 832d1fa10c5f4bb2b9fd75b93a872a99
msgid "MongoDB allows administrators to direct the balancing policy using **tag aware sharding**. Administrators create and associate tags with ranges of the shard key, and then assign those tags to the shards. Then, the balancer migrates tagged data to the appropriate shards and ensures that the cluster always enforces the distribution of data that the tags describe."
msgstr ""

#: ../source/core/sharding-introduction.txt:176
# 29b38234d5fc4509b2c2a333750d7485
msgid "Tags are the primary mechanism to control the behavior of the balancer and the distribution of chunks in a cluster.  Most commonly, tag aware sharding serves to improve the locality of data for sharded clusters that span multiple data centers."
msgstr ""

#: ../source/core/sharding-introduction.txt:181
# 7ea07afa63b04949ae4969ae539e58d4
msgid "See :doc:`/core/tag-aware-sharding` for more information."
msgstr ""

#: ../source/core/sharding-introduction.txt:184
# d45086ea310047c8a9c60c790877b1db
msgid "Maintaining a Balanced Data Distribution"
msgstr ""

#: ../source/core/sharding-introduction.txt:186
# 303157bee12346798411808f3d38c8f1
msgid "The addition of new data or the addition of new servers can result in data distribution imbalances within the cluster, such as a particular shard contains significantly more chunks than another shard or a size of a chunk is significantly greater than other chunk sizes."
msgstr ""

#: ../source/core/sharding-introduction.txt:191
# 920613b699d14c4e9f01f551c3b723ff
msgid "MongoDB ensures a balanced cluster using two background process: splitting and the balancer."
msgstr ""

#: ../source/core/sharding-introduction.txt:195
# f30386a2722d4a0a95011221afa66456
msgid "Splitting"
msgstr ""

#: ../source/core/sharding-introduction.txt:197
# 32fc881a7de74c019447dcc7fdbaade8
msgid "Splitting is a background process that keeps chunks from growing too large. When a chunk grows beyond a :ref:`specified chunk size <sharding-chunk-size>`, MongoDB splits the chunk in half. Inserts and updates triggers splits. Splits are an efficient meta-data change. To create splits, MongoDB does *not* migrate any data or affect the shards."
msgstr ""

#: ../source/core/sharding-introduction.txt:207
# 0285c0eef72048a0a0b4e47c8ecca92b
msgid "Balancing"
msgstr ""

#: ../source/core/sharding-introduction.txt:209
# ccf6f6dc250749da836fcae1e0215bbc
msgid "The :ref:`balancer <sharding-balancing-internals>` is a background process that manages chunk migrations. The balancer can run from any of the query routers in a cluster."
msgstr ""

#: ../source/core/sharding-introduction.txt:213
# 15e693269a7c491bbf27539ecfda6cbc
msgid "When the distribution of a sharded collection in a cluster is uneven, the balancer process migrates chunks from the shard that has the largest number of chunks to the shard with the least number of chunks until the collection balances. For example: if collection ``users`` has 100 chunks on *shard 1* and 50 chunks on *shard 2*, the balancer will migrate chunks from *shard 1* to *shard 2* until the collection achieves balance."
msgstr ""

#: ../source/core/sharding-introduction.txt:221
# 435c61db70c24092a03a36550dc8cd22
msgid "The shards manage *chunk migrations* as a background operation between an *origin shard* and a *destination shard*.  During a chunk migration, the *destination shard* is sent all the current documents in the chunk from the *origin shard*. Next, the destination shard captures and applies all changes made to the data during the migration process. Finally, the metadata regarding the location of the chunk on *config server* is updated."
msgstr ""

#: ../source/core/sharding-introduction.txt:229
# 90721ef135424683bc4cc00929fd6b9a
msgid "If there's an error during the migration, the balancer aborts the process leaving the chunk unchanged on the origin shard. MongoDB removes the chunk's data from the origin shard **after** the migration completes successfully."
msgstr ""

#: ../source/core/sharding-introduction.txt:237
# 6ecb401641ba4d4dbe04827c0c753ec1
msgid "Adding and Removing Shards from the Cluster"
msgstr ""

#: ../source/core/sharding-introduction.txt:239
# be8a8d2533024609a87e30dcacf07c74
msgid "Adding a shard to a cluster creates an imbalance  since the new shard has no chunks. While MongoDB begins migrating data to the new shard immediately, it can take some time before the cluster balances."
msgstr ""

#: ../source/core/sharding-introduction.txt:243
# a2402c66f30240f7abec9c3f1d1e4bbc
msgid "When removing a shard, the balancer migrates all chunks from a shard to other shards. After migrating all data and updating the meta data, you can safely remove the shard."
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:4
# df93cda7780641a48db6b37b4a4fdc07
msgid "Additional Resources"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:6
# 03b17386f31a4eb4964a9ffb419ebf69
msgid "`Sharding Methods for MongoDB (Presentation) <http://www.mongodb.com/presentations/webinar-sharding-methods-mongodb?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:7
# 859f268e333e49ed8eb036336ccfa8d1
msgid "`Everything You Need to Know About Sharding (Presentation) <http://www.mongodb.com/presentations/webinar-everything-you-need-know-about-sharding?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:8
# 598db23d53024371b4993962c4d3d9f0
msgid "`MongoDB for Time Series Data: Sharding <http://www.mongodb.com/presentations/mongodb-time-series-data-part-3-sharding?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:9
# df40f8d84df94a20846d96a972bfee27
msgid "`MongoDB Operations Best Practices White Paper <http://www.mongodb.com/lp/white-paper/ops-best-practices?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:10
# dd8c77eafa494017ae256a34d81e4f48
msgid "`Talk to a MongoDB Expert About Scaling <http://www.mongodb.com/lp/contact/planning-for-scale?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:11
# 7f1b6a27237f4166aa93df11437cdda4
msgid "`MongoDB Consulting Package <https://www.mongodb.com/products/consulting?jmp=docs>`_"
msgstr ""

#: ../source/includes/extracts/additional-resources-sharding-introduction.rst:12
# d569996027204c3e84700f3858600720
msgid "`Quick Reference Cards <https://www.mongodb.com/lp/misc/quick-reference-cards?jmp=docs>`_"
msgstr ""

