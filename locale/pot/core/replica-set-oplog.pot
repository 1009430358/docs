# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:5
# 5e852306f68542688f8f83a9c1a5deeb
msgid "Replica Set Oplog"
msgstr ""

#: ../source/core/replica-set-oplog.txt:0
# ded03ad808c04db89eb88f852c4deadd
msgid "On this page"
msgstr ""

#: ../source/core/replica-set-oplog.txt:15
# 31492a2d07b34a2ea7eda72f2976a948
msgid "The :term:`oplog` (operations log) is a special :term:`capped collection` that keeps a rolling record of all operations that modify the data stored in your databases. MongoDB applies database operations on the :term:`primary` and then records the operations on the primary's oplog. The :term:`secondary` members then copy and apply these operations in an asynchronous process. All replica set members contain a copy of the oplog, in the :data:`local.oplog.rs` collection, which allows them to maintain the current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:24
# d9cd21f8ca464cbb93955d6803170c84
msgid "To facilitate replication, all replica set members send heartbeats (pings) to all other members. Any member can import oplog entries from any other member."
msgstr ""

#: ../source/core/replica-set-oplog.txt:28
# 44f0eefcd8394e2a8e774da8071f9f0c
msgid "Whether applied once or multiple times to the target dataset, each operation in the oplog produces the same results, i.e. each operation in the oplog is :term:`idempotent`. For proper replication operations, entries in the oplog must be idempotent:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:33
# 971ca1a1378f497790b086bbe211bc44
msgid "initial sync"
msgstr ""

#: ../source/core/replica-set-oplog.txt:34
# 967a54b71b7243939bc5223e6626f63a
msgid "post-rollback catch-up"
msgstr ""

#: ../source/core/replica-set-oplog.txt:35
# 91045c73cbcf495d84a9221d944cbbf5
msgid "sharding chunk migrations"
msgstr ""

#: ../source/core/replica-set-oplog.txt:40
# 02af4e01cb9d4154a27326659111fd15
msgid "Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:42
# 811009294d054dfd88d2ffb04c1dbef0
msgid "When you start a replica set member for the first time, MongoDB creates an oplog of a default size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:73
# 8da6b31cd59e44b48104350bda1857b0
msgid "For Unix and Windows systems"
msgstr ""

#: ../source/core/replica-set-oplog.txt:46
# 22fdbfac727740ccb1171d822df4de3b
msgid "The default oplog size depends on the storage engine:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:52
#: ../source/core/replica-set-oplog.txt:83
# 53d10afa4f1444a985cee8d077cdc820
# bbdd1798b64c41c9ad1beb3e58dd5bb7
msgid "Storage Engine"
msgstr ""

#: ../source/core/replica-set-oplog.txt:53
#: ../source/core/replica-set-oplog.txt:84
# 198c6ad4d329424abd6ce00ade3f5019
# 0771dab112dc41e7aac772db4b59a7a3
msgid "Default Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:54
# 7921bd9041174662b29c72c27ca19656
msgid "Lower Bound"
msgstr ""

#: ../source/core/replica-set-oplog.txt:55
# 9d1b7209dc6e41e2bec3e7030a0d841a
msgid "Upper Bound"
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
#: ../source/core/replica-set-oplog.txt:86
# 293c7d56596949f8818f8084c2b226bc
# 728e8718842a46548b57d945313eaf38
msgid ":doc:`/core/inmemory`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
# 683e8c068cfc422a816fd7b055f2878a
msgid "5% of physical memory"
msgstr ""

#: ../source/core/replica-set-oplog.txt:61
# 9b350dc8265d4a2cb12088b7c0e433a0
msgid "50 MB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:63
#: ../source/core/replica-set-oplog.txt:68
#: ../source/core/replica-set-oplog.txt:73
# b6a900a5d80f48bcb90c63e5a833e324
# 0aa8876f0e934bd7ab1f6f3d24f86f34
# 79fb4a68380a4bf4869661f1d91d6899
msgid "50 GB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:65
#: ../source/core/replica-set-oplog.txt:90
# 3813c7249b784ea685cc68a5c381fd28
# ab024959c71542fc8a86c682d05e205b
msgid ":doc:`/core/wiredtiger`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:66
#: ../source/core/replica-set-oplog.txt:71
# f468b204340940a7a8127de63adeabea
# 5d4c4ec56bb149b1902dcc75124726e9
msgid "5% of free disk space"
msgstr ""

#: ../source/core/replica-set-oplog.txt:67
#: ../source/core/replica-set-oplog.txt:72
# f2e8ad8207af44d6b1e765c99a20e543
# d3691b3b2df94936a7d6025927496285
msgid "990 MB"
msgstr ""

#: ../source/core/replica-set-oplog.txt:70
#: ../source/core/replica-set-oplog.txt:93
# 55ec60bcef3447aebc277a4374799ba8
# f589cfa6e61c4707848ec6ef0dcf34d9
msgid ":doc:`/core/mmapv1`"
msgstr ""

#: ../source/core/replica-set-oplog.txt:94
# 3ad777c518584a3c8e1d5d6a978b18dc
msgid "For 64-bit OS X systems"
msgstr ""

#: ../source/core/replica-set-oplog.txt:76
# a73e7e9e42234c1d94b5cc4481167a03
msgid "The default oplog size is 192 MB of either physical memory or free disk space depending on the storage engine:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:88
# b2dc2f174668464f9720dfc743bebca3
msgid "192 MB of physical memory"
msgstr ""

#: ../source/core/replica-set-oplog.txt:91
#: ../source/core/replica-set-oplog.txt:94
# 01ddba9fca944591a1762ae2cd9f4d61
# 646cf5ba9d7a4db7915119e497756ec2
msgid "192 MB of free disk space"
msgstr ""

#: ../source/core/replica-set-oplog.txt:96
# 72cad5725659406ca66beffa6b228971
msgid "In most cases, the default oplog size is sufficient. For example, if an oplog is 5% of free disk space and fills up in 24 hours of operations, then secondaries can stop copying entries from the oplog for up to 24 hours without becoming too stale to continue replicating. However, most replica sets have much lower operation volumes, and their oplogs can hold much higher numbers of operations."
msgstr ""

#: ../source/core/replica-set-oplog.txt:103
# 25af6feb25324703af97a20358497c7d
msgid "Before :program:`mongod` creates an oplog, you can specify its size with the :setting:`~replication.oplogSizeMB` option. However, after you have started a replica set member for the first time, you can only change the size of the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""

#: ../source/core/replica-set-oplog.txt:109
# 1546ba7ccd6d476ea249b7eeaaa0a32d
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:111
# fb7830eddb8a47d3b169d64efa25138e
msgid "If you can predict your replica set's workload to resemble one of the following patterns, then you might want to create an oplog that is larger than the default. Conversely, if your application predominantly performs reads with a minimal amount of write operations, a smaller oplog may be sufficient."
msgstr ""

#: ../source/core/replica-set-oplog.txt:117
# 979b399a082749d192d39daaeb00b343
msgid "The following workloads might require a larger oplog size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:120
# 1a74c1a3c8ad4ad1b46f2ff1d34afdb6
msgid "Updates to Multiple Documents at Once"
msgstr ""

#: ../source/core/replica-set-oplog.txt:122
# d0d0215101204732ada1f0e118530080
msgid "The oplog must translate multi-updates into individual operations in order to maintain :term:`idempotency <idempotent>`. This can use a great deal of oplog space without a corresponding increase in data size or disk use."
msgstr ""

#: ../source/core/replica-set-oplog.txt:128
# 8fa9007614394853b41373d5c29ba42e
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

#: ../source/core/replica-set-oplog.txt:130
# c9f741ffe3b246e8a9c78d6204fae73e
msgid "If you delete roughly the same amount of data as you insert, the database will not grow significantly in disk use, but the size of the operation log can be quite large."
msgstr ""

#: ../source/core/replica-set-oplog.txt:135
# f5527b6fc5394f5d8e7a3b24dc254c72
msgid "Significant Number of In-Place Updates"
msgstr ""

#: ../source/core/replica-set-oplog.txt:137
# a66b729d28324266a4a9bd133f2a8e9f
msgid "If a significant portion of the workload is updates that do not increase the size of the documents, the database records a large number of operations but does not change the quantity of data on disk."
msgstr ""

#: ../source/core/replica-set-oplog.txt:142
# 663fb2b3d4d14fbb9bba0a9dcafc37ff
msgid "Oplog Status"
msgstr ""

#: ../source/core/replica-set-oplog.txt:144
# 93d02a8712c840e9b31b07ccf2a0c853
msgid "To view oplog status, including the size and the time range of operations, issue the :method:`rs.printReplicationInfo()` method. For more information on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:149
# 7b9bf6e59cdb417791445e9c56234dda
msgid "Under various exceptional situations, updates to a :term:`secondary's <secondary>` oplog might lag behind the desired performance time.  Use :method:`db.getReplicationInfo()` from a secondary member and the :doc:`replication status </reference/method/db.getReplicationInfo>` output to assess the current state of replication and determine if there is any unintended replication delay."
msgstr ""

#: ../source/core/replica-set-oplog.txt:156
# 15802f3a95994e47826549df7121e9b2
msgid "See :ref:`Replication Lag <replica-set-replication-lag>` for more information."
msgstr ""

