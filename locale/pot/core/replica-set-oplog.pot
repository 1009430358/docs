# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/replica-set-oplog.txt:5
# 942a30f59b0e4afabc2ddfb886c21913
msgid "Replica Set Oplog"
msgstr ""

#: ../source/core/replica-set-oplog.txt:9
# 621d06491c944e769c404adaf8bd662d
msgid "The :term:`oplog` (operations log) is a special :term:`capped collection` that keeps a rolling record of all operations that modify the data stored in your databases. MongoDB applies database operations on the :term:`primary` and then records the operations on the primary's oplog. The :term:`secondary` members then copy and apply these operations in an asynchronous process. All replica set members contain a copy of the oplog, in the :data:`local.oplog.rs` collection, which allows them to maintain the current state of the database."
msgstr ""

#: ../source/core/replica-set-oplog.txt:18
# de0afaac885c42b489ea21929a5e143a
msgid "To facilitate replication, all replica set members send heartbeats (pings) to all other members. Any member can import oplog entries from any other member."
msgstr ""

#: ../source/core/replica-set-oplog.txt:22
# 2d745a6e99c74fe291554dc392b43591
msgid "Whether applied once or multiple times to the target dataset, each operation in the oplog produces the same results, i.e. each operation in the oplog is :term:`idempotent`. For proper replication operations, entries in the oplog must be idempotent:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:27
# 284c33139f4f49dea35b2f40aa157db0
msgid "initial sync"
msgstr ""

#: ../source/core/replica-set-oplog.txt:28
# 9ba926e7db0d495fb80a9ace462f314c
msgid "post-rollback catch-up"
msgstr ""

#: ../source/core/replica-set-oplog.txt:29
# 4903cc60843f42598fd1471c94e7eddb
msgid "sharding chunk migrations"
msgstr ""

#: ../source/core/replica-set-oplog.txt:34
# beed84d8b0314812b874daf8c11c980a
msgid "Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:36
# 27e6468f24754819a2037bcd4761c54a
msgid "When you start a replica set member for the first time, MongoDB creates an oplog of a default size. The size depends on the architectural details of your operating system."
msgstr ""

#: ../source/core/replica-set-oplog.txt:40
# 67bb83bac02c493bbbdb0fc705707a24
msgid "In most cases, the default oplog size is sufficient. For example, if an oplog is 5% of free disk space and fills up in 24 hours of operations, then secondaries can stop copying entries from the oplog for up to 24 hours without becoming too stale to continue replicating. However, most replica sets have much lower operation volumes, and their oplogs can hold much higher numbers of operations."
msgstr ""

#: ../source/core/replica-set-oplog.txt:47
# e65bdaf3204146a6bef57fc235cd4cda
msgid "Before :program:`mongod` creates an oplog, you can specify its size with the :setting:`~replication.oplogSizeMB` option. However, after you have started a replica set member for the first time, you can only change the size of the oplog using the :doc:`/tutorial/change-oplog-size` procedure."
msgstr ""

#: ../source/core/replica-set-oplog.txt:57
# d73cbd462d1648adbb5594061ca073b2
msgid "By default, the size of the oplog is as follows:"
msgstr ""

#: ../source/core/replica-set-oplog.txt:59
# 0e0075c7fec04de9bbaf503d147672dc
msgid "For 64-bit Linux, Solaris, FreeBSD, and Windows systems, MongoDB allocates 5% of the available free disk space, but will always allocate at least 1 gigabyte and never more than 50 gigabytes."
msgstr ""

#: ../source/core/replica-set-oplog.txt:63
# 361ba66ea7cf42fb92ae6f020b02d467
msgid "For 64-bit OS X systems, MongoDB allocates 183 megabytes of space to the oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:66
# ba24f985c6e54f1892352ca2b1d4817d
msgid "For 32-bit systems, MongoDB allocates about 48 megabytes of space to the oplog."
msgstr ""

#: ../source/core/replica-set-oplog.txt:70
# 060e235ce24a49dfa3ff4180e8d57731
msgid "Workloads that Might Require a Larger Oplog Size"
msgstr ""

#: ../source/core/replica-set-oplog.txt:72
# dc31e7a38db7454cbc1335ba2c5cad15
msgid "If you can predict your replica set's workload to resemble one of the following patterns, then you might want to create an oplog that is larger than the default. Conversely, if your application predominantly performs reads with a minimal amount of write operations, a smaller oplog may be sufficient."
msgstr ""

#: ../source/core/replica-set-oplog.txt:78
# 48fb1db0754849cd9fdea733cda2d40d
msgid "The following workloads might require a larger oplog size."
msgstr ""

#: ../source/core/replica-set-oplog.txt:81
# c9e6436caa61479e91ac15d238783b5c
msgid "Updates to Multiple Documents at Once"
msgstr ""

#: ../source/core/replica-set-oplog.txt:83
# c29126b7444c482986e710379556fdc9
msgid "The oplog must translate multi-updates into individual operations in order to maintain :term:`idempotency <idempotent>`. This can use a great deal of oplog space without a corresponding increase in data size or disk use."
msgstr ""

#: ../source/core/replica-set-oplog.txt:89
# 841d72b42253439981fd61ec35841f6a
msgid "Deletions Equal the Same Amount of Data as Inserts"
msgstr ""

#: ../source/core/replica-set-oplog.txt:91
# 3953bc818a4245dbac341869ce5383fd
msgid "If you delete roughly the same amount of data as you insert, the database will not grow significantly in disk use, but the size of the operation log can be quite large."
msgstr ""

#: ../source/core/replica-set-oplog.txt:96
# 8065549dab7846f4a660ed01ec3f3949
msgid "Significant Number of In-Place Updates"
msgstr ""

#: ../source/core/replica-set-oplog.txt:98
# f4f6534f438f4fd689677d6e296237f8
msgid "If a significant portion of the workload is updates that do not increase the size of the documents, the database records a large number of operations but does not change the quantity of data on disk."
msgstr ""

#: ../source/core/replica-set-oplog.txt:103
# c57ba831a10e4c1f9be6c4f427d831b2
msgid "Oplog Status"
msgstr ""

#: ../source/core/replica-set-oplog.txt:105
# 41e269f18cfc47f3b84f741ad9c2d988
msgid "To view oplog status, including the size and the time range of operations, issue the :method:`rs.printReplicationInfo()` method. For more information on oplog status, see :ref:`replica-set-troubleshooting-check-oplog-size`."
msgstr ""

#: ../source/core/replica-set-oplog.txt:110
# 144558078fb344ada19412352438dee4
msgid "Under various exceptional situations, updates to a :term:`secondary's <secondary>` oplog might lag behind the desired performance time.  Use :method:`db.getReplicationInfo()` from a secondary member and the :doc:`replication status </reference/method/db.getReplicationInfo>` output to assess the current state of replication and determine if there is any unintended replication delay."
msgstr ""

#: ../source/core/replica-set-oplog.txt:117
# eca356a29fa249dcbe221fe385889d3e
msgid "See :ref:`Replication Lag <replica-set-replication-lag>` for more information."
msgstr ""

