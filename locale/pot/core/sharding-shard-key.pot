# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2016
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharding-shard-key.txt:10
# 182125fb8c8d4c29bba97b5a7a7fc83a
msgid "Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:0
# a4bb5ad7cfed4ae3ac0d5f2b654ad2a3
msgid "On this page"
msgstr ""

#: ../source/core/sharding-shard-key.txt:20
# 30ded400f6424411940a3952dab6318c
msgid "The shard key determines the distribution of the collection's :term:`documents <document>` among the cluster's :term:`shards <shard>`. The shard key is either an indexed :term:`field` or an indexed compound field that exists in every document in the collection."
msgstr ""

#: ../source/core/sharding-shard-key.txt:26
# 53ae3138027b439890c672b33070e753
msgid "MongoDB partitions data in the collection using ranges of shard key values. Each range, or :term:`chunk`, defines a non-overlapping range of shard key values. MongoDB distributes the chunks, and their documents, among the shards in the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:33
# b0a1c1df0ac042efb6cb72e34e218b7e
msgid "When a chunk grows beyond the :ref:`chunk size <sharding-chunk-size>`, MongoDB attempts to :term:`split <split>` the chunk into smaller chunks, always based on ranges in the shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:38
# beef4cd16bad4a358af82c63009a6420
msgid "Considerations"
msgstr ""

#: ../source/core/sharding-shard-key.txt:40
# 9608901944e2405880d4dfa8f6a26467
msgid "Shard keys are immutable and cannot be changed after insertion. See the :ref:`system limits for sharded cluster <limits-sharding>` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:44
# 70645a98b5fa4cc4905404ad96de8f06
msgid "The index on the shard key **cannot** be a :ref:`multikey index <index-type-multikey>`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:50
# 64b884d8f16140ba8811c177b63bf4c0
msgid "Hashed Shard Keys"
msgstr ""

#: ../source/core/sharding-shard-key.txt:54
# c6aec6b4c8994f749e2813da9d02b53a
msgid "Hashed shard keys use a :ref:`hashed index <index-hashed-index>` of a single field as the :term:`shard key` to partition data across your sharded cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:58
# c4f1d318a6714cd091f8ca0339dfa0b7
msgid "The field you choose as your hashed shard key should have a good cardinality, or large number of different values. Hashed keys work well with fields that increase monotonically like :term:`ObjectId` values or timestamps."
msgstr ""

#: ../source/core/sharding-shard-key.txt:63
# 0e0e4ede85d64065b1d0324453d14939
msgid "If you shard an empty collection using a hashed shard key, MongoDB will automatically create and migrate chunks so that each shard has two chunks.  You can control how many chunks MongoDB will create with the ``numInitialChunks`` parameter to :dbcommand:`shardCollection` or by manually creating chunks on the empty collection using the :dbcommand:`split` command."
msgstr ""

#: ../source/core/sharding-shard-key.txt:70
# 9b575627d2c349ef99977fdf7ccb1414
msgid "To shard a collection using a hashed shard key, see :doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:0
# 8508bca4601b4799b907a618ceee1eb3
msgid "Tip"
msgstr ""

#: ../source/includes/tip-applications-do-not-need-to-compute-hashes.rst:3
# da8b46428ebd403dac3d3f48481b0e95
msgid "MongoDB automatically computes the hashes when resolving queries using hashed indexes.  Applications do **not** need to compute hashes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:76
# 66031320f8d94289a084e5d2dacb7944
msgid "Impacts of Shard Keys on Cluster Operations"
msgstr ""

#: ../source/core/sharding-shard-key.txt:78
# 98103d91b1764fc1b8d56dc144487867
msgid "The shard key affects write and query performance by determining how the MongoDB partitions data in the cluster and how effectively the :program:`mongos` instances can direct operations to the cluster. Consider the following operational impacts of shard key selection:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:88
# f45e41d1865644ca99cfe7ba8f2b2ad5
msgid "Write Scaling"
msgstr ""

#: ../source/core/sharding-shard-key.txt:90
# aef95c568c7142e3b25280200d2bf19d
msgid "Some possible shard keys will allow your application to take advantage of the increased write capacity that the cluster can provide, while others do not. Consider the following example where you shard by the values of the default :term:`_id` field, which is :term:`ObjectId`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:95
# 8884c1d51d6c479c89afffd3e85e4d37
msgid "MongoDB generates ``ObjectId`` values upon document creation to produce a unique identifier for the object. However, the most significant bits of data in this value represent a time stamp, which means that they increment in a regular and predictable pattern. Even though this value has :ref:`high cardinality <sharding-shard-key-cardinality>`, when using this, *any date, or other monotonically increasing number* as the shard key, all insert operations will be storing data into a single chunk, and therefore, a single shard. As a result, the write capacity of this shard will define the effective write capacity of the cluster."
msgstr ""

#: ../source/core/sharding-shard-key.txt:106
# 16cd654f753c41f58ab5d3eed7e46fa0
msgid "A shard key that increases monotonically will not hinder performance if you have a very low insert rate, or if most of your write operations are :method:`~db.collection.update()` operations distributed through your entire data set. Generally, choose shard keys that have *both* high cardinality and will distribute write operations across the *entire cluster*."
msgstr ""

#: ../source/core/sharding-shard-key.txt:113
# 155701c5a0a147ba8c3b6c57761c8f27
msgid "Typically, a computed shard key that has some amount of \"randomness,\" such as ones that include a cryptographic hash (i.e. MD5 or SHA1) of other content in the document, will allow the cluster to scale write operations. However, random shard keys do not typically provide :ref:`query isolation <sharding-shard-key-query-isolation>`, which is another important characteristic of shard keys."
msgstr ""

#: ../source/core/sharding-shard-key.txt:120
# 82ee3fc2bd0641409f0885309b1d06cb
msgid "MongoDB makes it possible to shard a collection on a hashed index. This can greatly improve write scaling. See :doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:128
# 53a4c6a778b64b3daaf17add46661448
msgid "Querying"
msgstr ""

#: ../source/core/sharding-shard-key.txt:130
# 37aad8525f70427892a1f1c1c2d31240
msgid "The :program:`mongos` provides an interface for applications to interact with sharded clusters that hides the complexity of :term:`data partitioning <partition>`. A :program:`mongos` receives queries from applications, and uses metadata from the :ref:`config server <sharding-config-server>`, to route queries to the :program:`mongod` instances with the appropriate data. While the :program:`mongos` succeeds in making all querying operational in sharded environments, the :term:`shard key` you select can have a profound affect on query performance."
msgstr ""

#: ../source/core/sharding-shard-key.txt:140
# e702363eb8da4a389f9be3def5f24f88
msgid "The :doc:`/core/sharded-cluster-query-router` and :ref:`config server <sharding-config-server>` sections for a more general overview of querying in sharded environments."
msgstr ""

#: ../source/core/sharding-shard-key.txt:148
# 9d3db2deeb1a443199870d7c496ae72d
msgid "Query Isolation"
msgstr ""

#: ../source/core/sharding-shard-key.txt:150
# 4c6302b7aefe4592a3200472abbb366d
msgid "Generally, the fastest queries in a sharded environment are those that :program:`mongos` will route to a single shard, using the :term:`shard key` and the cluster meta data from the :ref:`config server <sharding-config-server>`. For queries that don't include the shard key, :program:`mongos` must query all shards, wait for their responses and then return the result to the application. These \"scatter/gather\" queries can be long running operations."
msgstr ""

#: ../source/core/sharding-shard-key.txt:158
# e87a51792dce4080877722bf953b6439
msgid "If your query includes the first component of a compound shard key [#shard-key-index]_, the :program:`mongos` can route the query directly to a single shard, or a small number of shards, which provides better performance. Even if you query values of the shard key that reside in different chunks, the :program:`mongos` will route queries directly to specific shards."
msgstr ""

#: ../source/core/sharding-shard-key.txt:165
# 318015ccfff3448ab5f8c2c77cc07f51
msgid "To select a shard key for a collection:"
msgstr ""

#: ../source/core/sharding-shard-key.txt:167
# 1b37b95d6d19465da43681efbb14bd99
msgid "determine the most commonly included fields in queries for a given application"
msgstr ""

#: ../source/core/sharding-shard-key.txt:170
# 5c5592bfd0e34228b24efa767748d7bf
msgid "find which of these operations are most performance dependent."
msgstr ""

#: ../source/core/sharding-shard-key.txt:174
# 8433ddd06f784d34b787624dea749213
msgid "If this field has low cardinality (i.e not sufficiently selective) you should add a second field to the shard key making a compound shard key. The data may become more splittable with a compound shard key."
msgstr ""

#: ../source/core/sharding-shard-key.txt:0
# bb5a4f7a31fd4a02b34c3695f305acbd
msgid "See"
msgstr ""

#: ../source/core/sharding-shard-key.txt:182
# 77988759f78242dc88e6c47776c44528
msgid "In many ways, you can think of the shard key a cluster-wide index. However, be aware that sharded systems cannot enforce cluster-wide unique indexes *unless* the unique field is in the shard key. Consider the :doc:`/indexes` page for more information on indexes and compound indexes."
msgstr ""

#: ../source/core/sharding-shard-key.txt:189
# d3487b9fdfc04f63be07a368e99bbd23
msgid "Sorting"
msgstr ""

#: ../source/core/sharding-shard-key.txt:191
# ecb52e300098414489f343ae0c9cc7a7
msgid "In sharded systems, the :program:`mongos` performs a merge-sort of all sorted query results from the shards. See :doc:`/core/sharded-cluster-query-router` and :ref:`index-sort` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:197
# e73d2a0f74a64211aa0b03bd632d9496
msgid "Indivisible Chunks"
msgstr ""

#: ../source/core/sharding-shard-key.txt:199
# 9160db9330ac44828066f411fb9900a8
msgid "An insufficiently granular shard key can result in chunks that are \"unsplittable\". See :ref:`shard-key-selection-divisible` for more information."
msgstr ""

#: ../source/core/sharding-shard-key.txt:204
# 4c6a05b75b1e4f7083510de67706fa55
msgid "Additional Information"
msgstr ""

#: ../source/core/sharding-shard-key.txt:206
# 800d96da3795462cbc837cd7317f3aee
msgid ":doc:`/tutorial/choose-a-shard-key`"
msgstr ""

#: ../source/core/sharding-shard-key.txt:208
# 5dbdf9bc686d44c0af2af6372549fdf0
msgid ":doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
msgstr ""

#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:84
#: ../source/core/sharding-shard-key.txt:144
# 8b59cc2c09244c00a30e102352e9bd7f
# 8b59cc2c09244c00a30e102352e9bd7f
# cf908ff9a86b464da0fdfd1e62fe8530
# 0556fdb357f44e2880eb84f2f2b73534
msgid "shard key"
msgstr ""

#: ../source/core/sharding-shard-key.txt:1
# 8b59cc2c09244c00a30e102352e9bd7f
msgid "sharding"
msgstr ""

#: ../source/core/sharding-shard-key.txt:84
# cf908ff9a86b464da0fdfd1e62fe8530
msgid "write scaling"
msgstr ""

#: ../source/core/sharding-shard-key.txt:144
# 0556fdb357f44e2880eb84f2f2b73534
msgid "query isolation"
msgstr ""

