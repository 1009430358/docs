# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/2d.txt:3
# 5c3b71ced43d46769bcdea4920bfd4f1
msgid "``2d`` Indexes"
msgstr ""

#: ../source/core/2d.txt:7
# 35f7b44b3cba4026b5e395332c6b7204
msgid "Use a ``2d`` index for data stored as points on a two-dimensional plane. The ``2d`` index is intended for legacy coordinate pairs used in MongoDB 2.2 and earlier."
msgstr ""

#: ../source/core/2d.txt:11
# 5e9c18ac63cf454884427d2ec5d0e088
msgid "Use a ``2d`` index if:"
msgstr ""

#: ../source/core/2d.txt:13
# efc8795bc7e84775964dae38fc05e20f
msgid "your database has legacy location data from MongoDB 2.2 or earlier, *and*"
msgstr ""

#: ../source/core/2d.txt:15
# d853f04236d74d54bf2e16fb184a349a
msgid "you do not intend to store any location data as :term:`GeoJSON` objects."
msgstr ""

#: ../source/core/2d.txt:17
# 526866010c59497794c3db3eeb947a6d
msgid "See the :doc:`/reference/operator/query-geospatial` for the query operators that support geospatial queries."
msgstr ""

#: ../source/core/2d.txt:21
# b384ba9adad2460497300475b85b32d0
msgid "Considerations"
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
# c4a0e8faf79e468990b7e0fac2744c43
msgid "The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage require that a collection have *at most* only one |first-geo-index| and/or only one |second-geo-index| whereas :ref:`geospatial query operators <geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) permit collections to have multiple geospatial indexes."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
# 212fcff732db480488acb6d0aa97b436
msgid "The geospatial index restriction for the :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage exists because neither the :dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage syntax includes the location field. As such, index selection among multiple ``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
# 965ad38116a445d89c847f85d314388f
msgid "No such restriction applies for :ref:`geospatial query operators <geospatial-query-selectors>` since these operators take a location field, eliminating the ambiguity."
msgstr ""

#: ../source/core/2d.txt:27
# 537ec5443ebf413bade111f5e6c4f50b
msgid "Do not use a ``2d`` index if your location data includes GeoJSON objects. To index on both legacy coordinate pairs *and* GeoJSON objects, use a :doc:`2dsphere </core/2dsphere>` index."
msgstr ""

#: ../source/core/2d.txt:31
# 6ba1b8a66a7e4eab999fcd56140f9e34
msgid "You cannot use a ``2d`` index as a shard key when sharding a collection. However, you can create and maintain a geospatial index on a sharded collection by using a different field as the shard key."
msgstr ""

#: ../source/core/2d.txt:36
# 1837290a979a48eb94e7f970c4c2d510
msgid "Behavior"
msgstr ""

#: ../source/core/2d.txt:38
# c5b3b467cccd435bb2ac1170254b1c0c
msgid "The ``2d`` index supports calculations on a flat, Euclidean plane. The ``2d`` index also supports *distance-only* calculations on a sphere, but for *geometric* calculations (e.g. :query:`$geoWithin`) on a sphere, store data as GeoJSON objects and use the ``2dsphere`` index type."
msgstr ""

#: ../source/core/2d.txt:44
# 1341eecb32894b179ed03d31eea89556
msgid "A ``2d`` index can reference two fields. The first must be the location field. A ``2d`` compound index constructs queries that select first on the location field, and then filters those results by the additional criteria. A compound ``2d`` index can cover queries."
msgstr ""

#: ../source/core/2d.txt:52
# 45c7e534865b4385be2e30b0aee214e7
msgid "Points on a 2D Plane"
msgstr ""

#: ../source/core/2d.txt:56
# f972ef28467946f5be5c54842d49e7ce
msgid "To store location data as legacy coordinate pairs, use an array or an embedded document. When possible, use the array format:"
msgstr ""

#: ../source/core/2d.txt:63
# 2ce0b0c3590f498d8a70dfabcb0bf5d8
msgid "Consider the embedded document form:"
msgstr ""

#: ../source/core/2d.txt:69
# 17585f0b4acd46ceb1c72e8b4989a3f8
msgid "Arrays are preferred as certain languages do not guarantee associative map ordering."
msgstr ""

#: ../source/core/2d.txt:72
# 76b392b92202436fbf31f35774c9504f
msgid "For all points, if you use longitude and latitude, store coordinates in **longitude, latitude** order."
msgstr ""

#: ../source/core/2d.txt:76
# dd748151c4c84965936886409731b9d8
msgid "``sparse`` Property"
msgstr ""

#: ../source/core/2d.txt:78
# faccdc895c7c4d8fb6473e7fbecab831
msgid "``2d`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a ``2d`` index field (or the field is ``null`` or an empty array), MongoDB does not add an entry for the document to the ``2d`` index. For inserts, MongoDB inserts the document but does not add to the ``2d`` index."
msgstr ""

#: ../source/core/2d.txt:85
# 73db48484fe64fb39ca0cee0df8e4575
msgid "For a compound index that includes a ``2d`` index key along with keys of other types, only the ``2d`` index field determines whether the index references a document."
msgstr ""

