# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2015
# This file is distributed under the same license as the mongodb-manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/applications/replication.txt:3
# 763c8417ef8a4a4a9ea31aa256f8075e
msgid "Replica Set Read and Write Semantics"
msgstr ""

#: ../source/applications/replication.txt:7
# ab011a9c240b4c9281a2141bdcee4600
msgid "From the perspective of a client application, whether a MongoDB instance is running as a single server (i.e. \"standalone\") or a :term:`replica set` is transparent."
msgstr ""

#: ../source/applications/replication.txt:11
# e554d45f593b4ebcb904f9abb4926653
msgid "By default, in MongoDB, read operations to a replica set return results from the :doc:`primary </core/replica-set-primary>`."
msgstr ""

#: ../source/applications/replication.txt:14
# 412c4e2bf4104b758b04a8b62a849919
msgid "Users may configure :term:`read preference` on a per-connection basis to prefer that the read operations return results from the :term:`secondary` members. If clients configure the :term:`read preference` to permit secondary reads, read operations can return data from :term:`secondary` members that have not replicated more recent write operations."
msgstr ""

#: ../source/applications/replication.txt:21
# 23162729bd4c47b883918a37069ffeb1
msgid "This behavior is sometimes characterized as :term:`eventual consistency` because the secondary member's state will *eventually* reflect the primary's state and MongoDB cannot guarantee :term:`strict consistency` for read operations from secondary members. [#edge-cases-2-primaries]_"
msgstr ""

#: ../source/applications/replication.txt:29
# fe2a05057a2346d2b37dca976f924d4d
msgid "In MongoDB, clients can see the results of writes before they are made durable:"
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:1
# bf839bfeca974922b83506f23c3c6140
msgid "Regardless of :doc:`write concern </reference/write-concern>`, other clients can see the result of the write operations before the write operation is acknowledged to the issuing client."
msgstr ""

#: ../source/includes/list-visibility-of-data.rst:5
# ea276212176f44e3a5dee55e1cb50792
msgid "Clients can read data which may be subsequently :doc:`rolled back </core/replica-set-rollbacks>`."
msgstr ""

#: ../source/applications/replication.txt:34
# a326be50f13e45889d956ba8247e9c79
msgid ":term:`Sharded clusters <sharded cluster>` where the shards are also replica sets provide the same operational semantics with regards to write and read operations."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:5
# 49f621720236439c942ff9aaf247b54a
msgid ":doc:`/core/replica-set-write-concern`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:4
# 2bf8462638404a4991235308db72f5c1
msgid "Write concern is the guarantee an application requires from MongoDB to consider a write operation successful."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:9
# 16fa0217ac3b4a1aa5c667be5585e525
msgid ":doc:`/core/read-preference`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:8
# 6ecaeb5ca0e5461db6257a23f2a9201f
msgid "Applications specify *read preference* to control how drivers direct read operations to members of the replica set."
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:12
# 3afa097544fb42a7bbbf303ee8728bd4
msgid ":doc:`/core/read-preference-mechanics`"
msgstr ""

#: ../source/includes/toc/dfn-list-replica-set-read-write-semantics.rst:12
# 25a223c4d9c1418ab07685e190e349aa
msgid "With replica sets, read operations may have additional semantics and behavior."
msgstr ""

#: ../source/includes/footnote-two-primaries-edge-cases.rst:1
# e8c6f970577e42528ccc8691b6e2adb1
msgid "In some circumstances, two nodes in a replica set may *transiently* believe that they are the primary, but at most, one of them will be able to complete writes with :ref:`{w: majority} write concern <wc-w>`. The node that can complete :ref:`{w: majority} <wc-w>` writes is the current primary, and the other node is a former primary that has not yet recognized its demotion, typically due to a :term:`network partition`. When this occurs, clients that connect to the former primary may observe stale data despite having requested read preference :readmode:`primary`."
msgstr ""

