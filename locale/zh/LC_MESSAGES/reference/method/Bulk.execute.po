# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/Bulk.execute.txt:3
msgid "Bulk.execute()"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:8
msgid "Description"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:14
msgid ""
"Executes the list of operations built by the :method:`Bulk()` operations "
"builder."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:17
msgid ":method:`Bulk.execute()` accepts the following parameter:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:21
msgid ""
"A :method:`BulkWriteResult` object that contains the status of the "
"operation."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:24
msgid ""
"After execution, you cannot re-execute the :method:`Bulk()` object without "
"reinitializing. See :method:`db.collection.initializeUnorderedBulkOp()` and "
":method:`db.collection.initializeOrderedBulkOp()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:32
msgid "Behavior"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:35
msgid "Ordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-ordered-list.rst:1
msgid ""
"When executing an :method:`ordered "
"<db.collection.initializeOrderedBulkOp()>` list of operations, MongoDB "
"groups the operations by the :data:`operation type <batchType>` and "
"contiguity; i.e. *contiguous* operations of the same type are grouped "
"together. For example, if an ordered list has two insert operations followed"
" by an update operation followed by another insert operation, MongoDB groups"
" the operations into three separate groups: first group contains the two "
"insert operations, second group contains the update operation, and the third"
" group contains the last insert operation. This behavior is subject to "
"change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:1
#: ../source/includes/fact-bulk-operation-batches.rst:1
msgid ""
"Each group of operations can have at most :limit:`1000 operations <Write "
"Command Operation Limit Size>`. If a group exceeds this :limit:`limit <Write"
" Command Operation Limit Size>`, MongoDB will divide the group into smaller "
"groups of 1000 or less. For example, if the bulk operations list consists of"
" 2000 insert operations, MongoDB creates 2 groups, each with 1000 "
"operations."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:7
#: ../source/includes/fact-bulk-operation-batches.rst:7
msgid ""
"The sizes and grouping mechanics are internal performance details and are "
"subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-batches.rst:10
#: ../source/includes/fact-bulk-operation-batches.rst:10
msgid ""
"To see how the operations are grouped for a bulk operation execution, call "
":method:`Bulk.getOperations()` *after* the execution."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>`"
" list since with an ordered list, each operation must wait for the previous "
"operation to finish."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:44
msgid "Unordered Operations"
msgstr ""

#: ../source/includes/fact-bulk-operation-unordered-list.rst:1
msgid ""
"When executing an :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` list of operations, MongoDB "
"groups the operations. With an unordered bulk operation, the operations in "
"the list may be reordered to increase performance. As such, applications "
"should not depend on the ordering when performing :method:`unordered "
"<db.collection.initializeUnorderedBulkOp()>` bulk operations."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:51
msgid "Examples"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:54
msgid "Execute Bulk Operations"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:56
msgid ""
"The following initializes a :method:`Bulk()` operations builder on the "
"``items`` collection, adds a series of insert operations, and executes the "
"operations:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:67
#: ../source/reference/method/Bulk.execute.txt:105
msgid ""
"The operation returns the following :method:`BulkWriteResult()` object:"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:82
msgid ""
"For details on the return object, see :method:`BulkWriteResult()`. For "
"details on the batches executed, see :method:`Bulk.getOperations()`."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:88
msgid "Override Default Write Concern"
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:90
msgid ""
"The following operation to a replica set specifies a :doc:`write concern "
"</reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of "
"5000 milliseconds such that the method returns after the writes propagate to"
" a majority of the voting replica set members or the method times out after "
"5 seconds."
msgstr ""

#: ../source/includes/fact-majority-write-concern-change.rst:1
msgid ""
"In previous versions, ``majority`` referred to the majority of all members "
"of the replica set."
msgstr ""

#: ../source/reference/method/Bulk.execute.txt:0
msgid "See"
msgstr ""
