#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: 2014-11-04 15:26+0800\n"
"Last-Translator: 吕明明 <phptiger86@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/) <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.6.9\n"
"Language: zh\n"

#: ../source/reference/method/db.collection.update.txt:3
msgid "db.collection.update()"
msgstr "db.collection.update()"

#: ../source/reference/method/db.collection.update.txt:8
msgid "Definition"
msgstr "说明"

#: ../source/reference/method/db.collection.update.txt:12
msgid ""
"Modifies an existing document or documents in a collection. The method can "
"modify specific fields of an existing document or documents or replace an "
"existing document entirely, depending on the :ref:`update parameter <update-"
"parameter>`."
msgstr ""
"修改一个或多个集合中已经存在的文档记录。这个方法可以修改一个或多个已经存在的"
"文档记录中的指定字段，或替换整个已经存在的文档记录，具体操作由传入的参数（ :"
"ref:`update parameter <update-parameter>`）决定。"

#: ../source/reference/method/db.collection.update.txt:17
msgid ""
"By default, the :method:`~db.collection.update()` method updates a "
"**single** document. Set the :ref:`multi-parameter` to update all documents "
"that match the query criteria."
msgstr ""
"默认情况下， :method:`~db.collection.update()` 方法只修改 **一个** 文档记录。"
"设置 :ref:`multi-parameter` 参数后可以批量更新匹配查询条件的所有文档记录。"

#: ../source/reference/method/db.collection.update.txt:21
msgid "The :method:`~db.collection.update()` method has the following form:"
msgstr " :method:`~db.collection.update()` 方法的格式如下："

#: ../source/reference/method/db.collection.update.txt:37
msgid ""
"The :method:`~db.collection.update()` method takes the following parameters:"
msgstr " :method:`~db.collection.update()` 方法可以接收下面这些参数："

#: ../source/reference/method/db.collection.update.txt:42
msgid ""
"The :method:`~db.collection.update()` method returns an object that contains "
"the status of the operation."
msgstr " :method:`~db.collection.update()` 方法会返回一个包含操作状态的对象。"

#: ../source/reference/method/db.collection.update.txt:46
msgid ""
"A :ref:`writeresults-update` object that contains the status of the "
"operation."
msgstr "更新结果对象 （ :ref:`writeresults-update` ）中包含本次操作的状态。"

#: ../source/reference/method/db.collection.update.txt:50
msgid "Behavior"
msgstr "行为"

#: ../source/reference/method/db.collection.update.txt:55
msgid "Safe Writes"
msgstr "安全的写操作"

#: ../source/reference/method/db.collection.update.txt:59
msgid ""
"The :method:`~db.collection.update()` method uses the :dbcommand:`update` "
"command, which uses the default write concern. To specify a different write "
"concern, include the ``writeConcern`` option in the options parameter. See :"
"ref:`example-update-write-concern` for an example."
msgstr ""
" :method:`~db.collection.update()` 方法会调用 :dbcommand:`update` 命令，并使"
"默认的写确认级别。如果想指定写确认级别，可选项参数中设置 ``writeConcern`` 选"
"项。参见  :ref:`example-update-write-concern` 中的例子。"

#: ../source/reference/method/db.collection.update.txt:68
msgid "Update Parameter"
msgstr "Update方法的参数"

#: ../source/reference/method/db.collection.update.txt:70
msgid ""
"The :method:`~db.collection.update()` method either modifies specific fields "
"in existing documents or replaces an existing document entirely."
msgstr ""
" :method:`~db.collection.update()` 方法可以更新文档记录中的指定字段，也可以替"
"换整个文档记录。"

#: ../source/reference/method/db.collection.update.txt:74
#: ../source/reference/method/db.collection.update.txt:213
msgid "Update Specific Fields"
msgstr "更新指定的字段"

#: ../source/reference/method/db.collection.update.txt:76
msgid ""
"If the ``<update>`` document contains :ref:`update operator <update-"
"operators>` modifiers, such as those using the :update:`$set` modifier, then:"
msgstr ""
"如果 ``<update>`` 参数中包含更新操作符（ :ref:`update operator <update-"
"operators>` ），也就是使用  :update:`$set` 操作符时："

#: ../source/reference/method/db.collection.update.txt:80
msgid ""
"The ``<update>`` document must contain *only* :ref:`update operator <update-"
"operators>` expressions."
msgstr ""
" ``<update>`` 参数中必须要有并且 *只有* 更新操作符（ :ref:`update operator "
"<update-operators>` ）表达式。"

#: ../source/reference/method/db.collection.update.txt:83
msgid ""
"The :method:`~db.collection.update()` method updates only the corresponding "
"fields in the document. For an example, see :ref:`example-update-specific-"
"fields`."
msgstr ""
" :method:`~db.collection.update()` 方法只更新（$set操作符中指定）对应的字段。"
"例如，参见  :ref:`example-update-specific-fields` 。"

#: ../source/reference/method/db.collection.update.txt:88
msgid "Replace a Document Entirely"
msgstr "更新整个文档记录"

#: ../source/reference/method/db.collection.update.txt:90
msgid ""
"If the ``<update>`` document contains *only* ``field:value`` expressions, "
"then:"
msgstr ""
"如果 ``<update>`` 参数中 *仅* 包含 ``field:value`` （普通的键值对）表达式，"
"则："

#: ../source/reference/method/db.collection.update.txt:93
msgid ""
"The :method:`~db.collection.update()` method *replaces* the matching "
"document with the ``<update>`` document. The :method:`~db.collection."
"update()` method *does not* replace the ``_id`` value. For an example, see :"
"ref:`example-update-replace-fields`."
msgstr ""
" :method:`~db.collection.update()` 方法会用传入的文档值 *替换* 匹配到的文"
"档。 :method:`~db.collection.update()` 方法 *不会* 替换  ``_id`` 字段的值。例"
"如，参见  :ref:`example-update-replace-fields` 。"

#: ../source/reference/method/db.collection.update.txt:99
msgid ""
":method:`~db.collection.update()` *cannot* :ref:`update multiple documents "
"<multi-parameter>`."
msgstr ""
":method:`~db.collection.update()` 方法 *不会* 批量替换文档（ :ref:`update "
"multiple documents <multi-parameter>` ）。"

#: ../source/reference/method/db.collection.update.txt:105
msgid "Upsert Option"
msgstr "更新插（Upsert） 选项"

#: ../source/reference/method/db.collection.update.txt:108
msgid "Upsert Behavior"
msgstr "更新插（Upsert） 行为"

#: ../source/reference/method/db.collection.update.txt:110
msgid ""
"If ``upsert`` is ``true`` and no document matches the query criteria, :"
"method:`~db.collection.update()` inserts a *single* document. The update "
"creates the new document with either:"
msgstr ""
"如果 ``upsert`` 选项的值是  ``true`` 且没有匹配到查询条件的文档， :method:"
"`~db.collection.update()` 方法会插入 *一条* 文档记录。update方法会这样插入一"
"条新文档记录："

#: ../source/reference/method/db.collection.update.txt:114
msgid "The fields and values of the ``<update>`` parameter, or"
msgstr "用传给 ``<update>`` 方法的参数，或者"

#: ../source/reference/method/db.collection.update.txt:116
msgid ""
"The fields and values of both the ``<query>`` and ``<update>`` parameters if "
"the ``<update>`` parameter contains *only* :ref:`update operator <update-"
"operators>` expressions. The update creates a base document from the "
"equality clauses in the ``<query>`` parameter, and then applies the update "
"expressions from the ``<update>`` parameter."
msgstr ""
"如果 ``<update>`` 方法传入的参数中 *仅* 包含更新操作符（ :ref:`update "
"operator <update-operators>` ）字段，会同时使用传入的 ``<query>`` 和  "
"``<update>`` 参数。update方法会用 ``<query>`` 参数的值创建一个基础文档记录，"
"再把 ``<update>`` 参数中的值应用到这个文档记录中。"

#: ../source/reference/method/db.collection.update.txt:122
msgid ""
"If ``upsert`` is ``true`` and there are documents that match the query "
"criteria, :method:`~db.collection.update()` performs an update."
msgstr ""
"如果``upsert`` 选项的值是 ``true`` 并且匹配到符合查询条件的文档记录， :"
"method:`~db.collection.update()` 方法会执行更新操作。"

#: ../source/reference/method/db.collection.update.txt:125
msgid ":update:`$setOnInsert`"
msgstr "操作符 :update:`$setOnInsert`"

#: ../source/reference/method/db.collection.update.txt:128
msgid "Use Unique Indexes"
msgstr "使用唯一索引"

#: ../source/reference/method/db.collection.update.txt:130
msgid ""
"To avoid inserting the same document more than once, only use ``upsert: "
"true`` if the ``query`` field is uniquely indexed."
msgstr ""
"如果想要避免插入多个同样的文档记录，当 ``query`` 参数的字段中有唯一索引时只要"
"使用 ``upsert: true`` 选项即可。"

#: ../source/reference/method/db.collection.update.txt:134
msgid ""
"Given a collection named ``people`` where no documents have a ``name`` field "
"that holds the value ``Andy``. Consider when multiple clients issue the "
"following *update* with ``upsert: true`` at the same time:"
msgstr ""
"如果 ``people`` 集合中没有 ``name`` 字段的值是 ``Andy`` 的记录，把这条记录插"
"进去。要考虑多个用户同时使用下面的的 *更新*  操作并且都带了  ``upsert: "
"true`` 这个选项的情况："

#: ../source/reference/method/db.collection.update.txt:151
msgid ""
"If all :method:`~db.collection.update()` operations complete the ``query`` "
"portion before any client successfully inserts data, **and** there is no "
"unique index on the ``name`` field, then each update operation may result in "
"an insert."
msgstr ""
"如果所有的 :method:`~db.collection.update()` 操作都完成了 ``query`` 这部分工"
"作，但没有任何一个用户完成数据写入， *并且*  ``name`` 字段上没有唯一索引，这"
"时有可能每个 update 操作都插入了一个记录。"

#: ../source/reference/method/db.collection.update.txt:156
msgid ""
"To prevent MongoDB from inserting the same document more than once, create "
"a :ref:`unique index <index-type-unique>` on the ``name`` field. With a "
"unique index, if multiple applications issue the same update with ``upsert: "
"true``, *exactly one* :method:`~db.collection.update()` would successfully "
"insert a new document."
msgstr ""
"为了阻止 Mongodb 插入多条同样的文档记录，需要在  ``name`` 字段上创建一个唯一"
"索引 ( :ref:`unique index <index-type-unique>` )。有了唯一索引，如果多个应用"
"使用同样的包含  ``upsert: true`` 选项的更新操作， *只有一个*  :method:`~db."
"collection.update()` 操作可以成功插入一条新的文档记录。"

#: ../source/reference/method/db.collection.update.txt:163
msgid "The remaining operations would either:"
msgstr "其余的update操作会："

#: ../source/reference/method/db.collection.update.txt:165
msgid "update the newly inserted document, or"
msgstr "更新最近插入的文档，或者"

#: ../source/reference/method/db.collection.update.txt:167
msgid "fail when they attempted to insert a duplicate."
msgstr "尝试插入重复的记录时失败。"

#: ../source/reference/method/db.collection.update.txt:169
msgid ""
"If the operation fails because of a duplicate index key error, applications "
"may retry the operation which will succeed as an update operation."
msgstr ""
"如果因为出现重复的索引键而产生异常操作会失败，应用程序可以再次尝试这个操作，"
"它会被转为更新操作并执行成功。"

#: ../source/reference/method/db.collection.update.txt:176
msgid "Multi Parameter"
msgstr "\"Multi\"选项"

#: ../source/reference/method/db.collection.update.txt:178
msgid ""
"If ``multi`` is set to ``true``, the :method:`~db.collection.update()` "
"method updates all documents that meet the ``<query>`` criteria. The "
"``multi`` update operation may interleave with other operations, both read "
"and/or write operations. For unsharded collections, you can override this "
"behavior with the :update:`$isolated` operator, which isolates the update "
"operation and disallows yielding during the operation. This isolates the "
"update so that no client can see the updated documents until they are all "
"processed, or an error stops the update operation."
msgstr ""
"如果  ``multi`` 选项被设置成  ``true`` ，  :method:`~db.collection.update()` "
"方法会更新所有 ``<query>`` 条件匹配到的文档记录。 ``multi`` 选项可以和其他读"
"写操作符交叉使用。在未分片的集合中，可以使用独占操作符 （ :update:`"
"$isolated` ）忽略批量更新操作， :update:`$isolated` 操作会让当前更新操作使用"
"独占模式，在操作完成前忽略其他操作。在独占操作进行时，其他使用者都看不到正在"
"被更新的文档记录，直到操作完成或发生异常。"

#: ../source/reference/method/db.collection.update.txt:188
msgid ""
"If the :ref:`\\<update\\> <update-parameter>` document contains *only* "
"``field:value`` expressions, then :method:`~db.collection.update()` *cannot* "
"update multiple documents."
msgstr ""
"如果update参数 （  :ref:`\\<update\\> <update-parameter>` ）传入的文档参数中 "
"*只* 包含 \"键:值\" 格式的数据（不包含其他操作符），  :method:`~db."
"collection.update()` 操作 *不会* 一次更新多条记录。"

#: ../source/reference/method/db.collection.update.txt:192
msgid "For an example, see :ref:`example-update-multi`."
msgstr "示例，参见 :ref:`example-update-multi` 。"

#: ../source/reference/method/db.collection.update.txt:195
msgid "Sharded Collections"
msgstr "分片集合"

#: ../source/includes/fact-single-modification-in-sharded-collections.rst:1
msgid ""
"All |single-modification-operation-names| operations for a sharded "
"collection that specify the |single-modification-operation-option| option "
"must include the :term:`shard key` *or* the ``_id`` field in the query "
"specification. |single-modification-operation-names| operations specifying |"
"single-modification-operation-option| in a sharded collection without the :"
"term:`shard key` *or* the ``_id`` field return an error."
msgstr ""

#: ../source/reference/method/db.collection.update.txt:203
msgid ":method:`~db.collection.findAndModify()`"
msgstr ":method:`~db.collection.findAndModify()`"

#: ../source/reference/method/db.collection.update.txt:208
msgid "Examples"
msgstr "示例"

#: ../source/reference/method/db.collection.update.txt:215
msgid ""
"To update specific fields in a document, use :ref:`update operators <update-"
"operators>` in the ``<update>`` parameter. If the ``<update>`` parameter "
"refers to non-existent fields in the current document, the :method:`~db."
"collection.update()` method adds the fields to the document."
msgstr ""
"如果要修改文档中的指定字段，可以在  ``<update>`` 参数中使用更新操作符（ :ref:"
"`update operators <update-operators>` ）。如果  ``<update>`` 参数中有文档中不"
"存在的字段， :method:`~db.collection.update()` 操作会在文档中加入这些字段。"

#: ../source/reference/method/db.collection.update.txt:221
#: ../source/reference/method/db.collection.update.txt:255
msgid "For example, given a ``books`` collection with the following document:"
msgstr "示例，操作 ``books`` 集合并传入如下文档作为参数："

#: ../source/reference/method/db.collection.update.txt:227
msgid ""
"The following operation adds a ``price`` field to the document and "
"increments the ``stock`` field by ``5``."
msgstr "下面的操作会在文档中增加 ``price`` 字段并把 ``stock`` 的值加  ``5`` 。"

#: ../source/reference/method/db.collection.update.txt:240
msgid "The updated document is now the following:"
msgstr "被更新过的文档如下："

#: ../source/reference/method/db.collection.update.txt:246
msgid ":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`"
msgstr ":update:`$set`, :update:`$inc`, :doc:`/reference/operator/update`"

#: ../source/reference/method/db.collection.update.txt:250
msgid "Update Specific Fields in Embedded Documents"
msgstr "更新子文档的字段"

#: ../source/reference/method/db.collection.update.txt:252
msgid ""
"Use :term:`dot notation` to update specific fields in embedded documents."
msgstr "使用点号分隔法（ :term:`dot notation` ）更新子文档中的字段。"

#: ../source/reference/method/db.collection.update.txt:261
msgid ""
"The following example updates the ``publisher`` field and the ``digit`` "
"field in the ``isbn`` embedded document:"
msgstr "下面的操作会更新 ``isbn`` 子文档中的 ``publisher`` 和 ``digit`` 字段："

#: ../source/reference/method/db.collection.update.txt:272
msgid "Remove Fields"
msgstr "删除字段"

#: ../source/reference/method/db.collection.update.txt:274
msgid ""
"The following operation uses the :update:`$unset` operator to remove the "
"``stock`` field:"
msgstr "下面的操作使用 :update:`$unset` 操作符删除 ``stock`` 字段："

#: ../source/reference/method/db.collection.update.txt:281
msgid ":update:`$unset`, :update:`$rename`, :doc:`/reference/operator/update`"
msgstr ":update:`$unset`, :update:`$rename`, :doc:`/reference/operator/update`"

#: ../source/reference/method/db.collection.update.txt:286
msgid "Replace All Fields"
msgstr "替换全部字段"

#: ../source/reference/method/db.collection.update.txt:288
msgid "Given the following document in the ``books`` collection:"
msgstr "向 ``books`` 集合中传入如下文档："

#: ../source/reference/method/db.collection.update.txt:300
msgid ""
"The following operation passes an ``<update>`` document that contains only "
"field and value pairs, which means the document replaces all the fields in "
"the original document. The operation *does not* replace the ``_id`` value. "
"The operation contains the same value for the ``item`` field in both the "
"``<query>`` and ``<update>`` documents, which means the field does not "
"change:"
msgstr ""
"下面的操作给  ``<update>`` 参数传入一个只包含键值对的文档，表示用新的文档替换"
"原有文档中的所有字段。这个操作 *不会* 替换  ``_id`` 的值。如果给 ``<query>`` "
"参数和  ``<update>`` 参数传入的文档的键和值完全相同，就表示没有需要修改的字"
"段："

#: ../source/reference/method/db.collection.update.txt:314
msgid ""
"The operation creates the following new document. The operation removed the "
"``author`` field and changed the values of the ``price`` and ``stock`` "
"fields:"
msgstr ""
"这个操作会创建如下新文档。这个操作会删除 ``author`` 字段并修改 ``price`` 和 "
"``stock`` 字段的值："

#: ../source/reference/method/db.collection.update.txt:330
msgid "Insert a New Document if No Match Exists"
msgstr "如果没有匹配的记录，插入一个新的文档记录"

#: ../source/reference/method/db.collection.update.txt:333
msgid ""
"The following update sets the :ref:`upsert <upsert-parameter>` option to "
"``true`` so that :method:`~db.collection.update()` creates a new document in "
"the ``books`` collection if no document matches the ``<query>`` parameter:"
msgstr ""
"下面这个操作把更新插（ :ref:`upsert <upsert-parameter>` ）选项设置成 "
"``true`` ，所以 :method:`~db.collection.update()` 操作在 ``books`` 集合中找不"
"到能匹配 ``<query>`` 参数的文档时会创建一个新的文档记录。"

#: ../source/reference/method/db.collection.update.txt:346
msgid ""
"If no document matches the ``<query>`` parameter, the update operation "
"inserts a document with the fields and values of the ``<update>`` parameter "
"and a new unique ``ObjectId`` for the ``_id`` field:"
msgstr ""
"如果没有能匹配上 ``<query>`` 参数的文档， update 操作会用 ``<update>`` 参数传"
"入的的文档参数创建一个新的记录，并给这个条记录的 ``_id`` 字段一个"
"``ObjectId`` 类型的唯一值："

#: ../source/reference/method/db.collection.update.txt:362
msgid "Update Multiple Documents"
msgstr "批量更新文档记录"

#: ../source/reference/method/db.collection.update.txt:364
msgid ""
"To update multiple documents, set the ``multi`` option to ``true``. For "
"example, the following operation updates all documents where ``stock`` is "
"less than ``5``:"
msgstr ""
"使用批量更新文档记录需要把 ``multi`` 选项设置成 ``true`` 。例如，下面的操作会"
"更新所有 ``stock`` 小于  ``5`` 的文档记录："

#: ../source/reference/method/db.collection.update.txt:379
msgid "Override Default Write Concern"
msgstr "覆盖默认的写确认级别"

#: ../source/reference/method/db.collection.update.txt:381
msgid ""
"The following operation on a replica set specifies a :doc:`write concern </"
"reference/write-concern>` of ``\"w: majority\"`` with a ``wtimeout`` of 5000 "
"milliseconds such that the method returns after the write propagates to a "
"majority of the replica set members or the method times out after 5 seconds."
msgstr ""
"如果在一个副本集中把写确认级别（ :doc:`write concern </reference/write-"
"concern>` ）设置成  ``\"w: majority\"`` 并设置一个 5000 毫秒的 \"超时时间"
"\" ， 此操作会在副本集中的多数成员已经执行完操作或等待时间超过5秒时返回。"

#: ../source/reference/method/db.collection.update.txt:399
msgid "Combine the ``upsert`` and ``multi`` Options"
msgstr "联合使用 ``upsert`` 和 ``upsert`` 选项："

#: ../source/reference/method/db.collection.update.txt:401
msgid "Given a ``books`` collection that includes the following documents:"
msgstr "创建一个包含如下文档记录的 ``books`` 集合："

#: ../source/reference/method/db.collection.update.txt:409
msgid ""
"The following command specifies the ``multi`` parameter to update all "
"documents where ``item`` is ``\"Divine Comedy\"`` and the ``author`` is ``"
"\"Dante\"`` and specifies ``upsert: true`` to create a new document if no "
"matching documents are found:"
msgstr ""
"命令中设置了 ``multi`` 参数来更新所有  ``item`` 字段值为  ``\"Divine Comedy"
"\"``  并且  ``author`` 字段值为  ``\"Dante\"`` 的记录。命令中设置 ``upsert: "
"true`` ，当按上述条件匹配不到记录时会创建一个新的文档记录："

#: ../source/reference/method/db.collection.update.txt:422
msgid ""
"The operation updates all three matching documents and results in the "
"following:"
msgstr "下面的操作会更新所有匹配上的文档记录："

#: ../source/reference/method/db.collection.update.txt:431
msgid ""
"If the collection had *no* matching document, the operation would result in "
"the insertion of a document:"
msgstr "如果集合中 *没有* 匹配到的记录，操作会变成插入一条记录："

#: ../source/reference/method/db.collection.update.txt:443
msgid "Update Arrays"
msgstr "更新数组"

#: ../source/reference/method/db.collection.update.txt:446
msgid "Update an Element by Position"
msgstr "更新指定位置的元素"

#: ../source/reference/method/db.collection.update.txt:448
msgid ""
"If the update operation requires an update of an element in an array field, "
"the :method:`~db.collection.update()` method can perform the update using "
"the position of the element and :term:`dot notation`. Arrays in MongoDB are "
"zero-based."
msgstr ""
"如果想要更新一个数组字段中的一元素， :method:`~db.collection.update()` 操作可"
"以使用点号分隔法（ `dot notation` ）更新指定位置的数组元素。数组在mongodb中是"
"最底层的数据类型。"

#: ../source/reference/method/db.collection.update.txt:453
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document with the ``_id`` field equal to "
"``1`` and updates the second element in the ``contribs`` array:"
msgstr ""
"下面的操作匹配 :doc:`bios collection </reference/bios-example-collection>` 集"
"合中第一个  ``_id`` 字段的值等于 ``1`` 的文档记录，并更新数组字段 "
"``contribs`` 中的第二个元素："

#: ../source/reference/method/db.collection.update.txt:466
msgid "Update an Element if Position is Unknown"
msgstr "更新一个未知位置的元素"

#: ../source/reference/method/db.collection.update.txt:468
msgid ""
"If the position in the array is not known, the :method:`~db.collection."
"update()` method can perform the update using the :operator:`$` positional "
"operator. The array field must appear in the ``<query>`` parameter in order "
"to determine which array element to update."
msgstr ""
"如果不知道数组中的位置， :method:`~db.collection.update()` 操作中可以使用位置"
"操作符 :operator:`$` 。为了定位要更新数组元素，这个数组字段必须出现在 "
"``<query>`` 参数中。"

#: ../source/reference/method/db.collection.update.txt:474
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document where the ``_id`` field equals "
"``3`` and the ``contribs`` array contains an element equal to ``compiler``. "
"If found, the :method:`~db.collection.update()` method updates the first "
"matching element in the array to ``A compiler`` in the document:"
msgstr ""
"下面的操作在 :doc:`bios collection </reference/bios-example-collection>`  集"
"合中查找第一个 ``_id`` 等于 ``3`` 并且 ``contribs`` 数组字段中包含 "
"``compiler`` 元素的文档记录。如果找到， :method:`~db.collection.update()` 操"
"作把文档中第一个匹配到的元素更新成 ``A compiler`` ："

#: ../source/reference/method/db.collection.update.txt:489
msgid "Update a Document Element"
msgstr "更新一个文档元素"

#: ../source/reference/method/db.collection.update.txt:491
msgid ""
"The :method:`~db.collection.update()` method can perform the update of an "
"array that contains embedded documents by using the positional operator (i."
"e. :operator:`$`) and the :term:`dot notation`."
msgstr ""
" :method:`~db.collection.update()` 方法可以使用位置操作符 ( i.e. :operator:`"
"$` ) 和点号分隔法（ :term:`dot notation`） 更新一个数组字段中的内嵌文档。"

#: ../source/reference/method/db.collection.update.txt:495
msgid ""
"The following example queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document where the ``_id`` field equals "
"``4`` and the ``awards`` array contains an embedded document where the "
"``by`` field equals ``ACM``. If found, the :method:`~db.collection.update()` "
"method updates the ``by`` field in the first matching embedded document:"
msgstr ""
"下面这个例子查找 :doc:`bios collection </reference/bios-example-collection>` "
"集合中第一个 ``_id`` 字段等于 ``4`` 且 ``awards`` 数组字段中嵌入文档的 "
"``by`` 字段等于 ``ACM`` 的文档记录。如果找到， :method:`~db.collection."
"update()` 方法会更新第一个匹配到的嵌入文档中的 ``by`` 字段 ： "

#: ../source/reference/method/db.collection.update.txt:510
msgid "Add an Element"
msgstr "添加一个元素"

#: ../source/reference/method/db.collection.update.txt:512
msgid ""
"The following operation queries the :doc:`bios collection </reference/bios-"
"example-collection>` for the first document that has an ``_id`` field equal "
"to ``1`` and adds a new element to the ``awards`` field:"
msgstr ""
"下面的操作查找 :doc:`bios collection </reference/bios-example-collection>` 集"
"合中第一个 ``_id`` 等于 ``1`` 的文档记录并在 ``awards`` 数组字段中添加一个内"
"嵌文档："

#: ../source/reference/method/db.collection.update.txt:526
msgid ""
"In the next example, the :update:`$set` operator uses :ref:`dot notation "
"<document-dot-notation>` to access the ``middle`` field in the ``name`` "
"embedded document. The :update:`$push` operator adds an embedded document to "
"the ``awards`` array."
msgstr ""
"下一个例子，使用更新操作符（ :update:`$set` ）和点号分隔法 :ref:`dot "
"notation <document-dot-notation>` 访问 ``name`` 嵌入文档中的 ``middle`` 字"
"段。使用追加操作符 :update:`$push` （ :update:`$push` operator ）在 "
"``awards`` 数组中添加一个嵌入文档。"

#: ../source/reference/method/db.collection.update.txt:531
msgid "Consider the following operation:"
msgstr "思考下面的操作："

#: ../source/reference/method/db.collection.update.txt:548
msgid "This :method:`~db.collection.update()` operation:"
msgstr "这个 :method:`~db.collection.update()` 操作："

#: ../source/reference/method/db.collection.update.txt:550
msgid ""
"Modifies the field ``name`` whose value is another document. Specifically, "
"the :update:`$set` operator updates the ``middle`` field in the ``name`` "
"document. The document uses :ref:`dot notation <document-dot-notation>` to "
"access a field in an embedded document."
msgstr ""
"修改 ``name`` 字段中包含子文档的记录。更新操作符（ :update:`$set` ）修改 "
"``name`` 文档中的 ``middle`` 字段。使用点号分隔法（ :ref:`dot notation "
"<document-dot-notation>` ）访问内嵌文档中的字段。"

#: ../source/reference/method/db.collection.update.txt:555
msgid ""
"Adds an element to the field ``awards``, whose value is an array. "
"Specifically, the :update:`$push` operator adds another document as an "
"element to the field ``awards``."
msgstr ""
"在 ``awards`` 数字字段中添加一个元素。追加操作符（ :update:`$push` ）会在 "
"``awards``字段中添加一个文档作为新元素。"

#: ../source/reference/method/db.collection.update.txt:562
msgid "WriteResult"
msgstr "操作结果"

#: ../source/reference/method/db.collection.update.txt:567
msgid "Successful Results"
msgstr "操作成功"

#: ../source/reference/method/db.collection.update.txt:569
msgid ""
"The :method:`~db.collection.update()` method returns a :method:`WriteResult` "
"object that contains the status of the operation. Upon success, the :method:"
"`WriteResult` object contains the number of documents that matched the query "
"condition, the number of documents inserted by the update, and the number of "
"documents modified:"
msgstr ""
" :method:`~db.collection.update()` 方法返回一个包含状态的 :method:"
"`WriteResult` 对象。如果操作成功， :method:`WriteResult` 对象包含匹配到的文档"
"记录个数，update操作插入的文档记录数，update操作更新的文档记录数："

#: ../source/reference/method/db.collection.update.txt:0
msgid "See"
msgstr "参见"

#: ../source/reference/method/db.collection.update.txt:583
msgid "Write Concern Errors"
msgstr "写确认异常"

#: ../source/reference/method/db.collection.update.txt:585
msgid ""
"If the :method:`~db.collection.update()` method encounters write concern "
"errors, the results include the :data:`WriteResult.writeConcernError` field:"
msgstr ""
"如果 :method:`~db.collection.update()` 操作遇到“写确认异常”，返回的结果中会"
"包 :data:`WriteResult.writeConcernError` 字段："

#: ../source/reference/method/db.collection.update.txt:601
msgid ":method:`WriteResult.hasWriteConcernError()`"
msgstr ":method:`WriteResult.hasWriteConcernError()`"

#: ../source/reference/method/db.collection.update.txt:604
msgid "Errors Unrelated to Write Concern"
msgstr "与写确认无关的异常"

#: ../source/reference/method/db.collection.update.txt:606
msgid ""
"If the :method:`~db.collection.update()` method encounters a non-write "
"concern error, the results include the :data:`WriteResult.writeError` field:"
msgstr ""
"如果  :method:`~db.collection.update()` 操作遇到一个与写确认无关的异常，返回"
"结果中会包含 :data:`WriteResult.writeError` 字段："

#: ../source/reference/method/db.collection.update.txt:622
msgid ":method:`WriteResult.hasWriteError()`"
msgstr ":method:`WriteResult.hasWriteError()`"
