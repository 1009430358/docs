#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/cursor.sort.txt:3
msgid "cursor.sort()"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:18
msgid ""
"Specifies the order in which the query returns matching documents. You must "
"apply :method:`~cursor.sort()` to the cursor before retrieving any documents"
" from the database."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:22
msgid "The :method:`~cursor.sort()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:26
msgid ""
"The ``sort`` parameter contains field and value pairs, in the following "
"form:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:33
msgid ""
"The sort document can specify :ref:`ascending or descending sort on existing"
" fields <sort-asc-desc>` or :ref:`sort on computed metadata <sort-"
"metadata>`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:38
msgid "Behaviors"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:41
msgid "Result Ordering"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:43
msgid ""
"Unless you specify the :method:`~cursor.sort()` method or use the "
":query:`$near` operator, MongoDB does **not** guarantee the order of query "
"results."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:50
msgid "Ascending/Descending Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:52
msgid ""
"Specify in the sort parameter the field or fields to sort by and a value of "
"``1`` or ``-1`` to specify an ascending or descending sort respectively."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:56
msgid ""
"The following sample document specifies a descending sort by the ``age`` "
"field and then an ascending sort by the ``posts`` field:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
msgid ""
"When comparing values of different :term:`BSON` types, MongoDB uses the "
"following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:5
msgid "Null"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:8
msgid "Object"
msgstr ""

#: ../source/includes/fact-sort-order.rst:9
msgid "Array"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:12
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-sort-order.rst:13
msgid "Date"
msgstr ""

#: ../source/includes/fact-sort-order.rst:14
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-sort-order.rst:15
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
msgid ""
"MongoDB treats some types as equivalent for comparison purposes. For "
"instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
msgid ""
"Date objects sort before Timestamp objects. Previously Date and Timestamp "
"objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
msgid ""
"The comparison treats a non-existent field as it would an empty BSON Object."
" As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }``"
" would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
msgid ""
"With arrays, a less-than comparison or an ascending sort compares the "
"smallest element of arrays, and a greater-than comparison or a descending "
"sort compares the largest element of the arrays. As such, when comparing a "
"field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array "
"fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison"
" of an empty array (e.g. ``[ ]``) treats the empty array as less than "
"``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:68
msgid "Metadata Sort"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:70
msgid ""
"Specify in the sort parameter a new field name for the computed metadata and"
" specify the :projection:`$meta` expression as its value."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:74
msgid ""
"The following sample document specifies a descending sort by the "
"``\"textScore\"`` metadata:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:81
msgid ""
"The specified metadata determines the sort order. For example, the "
"``\"textScore\"`` metadata sorts in descending order. See "
":projection:`$meta` for details."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:86
msgid "Restrictions"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:88
msgid ""
"When unable to obtain the sort order from an index, MongoDB will sort the "
"results in memory, which requires that the result set being sorted is less "
"than 32 megabytes."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:92
msgid ""
"When the sort operation consumes more than 32 megabytes, MongoDB returns an "
"error. To avoid this error, either create an index supporting the sort "
"operation (see :ref:`sort-index-use`) or use :method:`~cursor.sort()` in "
"conjunction with :method:`~cursor.limit()` (see :ref:`sort-limit-results`)."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:101
msgid "Sort and Index Use"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:103
msgid ""
"The sort can sometimes be satisfied by scanning an index in order. If the "
"query plan uses an index to provide the requested sort order, MongoDB does "
"not perform an in-memory sorting of the result set. For more information, "
"see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:111
msgid "Limit Results"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:113
msgid ""
"You can use :method:`~cursor.sort()` in conjunction with "
":method:`~cursor.limit()` to return the first (in terms of the sort order) "
"``k`` documents, where ``k`` is the specified limit."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:117
msgid ""
"If MongoDB cannot obtain the sort order via an index scan, then MongoDB uses"
" a top-k sort algorithm. This algorithm buffers the first ``k`` results (or "
"last, depending on the sort order) seen so far by the underlying index or "
"collection access. If at any point the memory footprint of these ``k`` "
"results exceeds 32 megabytes, the query will fail."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:127
msgid "Interaction with :term:`Projection`"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:129
msgid ""
"When a set of results are both sorted and projected, the MongoDB query "
"engine will always apply the sorting **first**."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:133
msgid "Examples"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:135
msgid "A collection ``orders`` contain the following documents:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:146
msgid ""
"The following query, which returns all documents from the ``orders`` "
"collection, does not specify a sort order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:153
msgid "The query returns the documents in indeterminate order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:164
msgid ""
"The following query specifies a sort on the ``amount`` field in descending "
"order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:171
msgid ""
"The query returns the following documents, in descending order of "
"``amount``:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:183
msgid ""
"The following query specifies the sort order using the fields from an "
"embedded document ``item``. The query sorts first by the ``category`` field "
"in ascending order, and then within each ``category``, by the ``type`` field"
" in ascending order."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:192
msgid ""
"The query returns the following documents, ordered first by the ``category``"
" field, and within each category, by the ``type`` field:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:208
msgid "Return in Natural Order"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:210
msgid ""
"The :operator:`$natural` parameter returns items according to their "
":term:`natural order` within the database. This ordering is an internal "
"implementation feature, and you should not rely on any particular structure "
"within it."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:216
msgid "Index Use"
msgstr ""

#: ../source/includes/fact-natural-parameter.rst:1
msgid ""
"Queries that include a sort by :operator:`$natural` order do **not** use "
"indexes to fulfill the query predicate with the following exception: If the "
"query predicate is an equality condition on the ``_id`` field ``{ _id: "
"<value> }``, then the query with the sort by :operator:`$natural` order can "
"use the ``_id`` index."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:221
msgid "MMAPv1"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:223
msgid ""
"Typically, the natural order reflects insertion order with the following "
"exception for the MMAPv1 storage engine. For the MMAPv1 storage engine, the "
"natural order does not reflect insertion order if the documents relocate "
"because of :ref:`document growth <data-model-document-growth>` or remove "
"operations free up space which are then taken up by newly inserted "
"documents."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:230
msgid "Consider to following example which uses the MMAPv1 storage engine."
msgstr ""

#: ../source/reference/method/cursor.sort.txt:232
msgid ""
"The following sequence of operations inserts documents into the ``trees`` "
"collection:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:242
msgid "The following query returns the documents in the natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:248
msgid "The documents return in the following order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:257
msgid ""
"Update a document such that the document outgrows its current allotted "
"space:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:267
msgid "Rerun the query to returns the documents in natural order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:273
msgid ""
"For MongoDB instances using MMAPv1, the documents return in the following "
"natural order, which no longer reflects the insertion order:"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:283
msgid ":operator:`$natural`"
msgstr ""

#: ../source/reference/method/cursor.sort.txt:0
msgid "On this page"
msgstr ""
