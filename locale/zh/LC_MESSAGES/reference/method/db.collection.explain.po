# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.explain.txt:3
msgid "db.collection.explain()"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:8
msgid "Description"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:14
msgid ""
"Returns information on the query plan for the following operations: "
":method:`aggregate() <db.collection.aggregate()>`; :method:`count() "
"<db.collection.count()>`; :method:`find() <db.collection.find()>`; "
":method:`group() <db.collection.group()>`; :method:`remove() "
"<db.collection.remove()>`; and :method:`update() <db.collection.update()>` "
"methods."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:21
msgid ""
"To use :method:`db.collection.explain()`, append to "
":method:`db.collection.explain()` the method(s) available to explain:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:28
msgid "For example,"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:34
msgid ""
"For more examples, see :ref:`explain-method-examples`. For a list of methods"
" available for use with :method:`db.collection.explain()`, see "
":ref:`db.collection.explain().help() <explain-method-help>`."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:38
msgid ""
"The :method:`db.collection.explain()` method has the following parameter:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:46
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:51
msgid "Verbosity Modes"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:53
msgid ""
"The behavior of :method:`db.collection.explain()` and the amount of "
"information returned depend on the ``verbosity`` mode."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:62
#: ../source/reference/method/db.collection.explain.txt:128
msgid "``queryPlanner`` Mode"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:64
msgid ""
"By default, :method:`db.collection.explain()` runs in ``queryPlanner`` "
"verbosity mode."
msgstr ""

#: ../source/includes/fact-explain-verbosity-queryPlanner.rst:1
msgid ""
"MongoDB runs the :doc:`query optimizer </core/query-plans>` to choose the "
"winning plan for the operation under evaluation. |explain| returns the "
":data:`~explain.queryPlanner` information for the evaluated |operation|."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:72
msgid "``executionStats`` Mode"
msgstr ""

#: ../source/includes/fact-explain-verbosity-executionStats.rst:1
msgid ""
"MongoDB runs the :doc:`query optimizer </core/query-plans>` to choose the "
"winning plan, executes the winning plan to completion, and returns "
"statistics describing the execution of the winning plan."
msgstr ""

#: ../source/includes/fact-explain-write-operations.rst:1
#: ../source/includes/fact-explain-write-operations.rst:1
msgid ""
"For write operations, |explain| returns information about the update or "
"delete operations that *would* be performed, but does *not* apply the "
"modifications to the database."
msgstr ""

#: ../source/includes/fact-explain-verbosity-executionStats.rst:11
msgid ""
"|explain| returns the :data:`~explain.queryPlanner` and "
":data:`~explain.executionStats` information for the evaluated |operation|. "
"However, :data:`~explain.executionStats` does not provide query execution "
"information for the rejected plans."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:79
#: ../source/reference/method/db.collection.explain.txt:157
msgid "``allPlansExecution`` Mode"
msgstr ""

#: ../source/includes/fact-explain-verbosity-allPlansExecution.rst:1
msgid ""
"MongoDB runs the :doc:`query optimizer </core/query-plans>` to choose the "
"winning plan and executes the winning plan to completion. In "
"``\"allPlansExecution\"`` mode, MongoDB returns statistics describing the "
"execution of the winning plan as well as statistics for the other candidate "
"plans captured during :ref:`plan selection <query-plans-query-"
"optimization>`."
msgstr ""

#: ../source/includes/fact-explain-verbosity-allPlansExecution.rst:14
msgid ""
"|explain| returns the :data:`~explain.queryPlanner` and "
":data:`~explain.executionStats` information for the evaluated |operation|. "
"The :data:`~explain.executionStats` includes the *completed* query execution"
" information for the *winning plan*."
msgstr ""

#: ../source/includes/fact-explain-verbosity-allPlansExecution.rst:19
msgid ""
"If the query optimizer considered more than one plan, "
":data:`~explain.executionStats` information also includes the *partial* "
"execution information captured during the :ref:`plan selection phase <query-"
"plans-query-optimization>` for both the winning and rejected candidate "
"plans."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:86
msgid "``explain()`` Mechanics"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:88
msgid ""
"The :method:`db.collection.explain()` method wraps the :dbcommand:`explain` "
"command and is the preferred way to run :dbcommand:`explain`."
msgstr ""

#: ../source/includes/fact-explain-methods-differences.rst:1
msgid ""
":method:`db.collection.explain().find()` is similar to "
":method:`db.collection.find().explain() <cursor.explain()>` with the "
"following key differences:"
msgstr ""

#: ../source/includes/fact-explain-methods-differences.rst:5
msgid ""
"The :method:`db.collection.explain().find()` construct allows for the "
"additional chaining of query modifiers. For list of query modifiers, see "
":ref:`db.collection.explain().find().help() <explain-method-help>`."
msgstr ""

#: ../source/includes/fact-explain-methods-differences.rst:9
msgid ""
"The :method:`db.collection.explain().find()` returns a cursor, which "
"requires a call to ``.next()``, or its alias ``.finish()``, to return the "
"``explain()`` results. If run interactively in the :program:`mongo` shell, "
"the :program:`mongo` shell automatically calls ``.finish()`` to return the "
"results. For scripts, however, you must explicitly call ``.next()``, or "
"``.finish()``, to return the results. For list of cursor-related methods, "
"see :ref:`db.collection.explain().find().help() <explain-method-help>`."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:94
msgid ""
":method:`db.collection.explain().aggregate()` is equivalent to passing the "
":ref:`explain <example-aggregate-method-explain-option>` option to the "
":method:`db.collection.aggregate()` method."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:101
msgid "``help()``"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:103
msgid ""
"To see the list of operations supported by "
":method:`db.collection.explain()`, run:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:110
msgid ""
":method:`db.collection.explain().find()` returns a cursor, which allows for "
"the chaining of query modifiers. To see the list of query modifiers "
"supported by :method:`db.collection.explain().find() "
"<db.collection.explain()>` as well as cursor-related methods, run:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:119
msgid ""
"You can chain multiple modifiers to ``db.collection.explain().find()``. For "
"an example, see :ref:`explain-find-modifiers`."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:125
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:130
msgid ""
"By default, :method:`db.collection.explain()` runs in ``\"queryPlanner\"`` "
"verbosity mode."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:133
msgid ""
"The following example runs :method:`db.collection.explain()` in "
":ref:`\"queryPlanner\" <explain-method-queryPlanner>` verbosity mode to "
"return the query planning information for the specified "
":method:`~db.collection.count()` operation:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:143
msgid "``executionStats``  Mode"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:145
msgid ""
"The following example runs :method:`db.collection.explain()` in "
":ref:`\"executionStats\" <explain-method-executionStats>` verbosity mode to "
"return the query planning and execution information for the specified "
":method:`~db.collection.find()` operation:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:159
msgid ""
"The following example runs :method:`db.collection.explain()` in "
":ref:`\"allPlansExecution\" <explain-method-allPlansExecution>` verbosity "
"mode. The :method:`db.collection.explain()` returns the "
":data:`~explain.queryPlanner` and :data:`~explain.executionStats` for all "
"considered plans for the specified :method:`~db.collection.update()` "
"operation:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:168
msgid ""
"The execution of this explain will *not* modify data but runs the query "
"predicate of the update operation. For candidate plans, MongoDB returns the "
"execution information captured during the :ref:`plan selection phase <query-"
"plans-query-optimization>`."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:183
msgid "Explain ``find()`` with Modifiers"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:185
msgid ""
":method:`db.collection.explain().find()` construct allows for the chaining "
"of query modifiers. For example, the following operation provides "
"information on the :method:`~db.collection.find()` method with "
":method:`~cursor.sort()` and :method:`~cursor.hint()` query modifiers."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:196
msgid ""
"For a list of query modifiers available, run in the :program:`mongo` shell:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:204
msgid "Iterate the ``explain().find()`` Return Cursor"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:206
msgid ""
":method:`db.collection.explain().find()` returns a cursor to the explain "
"results. If run interactively in the :program:`mongo` shell, the "
":program:`mongo` shell automatically iterates the cursor using the "
"``.next()`` method. For scripts, however, you must explicitly call "
"``.next()`` (or its alias ``.finish()``) to return the results:"
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:219
msgid "Output"
msgstr ""

#: ../source/includes/fact-explain-results-categories.rst:1
msgid "|explain| operations can return information regarding:"
msgstr ""

#: ../source/includes/fact-explain-results-categories.rst:3
msgid ""
":ref:`queryPlanner`, which details the plan selected by the :doc:`query "
"optimizer </core/query-plans>` and lists the rejected plans;"
msgstr ""

#: ../source/includes/fact-explain-results-categories.rst:7
msgid ""
":ref:`executionStats`, which details the execution of the winning plan and "
"the rejected plans; and"
msgstr ""

#: ../source/includes/fact-explain-results-categories.rst:10
msgid ":ref:`serverInfo`, which provides information on the MongoDB instance."
msgstr ""

#: ../source/includes/fact-explain-results-categories.rst:13
msgid ""
"The verbosity mode (i.e. ``queryPlanner``, ``executionStats``, "
"``allPlansExecution``) determines whether the results include "
":ref:`executionStats` and whether :ref:`executionStats` includes data "
"captured during :ref:`plan selection <query-plans-query-optimization>`."
msgstr ""

#: ../source/reference/method/db.collection.explain.txt:223
msgid "For details on the output, see :doc:`/reference/explain-results`."
msgstr ""

#: ../source/includes/fact-explain-method-revert.rst:1
msgid ""
"For a mixed version sharded cluster with version 3.0 :program:`mongos` and "
"at least one 2.6 :program:`mongod` shard, when you run |explain| in a "
"version 3.0 :program:`mongo` shell, |explain| will retry with the "
":operator:`$explain` operator to return results in the 2.6 format."
msgstr ""
