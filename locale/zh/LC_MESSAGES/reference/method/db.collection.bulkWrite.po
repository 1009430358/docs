#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/db.collection.bulkWrite.txt:3
msgid "db.collection.bulkWrite()"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:20
msgid ""
"Performs multiple write operations with controls for order of execution."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:23
msgid ":method:`~db.collection.bulkWrite()` has the following syntax:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:37
msgid ""
"- A boolean ``acknowledged`` as ``true`` if the operation ran with   "
":term:`write concern` or ``false`` if write concern was disabled.  - A count"
" for each write operation.  - An array containing an ``_id`` for each "
"successfully inserted or   upserted documents."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:38
msgid ""
"A boolean ``acknowledged`` as ``true`` if the operation ran with "
":term:`write concern` or ``false`` if write concern was disabled."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:41
msgid "A count for each write operation."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:43
msgid ""
"An array containing an ``_id`` for each successfully inserted or upserted "
"documents."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:47
msgid "Behavior"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:49
msgid ""
":method:`~db.collection.bulkWrite()` takes an array of write operations and "
"executes each of them. By default operations are executed in order. See :ref"
":`bulkwrite-write-operations-executionofoperations` for controlling the "
"order of write operation execution."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:58
msgid "Write Operations"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:63
msgid "insertOne"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:65
msgid "Inserts a single document into the collection."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:67
msgid "See :method:`db.collection.insertOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:78
msgid "updateOne and updateMany"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:80
msgid ""
"``updateOne`` updates a *single* document in the collection that matches the"
" filter. If multiple documents match, ``updateOne`` will update the *first* "
"matching document only. See :method:`db.collection.updateOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:96
msgid ""
"``updateMany`` updates *all* documents in the collection that match the "
"filter. See :method:`db.collection.updateMany()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:111
#: ../source/reference/method/db.collection.bulkWrite.txt:141
#: ../source/reference/method/db.collection.bulkWrite.txt:173
msgid ""
"Use :ref:`query selectors<query-selectors>` such as those used with "
":method:`~db.collection.find()` for the ``filter`` field."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:114
msgid ""
"Use :doc:`/reference/operator/update/` such as :update:`$set`, "
":update:`$unset`, or :update:`$rename` for the ``update`` field."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:118
#: ../source/reference/method/db.collection.bulkWrite.txt:147
msgid "By default, ``upsert`` is ``false``."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:123
msgid "replaceOne"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:125
msgid ""
"``replaceOne`` replaces a *single* document in the collection that matches "
"the filter. If multiple documents match, ``replaceOne`` will replace the "
"*first* matching document only. See :method:`db.collection.replaceOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:144
msgid ""
"The ``replacement`` field cannot contain :doc:`update operators "
"</reference/operator/update>`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:152
msgid "deleteOne and deleteMany"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:154
msgid ""
"``deleteOne`` deletes a *single* document in the collection that match the "
"filter. If multiple documents match, ``deleteOne`` will delete the *first* "
"matching document only. See :method:`db.collection.deleteOne()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:164
msgid ""
"``deleteMany`` deletes *all* documents in the collection that match the "
"filter. See :method:`db.collection.deleteMany()`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:180
msgid "``_id`` Field"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:182
msgid ""
"If the document does not specify an :term:`_id` field, then "
":program:`mongod` adds the ``_id`` field and assign a unique "
":method:`ObjectId` for the document before inserting or upserting it. Most "
"drivers create an ObjectId and insert the ``_id`` field, but the "
":program:`mongod` will create and populate the ``_id`` if the driver or "
"application does not."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:189
msgid ""
"If the document contains an ``_id`` field, the ``_id`` value must be unique "
"within the collection to avoid duplicate key error."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:192
msgid ""
"Update or replace operations cannot specify an ``_id`` value that differs "
"from the original document."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:198
msgid "Execution of Operations"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:200
msgid ""
"The ``ordered`` parameter specifies whether "
":method:`~db.collection.bulkWrite()` will execute operations in order or "
"not. By default, operations are executed in order."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:204
msgid ""
"The following code represents a :method:`~db.collection.bulkWrite()` with "
"five operations."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:220
msgid ""
"In the default ``ordered : true`` state, each operation will be executed in "
"order, from the first operation ``insertOne`` to the last operation "
"``deleteMany``."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:224
msgid ""
"If ``ordered`` is set to false, operations may be reordered by "
":program:`mongod` to increase performance. Applications should not depend on"
" order of operation execution."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:228
msgid ""
"The following code represents an unordered "
":method:`~db.collection.bulkWrite()` with six operations:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:245
msgid ""
"With ``ordered : false``, the results of the operation may vary. For "
"example, the ``deleteOne`` or ``deleteMany`` may remove more or fewer "
"documents depending on whether the run before or after the ``insertOne``, "
"``updateOne``, ``updateMany``, or ``replaceOne`` operations."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:1
msgid ""
"Each group of operations can have at most :limit:`1000 operations <Write "
"Command Operation Limit Size>`. If a group exceeds this :limit:`limit<Write "
"Command Operation Limit Size>`, MongoDB will divide the group into smaller "
"groups of 1000 or less. For example, if the queue consists of 2000 "
"operations, MongoDB creates 2 groups, each with 1000 operations."
msgstr ""

#: ../source/includes/fact-bulkwrite-operation-batches.rst:8
msgid ""
"The sizes and grouping mechanics are internal performance details and are "
"subject to change in future versions."
msgstr ""

#: ../source/includes/fact-bulk-operation-sharded-cluster.rst:1
msgid ""
"Executing an :method:`ordered <db.collection.initializeOrderedBulkOp()>` "
"list of operations on a sharded collection will generally be slower than "
"executing an :method:`unordered <db.collection.initializeUnorderedBulkOp()>`"
" list since with an ordered list, each operation must wait for the previous "
"operation to finish."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:255
msgid "Capped Collections"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:257
msgid ""
":method:`~db.collection.bulkWrite()` write operations have restrictions when"
" used on a :term:`capped collection`."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:260
msgid ""
"``updateOne`` and ``updateMany`` throw a ``WriteError`` if the ``update`` "
"criteria increases the size of the document being modified."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:263
msgid ""
"``replaceOne`` throws a ``WriteError`` if the ``replacement`` document has a"
" larger size than the original document."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:267
msgid ""
"``deleteOne`` and ``deleteMany`` throw a ``WriteError`` if used on a capped "
"collection."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:271
msgid "Error Handling"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:273
msgid ""
":method:`~db.collection.bulkWrite()` throws a ``BulkWriteError`` exception "
"on errors."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:276
msgid ""
"Excluding :doc:`/reference/write-concern` errors, ordered operations stop "
"after an error, while unordered operations continue to process any remaining"
" write operations in the queue."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:280
msgid ""
"Write concern errors are displayed in the ``writeConcernErrors`` field, "
"while all other errors are displayed in the ``writeErrors`` field. If an "
"error is encountered, the number of successful write operations are "
"displayed instead of the inserted ``_id`` values. Ordered operations display"
" the single error encountered while unordered operations display each error "
"in an array."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:288
msgid "Examples"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:293
msgid "Bulk Write Operations"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:295
#: ../source/reference/method/db.collection.bulkWrite.txt:404
msgid "The ``characters`` collection contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:303
msgid ""
"The following :method:`~db.collection.bulkWrite()` performs multiple "
"operations on the collection:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:349
#: ../source/reference/method/db.collection.bulkWrite.txt:460
msgid "The operation returns the following:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:368
msgid ""
"If the ``_id`` value for the second of the ``insertOne`` operations were a "
"duplicate of an existing ``_id``, the following exception would be thrown:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:394
msgid ""
"Since ``ordered`` was true by default, only the first operation completes "
"successfully. The rest are not executed. Running the "
":method:`~db.collection.bulkWrite()` with ``ordered : false`` would allow "
"the remaining operations to complete despite the error."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:402
msgid "Unordered Bulk Write"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:412
msgid ""
"The following :method:`~db.collection.bulkWrite()` performs multiple "
"``unordered`` operations on the ``characters`` collection. Note that one of "
"the ``insertOne`` stages has a duplicate ``_id`` value:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:485
msgid ""
"Since this was an ``unordered`` operation, the writes remaining in the queue"
" were processed despite the exception."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:491
msgid "Bulk Write with Write Concern"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:493
msgid "The ``enemies`` collection contains the following documents:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:502
msgid ""
"The following :method:`~db.collection.bulkWrite()` performs multiple "
"operations on the collection using a :ref:`write concern <wc-w>` value of "
"``\"majority\"`` and :ref:`timeout <wc-wtimeout>` value of 100 milliseconds:"
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:541
msgid ""
"If the total time required for all required nodes in the replica set to "
"acknowledge the write operation is greater than ``wtimeout``, the following "
"``writeConcernError`` is displayed when the ``wtimeout`` period has passed."
msgstr ""

#: ../source/reference/method/db.collection.bulkWrite.txt:567
msgid ""
"The result set shows the operations executed since ``writeConcernErrors`` "
"errors are *not* an indicator that any write operations failed."
msgstr ""
