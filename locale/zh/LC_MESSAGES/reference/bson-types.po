# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/bson-types.txt:3
msgid "BSON Types"
msgstr ""

#: ../source/reference/bson-types.txt:7
msgid ""
":term:`BSON` is a binary serialization format used to store documents and "
"make remote procedure calls in MongoDB. The BSON specification is located at"
" `bsonspec.org <http://bsonspec.org/>`_."
msgstr ""

#: ../source/reference/bson-types.txt:11
msgid ""
"BSON supports the following data types as values in documents. Each data "
"type has a corresponding number that can be used with the :query:`$type` "
"operator to query documents by BSON type."
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
msgid "**Type**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
msgid "**Number**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
msgid "**Notes**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
#: ../source/reference/bson-types.txt:46
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
#: ../source/includes/fact-sort-order.rst:8
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
#: ../source/includes/fact-sort-order.rst:9
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:8
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:8
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "Object id"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
#: ../source/includes/fact-sort-order.rst:12
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:12
#: ../source/includes/fact-sort-order.rst:13
#: ../source/reference/bson-types.txt:118
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:12
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:13
#: ../source/includes/fact-sort-order.rst:5
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:13
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
#: ../source/includes/fact-sort-order.rst:15
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:17
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:17
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:18
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:18
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
#: ../source/includes/fact-sort-order.rst:14
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "255"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "Query with ``-1``."
msgstr ""

#: ../source/includes/fact-bson-types.rst:22
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:22
msgid "127"
msgstr ""

#: ../source/reference/bson-types.txt:17
msgid "To determine a field's type, see :ref:`check-types-in-shell`."
msgstr ""

#: ../source/reference/bson-types.txt:19
msgid ""
"If you convert BSON to JSON, see the :doc:`Extended JSON </reference"
"/mongodb-extended-json>` reference."
msgstr ""

#: ../source/reference/bson-types.txt:25
msgid "Comparison/Sort Order"
msgstr ""

#: ../source/includes/fact-sort-order.rst:1
msgid ""
"When comparing values of different :term:`BSON` types, MongoDB uses the "
"following comparison order, from lowest to highest:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:4
msgid "MinKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:6
msgid "Numbers (ints, longs, doubles)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:7
msgid "Symbol, String"
msgstr ""

#: ../source/includes/fact-sort-order.rst:10
msgid "BinData"
msgstr ""

#: ../source/includes/fact-sort-order.rst:11
#: ../source/reference/bson-types.txt:35
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-sort-order.rst:16
msgid "MaxKey (internal type)"
msgstr ""

#: ../source/includes/fact-sort-order.rst:18
msgid ""
"MongoDB treats some types as equivalent for comparison purposes. For "
"instance, numeric types undergo conversion before comparison."
msgstr ""

#: ../source/includes/fact-sort-order.rst:21
msgid ""
"Date objects sort before Timestamp objects. Previously Date and Timestamp "
"objects sorted together."
msgstr ""

#: ../source/includes/fact-sort-order.rst:25
msgid ""
"The comparison treats a non-existent field as it would an empty BSON Object."
" As such, a sort on the ``a`` field in documents ``{ }`` and ``{ a: null }``"
" would treat the documents as equivalent in sort order."
msgstr ""

#: ../source/includes/fact-sort-order.rst:29
msgid ""
"With arrays, a less-than comparison or an ascending sort compares the "
"smallest element of arrays, and a greater-than comparison or a descending "
"sort compares the largest element of the arrays. As such, when comparing a "
"field whose value is a single-element array (e.g. ``[ 1 ]``) with non-array "
"fields (e.g. ``2``), the comparison is between ``1`` and ``2``. A comparison"
" of an empty array (e.g. ``[ ]``) treats the empty array as less than "
"``null`` or a missing field."
msgstr ""

#: ../source/includes/fact-sort-order.rst:37
msgid "MongoDB sorts ``BinData`` in the following order:"
msgstr ""

#: ../source/includes/fact-sort-order.rst:39
msgid "First, the length or size of the data."
msgstr ""

#: ../source/includes/fact-sort-order.rst:41
msgid "Then, by the BSON one-byte subtype."
msgstr ""

#: ../source/includes/fact-sort-order.rst:43
msgid "Finally, by the data, performing a byte-by-byte comparison."
msgstr ""

#: ../source/reference/bson-types.txt:29
msgid ""
"The following sections describe special considerations for particular BSON "
"types."
msgstr ""

#: ../source/reference/bson-types.txt:37
msgid ""
"ObjectIds are: small, likely unique, fast to generate, and ordered. These "
"values consists of 12-bytes, where the first four bytes are a timestamp that"
" reflect the ObjectId's creation. Refer to the :doc:`ObjectId </reference"
"/object-id>` documentation for more information."
msgstr ""

#: ../source/reference/bson-types.txt:48
msgid ""
"BSON strings are UTF-8. In general, drivers for each programming language "
"convert from the language's string format to UTF-8 when serializing and "
"deserializing BSON. This makes it possible to store most international "
"characters in BSON strings with ease. [#sort-string-internationalization]_ "
"In addition, MongoDB :query:`$regex` queries support UTF-8 in the regex "
"string."
msgstr ""

#: ../source/reference/bson-types.txt:55
msgid ""
"Given strings using UTF-8 character sets, using :method:`sort() "
"<cursor.sort()>` on strings will be reasonably correct. However, because "
"internally :method:`sort() <cursor.sort()>` uses the C++ ``strcmp`` api, the"
" sort order may handle some characters incorrectly."
msgstr ""

#: ../source/reference/bson-types.txt:64
msgid "Timestamps"
msgstr ""

#: ../source/reference/bson-types.txt:66
msgid ""
"BSON has a special timestamp type for *internal* MongoDB use and is **not** "
"associated with the regular :ref:`document-bson-type-date` type. Timestamp "
"values are a 64 bit value where:"
msgstr ""

#: ../source/reference/bson-types.txt:70
msgid ""
"the first 32 bits are a ``time_t`` value (seconds since the Unix epoch)"
msgstr ""

#: ../source/reference/bson-types.txt:72
msgid ""
"the second 32 bits are an incrementing ``ordinal`` for operations within a "
"given second."
msgstr ""

#: ../source/reference/bson-types.txt:75
msgid ""
"Within a single :program:`mongod` instance, timestamp values are always "
"unique."
msgstr ""

#: ../source/reference/bson-types.txt:78
msgid ""
"In replication, the :term:`oplog` has a ``ts`` field. The values in this "
"field reflect the operation time, which uses a BSON timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:84
msgid ""
"The BSON timestamp type is for *internal* MongoDB use. For most cases, in "
"application development, you will want to use the BSON date type. See :ref"
":`document-bson-type-date` for more information."
msgstr ""

#: ../source/reference/bson-types.txt:89
msgid ""
"If you insert a document containing an empty BSON timestamp in a top-level "
"field, the MongoDB server will replace that empty timestamp with the current"
" timestamp value. For example, if you create an insert a document with a "
"timestamp value, as in the following operation:"
msgstr ""

#: ../source/reference/bson-types.txt:100
msgid ""
"Then, the :method:`db.test.find() <db.collection.find()>` operation will "
"return a document that resembles the following:"
msgstr ""

#: ../source/reference/bson-types.txt:107
msgid ""
"If ``ts`` were a field in an embedded document, the server would have left "
"it as an empty timestamp value."
msgstr ""

#: ../source/reference/bson-types.txt:110
msgid ""
"Previously, the server would only replace empty timestamp values in the "
"first two fields, including ``_id``, of an inserted document. Now MongoDB "
"will replace any top-level field."
msgstr ""

#: ../source/reference/bson-types.txt:120
msgid ""
"BSON Date is a 64-bit integer that represents the number of milliseconds "
"since the Unix epoch (Jan 1, 1970). This results in a representable date "
"range of about 290 million years into the past and future."
msgstr ""

#: ../source/reference/bson-types.txt:125
msgid ""
"The `official BSON specification <http://bsonspec.org/#/specification>`_ "
"refers to the BSON Date type as the *UTC datetime*."
msgstr ""

#: ../source/reference/bson-types.txt:128
msgid ""
"BSON Date type is signed. [#unsigned-date]_ Negative values represent dates "
"before 1970."
msgstr ""

#: ../source/reference/bson-types.txt:0 ../source/reference/bson-types.txt:0
#: ../source/reference/bson-types.txt:0 ../source/reference/bson-types.txt:0
msgid "Example"
msgstr ""

#: ../source/reference/bson-types.txt:159
msgid ""
"Prior to version 2.0, ``Date`` values were incorrectly interpreted as "
"*unsigned* integers, which affected sorts, range queries, and indexes on "
"``Date`` fields. Because indexes are not recreated when upgrading, please "
"re-index if you created an index on ``Date`` values with an earlier version,"
" and dates before 1970 are relevant to your application."
msgstr ""
