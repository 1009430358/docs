# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/type.txt:3
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:8
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/type.txt:12
msgid "*Syntax*: ``{ field: { $type: <BSON type> } }``"
msgstr ""

#: ../source/reference/operator/query/type.txt:14
msgid ""
":query:`$type` selects the documents where the *value* of the ``field`` is "
"an instance of the specified numeric :term:`BSON` type. This is useful when "
"dealing with highly unstructured data where data types are not predictable."
msgstr ""

#: ../source/includes/warning-mixing-types.rst:3
msgid ""
"Data models that associate a field name with different data types within a "
"collection are *strongly* discouraged."
msgstr ""

#: ../source/includes/warning-mixing-types.rst:6
msgid ""
"Without internal consistency complicates application code, and can lead to "
"unnecessary complexity for application developers."
msgstr ""

#: ../source/reference/operator/query/type.txt:22
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/type.txt:25
msgid "Available Types"
msgstr ""

#: ../source/reference/operator/query/type.txt:27
msgid ""
"Refer to the following table for the available :term:`BSON` types and their "
"corresponding numbers."
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
msgid "**Type**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
msgid "**Number**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:2
msgid "**Notes**"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:8
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:8
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "Object id"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:12
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:12
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:13
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:13
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:17
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:17
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:18
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:18
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "255"
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "Query with ``-1``."
msgstr ""

#: ../source/includes/fact-bson-types.rst:22
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:22
msgid "127"
msgstr ""

#: ../source/reference/operator/query/type.txt:33
msgid "Minimum and Maximum Values"
msgstr ""

#: ../source/reference/operator/query/type.txt:35
msgid ""
"``MinKey`` and ``MaxKey`` compare less than and greater than all other "
"possible :term:`BSON` element values, respectively, and exist primarily for "
"internal use."
msgstr ""

#: ../source/reference/operator/query/type.txt:39
msgid ""
"To query if a field value is a ``MinKey``, you must use :query:`$type` with "
"``-1`` as in the following example:"
msgstr ""

#: ../source/reference/operator/query/type.txt:47
msgid "Arrays"
msgstr ""

#: ../source/reference/operator/query/type.txt:49
msgid ""
"When applied to arrays, :query:`$type` matches any **inner** element that is"
" of the specified type. Without :term:`projection` this means that the "
"entire array will match if **any** element has the right type. With "
"projection, the results will include just those elements of the requested "
"type."
msgstr ""

#: ../source/reference/operator/query/type.txt:56
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/type.txt:59
msgid "Querying by Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:61
msgid "Consider the following query:"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
msgid ""
"This will list all documents containing a ``tags`` field that is either a "
"string or an array holding at least one string. If you only want to list "
"documents where ``tags`` is an array, you could use :query:`$where`:"
msgstr ""

#: ../source/reference/operator/query/type.txt:75
msgid ""
"Queries that use :query:`$where` requires a complete collection scan and "
"uses :ref:`Server-side JavaScript <server-side-javascript>`."
msgstr ""

#: ../source/reference/operator/query/type.txt:79
msgid "``MinKey`` and ``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/type.txt:81
msgid ""
"The following operation sequence demonstrates both type comparison *and* the"
" special ``MinKey`` and ``MaxKey`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:102
msgid "Minimum Shard Key"
msgstr ""

#: ../source/reference/operator/query/type.txt:104
msgid ""
"To query for the minimum value of a :term:`shard key` of a :term:`sharded "
"cluster`, use the following operation when connected to the "
":program:`mongos`:"
msgstr ""

#: ../source/reference/operator/query/type.txt:114
msgid "Additional Information"
msgstr ""

#: ../source/reference/operator/query/type.txt:116
msgid ""
":method:`~db.collection.find()`, :method:`~db.collection.insert()`, "
":query:`$where`, :term:`BSON`, :term:`shard key`, :term:`sharded cluster` ."
msgstr ""
