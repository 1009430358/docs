#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/type.txt:3
msgid "$type"
msgstr ""

#: ../source/reference/operator/query/type.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/query/type.txt:35
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/type.txt:43
msgid "Available Types"
msgstr ""

#: ../source/includes/fact-bson-types.rst:9
msgid "Double"
msgstr ""

#: ../source/includes/fact-bson-types.rst:10
msgid "1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:14
msgid "String"
msgstr ""

#: ../source/includes/fact-bson-types.rst:15
msgid "2"
msgstr ""

#: ../source/includes/fact-bson-types.rst:19
msgid "Object"
msgstr ""

#: ../source/includes/fact-bson-types.rst:20
msgid "3"
msgstr ""

#: ../source/includes/fact-bson-types.rst:24
msgid "Array"
msgstr ""

#: ../source/includes/fact-bson-types.rst:25
msgid "4"
msgstr ""

#: ../source/includes/fact-bson-types.rst:29
msgid "Binary data"
msgstr ""

#: ../source/includes/fact-bson-types.rst:30
msgid "5"
msgstr ""

#: ../source/includes/fact-bson-types.rst:34
msgid "Undefined"
msgstr ""

#: ../source/includes/fact-bson-types.rst:35
msgid "6"
msgstr ""

#: ../source/includes/fact-bson-types.rst:37
msgid "Deprecated."
msgstr ""

#: ../source/includes/fact-bson-types.rst:40
msgid "7"
msgstr ""

#: ../source/includes/fact-bson-types.rst:44
msgid "Boolean"
msgstr ""

#: ../source/includes/fact-bson-types.rst:45
msgid "8"
msgstr ""

#: ../source/includes/fact-bson-types.rst:49
msgid "Date"
msgstr ""

#: ../source/includes/fact-bson-types.rst:50
msgid "9"
msgstr ""

#: ../source/includes/fact-bson-types.rst:54
msgid "Null"
msgstr ""

#: ../source/includes/fact-bson-types.rst:55
msgid "10"
msgstr ""

#: ../source/includes/fact-bson-types.rst:59
msgid "Regular Expression"
msgstr ""

#: ../source/includes/fact-bson-types.rst:60
msgid "11"
msgstr ""

#: ../source/includes/fact-bson-types.rst:69
msgid "JavaScript"
msgstr ""

#: ../source/includes/fact-bson-types.rst:70
msgid "13"
msgstr ""

#: ../source/includes/fact-bson-types.rst:74
msgid "Symbol"
msgstr ""

#: ../source/includes/fact-bson-types.rst:75
msgid "14"
msgstr ""

#: ../source/includes/fact-bson-types.rst:79
msgid "JavaScript (with scope)"
msgstr ""

#: ../source/includes/fact-bson-types.rst:80
msgid "15"
msgstr ""

#: ../source/includes/fact-bson-types.rst:84
#: ../source/reference/operator/query/type.txt:58
msgid "32-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:85
msgid "16"
msgstr ""

#: ../source/includes/fact-bson-types.rst:89
msgid "Timestamp"
msgstr ""

#: ../source/includes/fact-bson-types.rst:90
msgid "17"
msgstr ""

#: ../source/includes/fact-bson-types.rst:94
#: ../source/reference/operator/query/type.txt:60
msgid "64-bit integer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:95
msgid "18"
msgstr ""

#: ../source/includes/fact-bson-types.rst:99
msgid "Min key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:104
msgid "Max key"
msgstr ""

#: ../source/includes/fact-bson-types.rst:105
msgid "127"
msgstr ""

#: ../source/reference/operator/query/type.txt:65
msgid "Arrays"
msgstr ""

#: ../source/reference/operator/query/type.txt:108
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/type.txt:113
msgid "Querying by Data Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:349
msgid "Additional Information"
msgstr ""

#: ../source/reference/operator/query/type.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/type.txt:18
msgid ""
":query:`$type` selects the documents where the *value* of the ``field`` is "
"an instance of the specified :term:`BSON` type. Querying by data type is "
"useful when dealing with highly unstructured data where data types are not "
"predictable."
msgstr ""

#: ../source/reference/operator/query/type.txt:23
msgid "A :query:`$type` expression has the following syntax:"
msgstr ""

#: ../source/reference/operator/query/type.txt:31
msgid ""
":ref:`document-type-available-types` describes the BSON types and their "
"corresponding numeric and string aliases."
msgstr ""

#: ../source/reference/operator/query/type.txt:37
msgid ""
":query:`$type` returns documents where the BSON type of the ``field`` "
"matches the BSON type passed to :query:`$type`."
msgstr ""

#: ../source/reference/operator/query/type.txt:45
msgid ""
":query:`$type` operator accepts string aliases for the BSON types in "
"addition to the numbers corresponding to the BSON types. Previous versions "
"only accepted the numbers corresponding to the BSON type."
msgstr ""

#: ../source/includes/fact-bson-types.rst:4
msgid "Type"
msgstr ""

#: ../source/includes/fact-bson-types.rst:5
msgid "Number"
msgstr ""

#: ../source/includes/fact-bson-types.rst:6
msgid "Alias"
msgstr ""

#: ../source/includes/fact-bson-types.rst:7
msgid "Notes"
msgstr ""

#: ../source/includes/fact-bson-types.rst:11
msgid "\"double\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:16
msgid "\"string\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:21
msgid "\"object\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:26
msgid "\"array\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:31
msgid "\"binData\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:36
msgid "\"undefined\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:39
msgid "ObjectId"
msgstr ""

#: ../source/includes/fact-bson-types.rst:41
msgid "\"objectId\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:46
msgid "\"bool\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:51
msgid "\"date\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:56
msgid "\"null\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:61
msgid "\"regex\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:64
msgid "DBPointer"
msgstr ""

#: ../source/includes/fact-bson-types.rst:65
msgid "12"
msgstr ""

#: ../source/includes/fact-bson-types.rst:66
msgid "\"dbPointer\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:71
msgid "\"javascript\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:76
msgid "\"symbol\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:81
msgid "\"javascriptWithScope\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:86
msgid "\"int\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:91
msgid "\"timestamp\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:96
msgid "\"long\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:100
msgid "-1"
msgstr ""

#: ../source/includes/fact-bson-types.rst:101
msgid "\"minKey\""
msgstr ""

#: ../source/includes/fact-bson-types.rst:106
msgid "\"maxKey\""
msgstr ""

#: ../source/reference/operator/query/type.txt:53
msgid ""
":query:`$type` supports the ``number`` alias, which will match against the "
"following :term:`BSON` types:"
msgstr ""

#: ../source/reference/operator/query/type.txt:56
msgid "double"
msgstr ""

#: ../source/reference/operator/query/type.txt:62
msgid "See :ref:`document-querying-by-data-type`"
msgstr ""

#: ../source/reference/operator/query/type.txt:67
msgid ""
"When applied to arrays, :query:`$type` matches any **inner** element that is"
" of the specified :term:`BSON` type. For example, when matching for ``$type "
": 'array'``, the document will match if the field has a nested array. It "
"will not return results where the field itself is an ``array``."
msgstr ""

#: ../source/reference/operator/query/type.txt:72
msgid "See :ref:`document-querying-by-array-type` for an example."
msgstr ""

#: ../source/reference/operator/query/type.txt:76
msgid "MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:78
msgid ""
":bsontype:`MinKey <data_minkey>` and :bsontype:`MaxKey <data_maxkey>` are "
"used in comparison operations and exist primarily for internal use. For all "
"possible :term:`BSON` element values, ``MinKey`` will always be the smallest"
" value while ``MaxKey`` will always be the greatest value."
msgstr ""

#: ../source/reference/operator/query/type.txt:83
msgid ""
"Querying for  ``minKey`` or ``maxKey`` with :query:`$type` will only return "
"fields that match the special ``MinKey`` or ``MaxKey`` values."
msgstr ""

#: ../source/reference/operator/query/type.txt:87
msgid ""
"Suppose that the ``data`` collection has two documents with ``MinKey`` and "
"``MaxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:95
msgid "The following query will return the document with ``_id: 1``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:101
msgid "The following query will return the document with ``_id: 2``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:115
msgid ""
"The ``addressBook`` contains addresses and zipcodes, where ``zipCode`` has "
"``string``, ``int``, ``double``, and ``long`` values:"
msgstr ""

#: ../source/reference/operator/query/type.txt:130
msgid ""
"The following queries return all documents where ``zipCode`` is the "
":term:`BSON` type ``string``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:139
#: ../source/reference/operator/query/type.txt:153
#: ../source/reference/operator/query/type.txt:166
msgid "These queries return:"
msgstr ""

#: ../source/reference/operator/query/type.txt:145
msgid ""
"The following queries return all documents where ``zipCode`` is the "
":term:`BSON` type ``double``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:159
msgid ""
"The following query uses the ``number`` alias to return documents where "
"``zipCode`` is the :term:`BSON` type ``double``, ``int``, or ``long``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:177
msgid "Querying by MinKey and MaxKey"
msgstr ""

#: ../source/reference/operator/query/type.txt:179
msgid ""
"The ``restaurants`` collection uses ``minKey`` for any grade that is a "
"failing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:204
msgid "And ``maxKey`` for any grade that is the highest passing grade:"
msgstr ""

#: ../source/reference/operator/query/type.txt:228
msgid ""
"The following query returns any restaurant whose ``grades.grade`` field "
"contains  ``minKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:237
#: ../source/reference/operator/query/type.txt:271
msgid "This returns"
msgstr ""

#: ../source/reference/operator/query/type.txt:261
msgid ""
"The following query returns any restaurant whose ``grades.grade`` field "
"contains ``maxKey``:"
msgstr ""

#: ../source/reference/operator/query/type.txt:298
msgid "Querying by Array Type"
msgstr ""

#: ../source/reference/operator/query/type.txt:300
msgid "The ``SensorReading`` collection contains the following documents:"
msgstr ""

#: ../source/reference/operator/query/type.txt:323
msgid ""
"The following query returns any document where ``readings`` has an element "
"of :term:`BSON` type ``array``; i.e. the :query:`$type` does not check if "
"``readings`` itself is an array:"
msgstr ""

#: ../source/reference/operator/query/type.txt:331
msgid "This returns the following doucment:"
msgstr ""

#: ../source/reference/operator/query/type.txt:345
msgid ""
"The document with ``_id : 1`` has at least one element in ``readings`` that "
"is an ``array``, whereas the document with ``_id : 2`` does *not*."
msgstr ""

#: ../source/reference/operator/query/type.txt:351
msgid ""
":method:`~db.collection.find()`, :doc:`BSON Types </reference/bson-types>`."
msgstr ""

#~ msgid "*Syntax*: ``{ field: { $type: <BSON type> } }``"
#~ msgstr ""

#~ msgid ""
#~ ":query:`$type` selects the documents where the *value* of the ``field`` is "
#~ "an instance of the specified numeric :term:`BSON` type. This is useful when "
#~ "dealing with highly unstructured data where data types are not predictable."
#~ msgstr ""

#~ msgid ""
#~ "Data models that associate a field name with different data types within a "
#~ "collection are *strongly* discouraged."
#~ msgstr ""

#~ msgid ""
#~ "Without internal consistency complicates application code, and can lead to "
#~ "unnecessary complexity for application developers."
#~ msgstr ""

#~ msgid ""
#~ "Refer to the following table for the available :term:`BSON` types and their "
#~ "corresponding numbers."
#~ msgstr ""

#~ msgid "**Type**"
#~ msgstr ""

#~ msgid "**Number**"
#~ msgstr ""

#~ msgid "**Notes**"
#~ msgstr ""

#~ msgid "Object id"
#~ msgstr ""

#~ msgid "255"
#~ msgstr ""

#~ msgid "Query with ``-1``."
#~ msgstr ""

#~ msgid "Minimum and Maximum Values"
#~ msgstr ""

#~ msgid ""
#~ "``MinKey`` and ``MaxKey`` compare less than and greater than all other "
#~ "possible :term:`BSON` element values, respectively, and exist primarily for "
#~ "internal use."
#~ msgstr ""

#~ msgid ""
#~ "To query if a field value is a ``MinKey``, you must use :query:`$type` with "
#~ "``-1`` as in the following example:"
#~ msgstr ""

#~ msgid ""
#~ "When applied to arrays, :query:`$type` matches any **inner** element that is"
#~ " of the specified type. Without :term:`projection` this means that the "
#~ "entire array will match if **any** element has the right type. With "
#~ "projection, the results will include just those elements of the requested "
#~ "type."
#~ msgstr ""

#~ msgid "Consider the following query:"
#~ msgstr ""

#~ msgid ""
#~ "This will list all documents containing a ``tags`` field that is either a "
#~ "string or an array holding at least one string. If you only want to list "
#~ "documents where ``tags`` is an array, you could use :query:`$where`:"
#~ msgstr ""

#~ msgid ""
#~ "Queries that use :query:`$where` requires a complete collection scan and "
#~ "uses :ref:`Server-side JavaScript <server-side-javascript>`."
#~ msgstr ""

#~ msgid "``MinKey`` and ``MaxKey``"
#~ msgstr ""

#~ msgid ""
#~ "The following operation sequence demonstrates both type comparison *and* the"
#~ " special ``MinKey`` and ``MaxKey`` values:"
#~ msgstr ""

#~ msgid "Minimum Shard Key"
#~ msgstr ""

#~ msgid ""
#~ "To query for the minimum value of a :term:`shard key` of a :term:`sharded "
#~ "cluster`, use the following operation when connected to the "
#~ ":program:`mongos`:"
#~ msgstr ""

#~ msgid ""
#~ ":method:`~db.collection.find()`, :method:`~db.collection.insert()`, "
#~ ":query:`$where`, :term:`BSON`, :term:`shard key`, :term:`sharded cluster` ."
#~ msgstr ""
