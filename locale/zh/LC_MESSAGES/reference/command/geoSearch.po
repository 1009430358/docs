#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/geoSearch.txt:3
msgid "geoSearch"
msgstr ""

#: ../source/reference/command/geoSearch.txt:28
msgid ""
"Unless specified otherwise, the :dbcommand:`geoSearch` command limits "
"results to 50 documents."
msgstr ""

#: ../source/reference/command/geoSearch.txt:31
msgid ":dbcommand:`geoSearch` is not supported for sharded clusters."
msgstr ""

#: ../source/reference/command/geoSearch.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/command/geoSearch.txt:15
msgid ""
"The :dbcommand:`geoSearch` command provides an interface to MongoDB's "
":term:`haystack index` functionality. These indexes are useful for returning"
" results based on location coordinates *after* collecting results based on "
"some other query (i.e. a \"haystack.\")"
msgstr ""

#: ../source/reference/command/geoSearch.txt:20
msgid ""
"The :dbcommand:`geoSearch` command accepts a :term:`document` that contains "
"the following fields."
msgstr ""

#: ../source/reference/command/geoSearch.txt:26
msgid "Behavior"
msgstr ""

#: ../source/reference/command/geoSearch.txt:35
msgid "Examples"
msgstr ""

#: ../source/reference/command/geoSearch.txt:37
msgid "Consider the following example:"
msgstr ""

#: ../source/reference/command/geoSearch.txt:49
msgid ""
"The above command returns all documents with a ``type`` of ``restaurant`` "
"having a maximum distance of 6 units from the coordinates ``[ -73.9667, "
"40.78 ]`` in the collection ``places`` up to a maximum of 30 results."
msgstr ""

#: ../source/reference/command/geoSearch.txt:55
msgid "Override Default Read Concern"
msgstr ""

#: ../source/reference/command/geoSearch.txt:57
msgid ""
"To override the default read concern level of :readconcern:`\"local\"`, use "
"the ``readConcern`` option."
msgstr ""

#: ../source/reference/command/geoSearch.txt:60
msgid ""
"The following operation on a replica set specifies a :doc:`/reference/read-"
"concern` of :readconcern:`\"majority\"` to read the most recent copy of the "
"data confirmed as having been written to a majority of the nodes."
msgstr ""

#: ../source/includes/fact-enable-majority-readConcern.rst:1
msgid ""
"To use a :term:`read concern` level of :readconcern:`\"majority\"`, you must"
" use the WiredTiger storage engine and start the :program:`mongod` instances"
" with the :option:`--enableMajorityReadConcern` command line option (or the "
":setting:`replication.enableMajorityReadConcern` setting if using a "
"configuration file)."
msgstr ""

#: ../source/includes/fact-readConcern-majority-protocolVersion.rst:1
msgid ""
"Only replica sets using :rsconf:`protocol version 1 <protocolVersion>` "
"support :readconcern:`\"majority\"` read concern. Replica sets running "
"protocol version 0 do not support :readconcern:`\"majority\"` read concern."
msgstr ""

#: ../source/includes/fact-readConcern-most-recent-data-in-node.rst:1
msgid ""
"Regardless of the :term:`read concern` level, the most recent data on a node"
" may not reflect the most recent version of the data in the system."
msgstr ""

#: ../source/includes/usage-read-concern-majority.rst:1
msgid ""
"To ensure that a single thread can read its own writes, use "
":readconcern:`\"majority\"` read concern and :writeconcern:`\"majority\"` "
"write concern against the primary of the replica set."
msgstr ""

#~ msgid ""
#~ "The :dbcommand:`geoSearch` command provides an interface to MongoDB's "
#~ ":term:`haystack index` functionality. These indexes are useful for returning"
#~ " results based on location coordinates *after* collecting results based on "
#~ "some other query (i.e. a \"haystack.\") Consider the following example:"
#~ msgstr ""

#~ msgid ""
#~ "The above command returns all documents with a ``type`` of ``restaurant`` "
#~ "having a maximum distance of 6 units from the coordinates ``[30,33]`` in the"
#~ " collection ``places`` up to a maximum of 30 results."
#~ msgstr ""
