#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/addShard.txt:3
msgid "addShard"
msgstr ""

#: ../source/reference/command/addShard.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/addShard.txt:18
msgid ""
"Adds either a database instance or a :term:`replica set` to a :term:`sharded"
" cluster`. The optimal configuration is to deploy shards across replica "
"sets."
msgstr ""

#: ../source/reference/command/addShard.txt:22
msgid ""
"Run :dbcommand:`addShard` when connected to a :program:`mongos` instance.  "
"The command takes the following form when adding a single database instance "
"as a shard:"
msgstr ""

#: ../source/reference/command/addShard.txt:30
msgid "When adding a replica set as a shard, use the following form:"
msgstr ""

#: ../source/reference/command/addShard.txt:36
msgid "The command contains the following fields:"
msgstr ""

#: ../source/reference/command/addShard.txt:40
msgid ""
"The :dbcommand:`addShard` command stores shard configuration information in "
"the :term:`config database`. Always run :dbcommand:`addShard` when using the"
" ``admin`` database."
msgstr ""

#: ../source/reference/command/addShard.txt:52
msgid "Considerations"
msgstr ""

#: ../source/reference/command/addShard.txt:55
msgid "Balancing"
msgstr ""

#: ../source/includes/fact-adding-shards-changes-cluster-balance.rst:1
msgid ""
"When you add a shard to a sharded cluster, you affect the balance of "
":term:`chunks <chunk>` among the shards of a cluster for all existing "
"sharded collections. The balancer will begin migrating chunks so that the "
"cluster will achieve balance. See :doc:`/core/sharding-balancing` for more "
"information."
msgstr ""

#: ../source/includes/fact-archiveMovedChunks.rst:3
msgid ""
"Chunk migrations can have an impact on disk space. Starting in MongoDB 2.6, "
"the source shard automatically archives the migrated documents by default. "
"For details, see :ref:`moveChunk-directory`."
msgstr ""

#: ../source/reference/command/addShard.txt:60
msgid "Hidden Members"
msgstr ""

#: ../source/includes/important-add-shard-not-compatible-with-hidden-members.rst:1
msgid ""
"You cannot include a :doc:`hidden member </core/replica-set-hidden-member>` "
"in the seed list provided to |cmd-name|."
msgstr ""

#: ../source/reference/command/addShard.txt:66
msgid "Examples"
msgstr ""

#: ../source/reference/command/addShard.txt:68
msgid ""
"The following command adds the database instance running on port ``27027`` "
"on the host ``mongodb0.example.net`` as a shard:"
msgstr ""

#: ../source/reference/command/addShard.txt:78
msgid ""
"Do not use ``localhost`` for the hostname unless your :term:`configuration "
"server <config database>` is also running on ``localhost``."
msgstr ""

#: ../source/reference/command/addShard.txt:82
msgid "The following command adds a replica set as a shard:"
msgstr ""

#: ../source/reference/command/addShard.txt:89
msgid ""
"You may specify all members in the replica set. All additional hostnames "
"must be members of the same replica set."
msgstr ""

#: ../source/reference/command/addShard.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/command/addShard.txt:44
msgid ""
"Specify a ``maxSize`` when you have machines with different disk capacities,"
" or if you want to limit the amount of data on some shards. The ``maxSize`` "
"constraint prevents the :term:`balancer` from migrating chunks to the shard "
"when the value of :serverstatus:`mem.mapped` exceeds the value of "
"``maxSize``."
msgstr ""

#~ msgid ""
#~ "Specify a ``maxSize`` when you have machines with different disk capacities,"
#~ " or if you want to limit the amount of data on some shards. The ``maxSize`` "
#~ "constraint prevents the :term:`balancer` from migrating chunks to the shard "
#~ "when the value of :data:`mem.mapped <serverStatus.mem.mapped>` exceeds the "
#~ "value of ``maxSize``."
#~ msgstr ""
