#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/group.txt:3
msgid "group"
msgstr ""

#: ../source/reference/command/group.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/group.txt:20
msgid ""
"Groups documents in a collection by the specified key and performs simple "
"aggregation functions, such as computing counts and sums. The command is "
"analogous to a ``SELECT <...> GROUP BY`` statement in SQL. The command "
"returns a document with the grouped records as well as the command meta-"
"data."
msgstr ""

#: ../source/reference/command/group.txt:26
msgid "The :dbcommand:`group` command takes the following prototype form:"
msgstr ""

#: ../source/reference/command/group.txt:43
msgid "The command accepts a document with the following fields:"
msgstr ""

#: ../source/reference/command/group.txt:49
msgid ""
"For the shell, MongoDB provides a wrapper method "
":method:`db.collection.group()`. However, the "
":method:`db.collection.group()` method takes the ``keyf`` field and the "
"``reduce`` field whereas the :dbcommand:`group` command takes the ``$keyf`` "
"field and the ``$reduce`` field."
msgstr ""

#: ../source/reference/command/group.txt:56
msgid "Behavior"
msgstr ""

#: ../source/reference/command/group.txt:59
msgid "Limits and Restrictions"
msgstr ""

#: ../source/reference/command/group.txt:61
msgid ""
"The :dbcommand:`group` command does not work with :term:`sharded clusters "
"<sharded cluster>`. Use the :term:`aggregation framework` or :term:`map-"
"reduce` in :term:`sharded environments <sharding>`."
msgstr ""

#: ../source/reference/command/group.txt:65
msgid ""
"The result set must fit within the :ref:`maximum BSON document size <limit-"
"bson-document-size>`."
msgstr ""

#: ../source/reference/command/group.txt:68
msgid ""
"Additionally, in version 2.2, the returned array can contain at most 20,000 "
"elements; i.e. at most 20,000 unique groupings. For group by operations that"
" results in more than 20,000 unique groupings, use :dbcommand:`mapReduce`. "
"Previous versions had a limit of 10,000 elements."
msgstr ""

#: ../source/reference/command/group.txt:74
msgid ""
"Prior to 2.4, the :dbcommand:`group` command took the :program:`mongod` "
"instance's JavaScript lock which blocked all other JavaScript execution."
msgstr ""

#: ../source/reference/command/group.txt:78
msgid "``mongo`` Shell JavaScript Functions/Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
msgid ""
"In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the "
":dbcommand:`group` command, and :query:`$where` operator expressions "
"**cannot** access certain global functions or properties, such as ``db``, "
"that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
msgid ""
"When upgrading to MongoDB 2.4, you will need to refactor your code if your "
":dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands,"
" or :query:`$where` operator expressions include any global shell functions "
"or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
msgid ""
"The following JavaScript functions and properties **are available** to "
":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` "
"command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
msgid "Available Functions"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``args``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``MinKey``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``assert()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``BinData()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``doassert()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``emit()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``gc()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``HexData()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``isObject()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``isString()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``Map()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``MD5()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``print()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``printjson()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``sleep()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``tojson()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``UUID()``"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "``version()``"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-group.rst:3
msgid "JavaScript in MongoDB"
msgstr ""

#: ../source/includes/extracts/admonition-js-prevalence-group.rst:5
msgid ""
"Although :dbcommand:`group` uses JavaScript, most interactions with MongoDB "
"do not use JavaScript but use an :doc:`idiomatic driver "
"</applications/drivers>` in the language of the interacting application."
msgstr ""

#: ../source/reference/command/group.txt:87
msgid "Examples"
msgstr ""

#: ../source/reference/command/group.txt:89
msgid ""
"The following are examples of the :method:`db.collection.group()` method. "
"The examples assume an ``orders`` collection with documents of the following"
" prototype:"
msgstr ""

#: ../source/reference/command/group.txt:109
msgid "Group by Two Fields"
msgstr ""

#: ../source/reference/command/group.txt:111
msgid ""
"The following example groups by the ``ord_dt`` and ``item.sku`` fields those"
" documents that have ``ord_dt`` greater than ``01/01/2012``:"
msgstr ""

#: ../source/reference/command/group.txt:130
msgid ""
"The result is a document that contain the ``retval`` field which contains "
"the group by records, the ``count`` field which contains the total number of"
" documents grouped, the ``keys`` field which contains the number of unique "
"groupings (i.e. number of elements in the ``retval``), and the ``ok`` field "
"which contains the command status:"
msgstr ""

#: ../source/reference/command/group.txt:157
#: ../source/reference/command/group.txt:213
msgid "The method call is analogous to the SQL statement:"
msgstr ""

#: ../source/reference/command/group.txt:167
msgid "Calculate the Sum"
msgstr ""

#: ../source/reference/command/group.txt:169
msgid ""
"The following example groups by the ``ord_dt`` and ``item.sku`` fields those"
" documents that have ``ord_dt`` greater than ``01/01/2012`` and calculates "
"the sum of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:190
#: ../source/reference/command/group.txt:259
msgid ""
"The ``retval`` field of the returned document is an array of documents that "
"contain the group by fields and the calculated aggregation field:"
msgstr ""

#: ../source/reference/command/group.txt:223
msgid "Calculate Sum, Count, and Average"
msgstr ""

#: ../source/reference/command/group.txt:225
msgid ""
"The following example groups by the calculated ``day_of_week`` field, those "
"documents that have ``ord_dt`` greater than ``01/01/2012`` and calculates "
"the sum, count, and average of the ``qty`` field for each grouping:"
msgstr ""

#: ../source/reference/command/group.txt:0
msgid "On this page"
msgstr ""

#: ../source/includes/extracts/admonition-group-command-alternative.rst:2
msgid ""
"Because :dbcommand:`group` uses JavaScript, it is subject to a number of "
"performance limitations. For most cases the :pipeline:`$group` operator in "
"the :doc:`aggregation pipeline </core/aggregation-pipeline>` provides a "
"suitable alternative with fewer restrictions."
msgstr ""

#: ../source/reference/command/group.txt:277
msgid ":doc:`/core/aggregation-pipeline`"
msgstr ""

#~ msgid ":doc:`/core/aggregation`"
#~ msgstr ""
