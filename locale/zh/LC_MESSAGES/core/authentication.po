# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/authentication.txt:5
msgid "Authentication"
msgstr "认证"

#: ../source/core/authentication.txt:9
msgid ""
"Authentication is the process of verifying the identity of a client. When "
"access control, i.e. :doc:`authorization </core/authorization>`, is enabled, "
"MongoDB requires all clients to authenticate themselves first in order to "
"determine the access for the client."
msgstr ""
"认证是一个确认客户端身份的过程。在访问控制（:doc:`authorization </core/"
"authorization>`）开启时，MongoDB要求所有客户必须对自己认证以确保他们是否有权力"
"访问。"

#: ../source/core/authentication.txt:14
msgid ""
"Although authentication and :doc:`authorization </core/authorization>` are "
"closely connected, authentication is distinct from authorization. "
"Authentication verifies the identity of a user; authorization determines the "
"verified user's access to resources and operations."
msgstr ""
"虽然认证和 :doc:`授权 </core/authorization>` 关系非常紧密，认证和授权是两个不同"
"的概念。认证是用来识别用户的身份，授权控制已经认证的用户使用资源和行为的权限。"

#: ../source/core/authentication.txt:19
msgid ""
"MongoDB supports a number of :ref:`authentication mechanisms <security-"
"authentication-mechanisms>` that clients can use to verify their identity. "
"These mechanisms allow MongoDB to integrate into your existing authentication "
"system. See :ref:`security-authentication-mechanisms` for details."
msgstr ""
"MongoDB支持一些客户可以用来认证身份的 :ref:`认证体制 <security-authentication-"
"mechanisms>` 。这些体制允许MongoDB整合到和现有的认证系统里。参见 :ref:"
"`security-authentication-mechanisms` 了解详情。"

#: ../source/core/authentication.txt:25
msgid ""
"In addition to verifying the identity of a client, MongoDB can require members "
"of replica sets and sharded clusters to :ref:`authenticate their membership "
"<inter-process-auth>` to their respective replica set or sharded cluster. See :"
"ref:`inter-process-auth` for more information."
msgstr ""
"除了认证客户端的身份，MongoDB也可以要求复制集和分片集的成员向他们所在的集  :"
"ref:`认证他们的成员身份 <inter-process-auth>` 。 参见 :ref:`inter-process-"
"auth` 了解详情。"

#: ../source/core/authentication.txt:34
msgid "Client Users"
msgstr "客户端用户"

#: ../source/core/authentication.txt:36
msgid ""
"To authenticate a client in MongoDB, you must add a corresponding user to "
"MongoDB. When adding a user, you create the user in a specific database. "
"This database is the :ref:`authentication database <mongo-shell-"
"authentication-options>` for the user."
msgstr ""

#: ../source/core/authentication.txt:41
msgid ""
"Together, the user's name and database serve as a unique identifier for that"
" user. That is, if two users have the same name but are created in different"
" databases, they are two separate users. To authenticate, the client must "
"authenticate the user against the user's :ref:`authentication database "
"<mongo-shell-authentication-options>`. For instance, if using the "
":program:`mongo` shell as a client, you can specify the authentication "
"database for the user with the :ref:`--authenticationDatabase <mongo-shell-"
"authentication-options>` option."
msgstr ""

#: ../source/core/authentication.txt:51
msgid ""
"To add and manage user information, MongoDB provides the "
":method:`db.createUser()` method as well as other :ref:`user management "
"methods <user-management-methods>`. For examples of user management in "
"MongoDB, see :doc:`/tutorial/manage-users-and-roles`."
msgstr ""
"如果想添加或者管理用户信息，MongoDB提供 :method:`db.createUser()` 方法和其他 :"
"ref:`用户管理方法 <user-management-methods> 。:doc:`/tutorial/add-user-to-"
"database` 中有如何在MongoDB中添加用户的例子。"

#: ../source/core/authentication.txt:56
msgid ""
"MongoDB stores all user information, including :data:`name <admin.system.users."
"user>`, :data:`password <admin.system.users.credentials>`, and the :data:"
"`user's database <admin.system.users.db>`, in the :doc:`system.users </"
"reference/system-users-collection>` collection in the ``admin`` database."
msgstr ""
"MongoDB把所有用户信息，包括 :data:`name <admin.system.users.user>`，:data:"
"`password <admin.system.users.credentials>` 和 :data:`user's database <admin."
"system.users.db>`，都储存在 ``admin`` 数据库的 :doc:`system.users </reference/"
"system-users-collection>` 集里。"

#: ../source/core/authentication.txt:66
msgid "Authentication Mechanisms"
msgstr "认证机构"

#: ../source/core/authentication.txt:70
msgid ""
"MongoDB supports multiple authentication mechanisms. MongoDB's default "
"authentication method is a :ref:`challenge and response mechanism (SCRAM-"
"SHA-1) <authentication-scram-sha-1>`. Previously, MongoDB used :ref:`MongoDB"
" Challenge and Response (MONGODB-CR) <authentication-mongodb-cr>` as the "
"default."
msgstr ""

#: ../source/core/authentication.txt:76
msgid ""
"MongoDB also supports :ref:`x509 certificate authentication <security-"
"auth-x509>`, :ref:`LDAP proxy authentication <security-auth-ldap>`, and "
":ref:`Kerberos authentication <security-auth-kerberos>`."
msgstr ""

#: ../source/core/authentication.txt:81
msgid "This section introduces the mechanisms available in MongoDB."
msgstr "该部分介绍MongoDB提供的机制。"

#: ../source/core/authentication.txt:83
msgid ""
"To specify the authentication mechanism to use, see :parameter:"
"`authenticationMechanisms`."
msgstr "如果制定认证机构，请参见 :parameter:`authenticationMechanisms`。"

#: ../source/core/authentication.txt:89
msgid "``SCRAM-SHA-1`` Authentication"
msgstr ""

#: ../source/core/authentication.txt:93
msgid ""
"``SCRAM-SHA-1`` is an IETF standard, `RFC 5802 "
"<https://tools.ietf.org/html/rfc5802>`_, that defines best practice methods "
"for implementation of challenge-response mechanisms for authenticating users"
" with passwords."
msgstr ""
"``MONGODB-CR`` 是一种通过密码认证用户的挑战－应答机制。``MONGODB-CR``是默认的认"
"证机制。"

#: ../source/core/authentication.txt:98
msgid ""
"``SCRAM-SHA-1`` verifies supplied user credentials against the user's "
":data:`name <admin.system.users.user>`, :data:`password "
"<admin.system.users.credentials>` and :data:`database "
"<admin.system.users.db>`. The user's database is the database where the user"
" was created, and the user's database and the user's name together serves to"
" identify the user."
msgstr ""
"在使用``MONGODB-CR``认证的时候，``MONGODB-CR``将用户和储存在 :data:`name "
"<admin.system.users.user>`， :data:`password <admin.system.users.credentials>` "
"和 :data:`database <admin.system.users.db>` 中的用户数据对比。用户的数据库是建"
"立该用户时所使用的数据库，用户名和其所在的数据库联合一起识别该用户。"

#: ../source/core/authentication.txt:107
msgid ""
"A driver upgrade is **necessary** to use the ``SCRAM-SHA-1`` authentication "
"mechanism if your current driver version does not support ``SCRAM-SHA-1``. "
"See :ref:`required driver versions <considerations-scram-sha-1-drivers>` for"
" details."
msgstr ""

#: ../source/core/authentication.txt:113
msgid ""
"`Blog Post: Improved Password-Based Authentication in MongoDB 3.0: SCRAM "
"Explained (Part 1) <https://www.mongodb.com/blog/post/improved-password-"
"based-authentication-mongodb-30-scram-explained-part-1?jmp=docs>`_"
msgstr ""

#: ../source/core/authentication.txt:114
msgid ""
"`Blog Post: Improved Password-Based Authentication in MongoDB 3.0: SCRAM "
"Explained (Part 2) <https://www.mongodb.com/blog/post/improved-password-"
"based-authentication-mongodb-30-scram-explained-part-2?jmp=docs>`_"
msgstr ""

#: ../source/core/authentication.txt:117
msgid "``SCRAM-SHA-1`` Advantages"
msgstr ""

#: ../source/core/authentication.txt:119
msgid ""
"MongoDB's implementation of ``SCRAM-SHA-1`` represents an improvement in "
"security over the previously-used ``MONGODB-CR``, providing:"
msgstr ""

#: ../source/core/authentication.txt:122
msgid "A tunable work factor (``iterationCount``),"
msgstr ""

#: ../source/core/authentication.txt:123
msgid "Per-user random salts rather than server-wide salts,"
msgstr ""

#: ../source/core/authentication.txt:124
msgid ""
"A cryptographically stronger hash function (``SHA-1`` rather than ``MD5``), "
"and"
msgstr ""

#: ../source/core/authentication.txt:126
msgid ""
"Authentication of the server to the client as well as the client to the "
"server."
msgstr ""

#: ../source/core/authentication.txt:130
msgid "``SCRAM-SHA-1`` and Existing User Credentials"
msgstr ""

#: ../source/core/authentication.txt:132
msgid ""
"``SCRAM-SHA-1`` is the default mechanism for MongoDB versions beginning with"
" the 3.0 series. However, if you are upgrading a MongoDB 2.6 instances that "
"already have users credentials, MongoDB will continue to use ``MONGODB-CR`` "
"for challenge-response authentication until you upgrade the authentication "
"schema. Even when using the ``MONGODB-CR`` authentication mechanism, clients"
" and drivers that support MongoDB 3.0 features (see :ref:`compatibility-"
"driver-versions`) will use the ``SCRAM`` communication protocol."
msgstr ""

#: ../source/core/authentication.txt:141
msgid ""
"For details on upgrading the authentication schema model to ``SCRAM-SHA-1``,"
" see :doc:`/release-notes/3.0-scram`."
msgstr ""

#: ../source/includes/fact-upgrade-scram-irreversible.rst:1
msgid ""
"The procedure to upgrade to ``SCRAM-SHA-1`` **discards** the ``MONGODB-CR`` "
"credentials used by 2.6. As such, the procedure is **irreversible**, short "
"of restoring from backups."
msgstr ""

#: ../source/includes/fact-upgrade-scram-irreversible.rst:5
msgid ""
"The procedure also disables ``MONGODB-CR`` as an authentication mechanism."
msgstr ""

#: ../source/core/authentication.txt:151
msgid "``MONGODB-CR`` Authentication"
msgstr ""

#: ../source/core/authentication.txt:153
msgid ""
"``MONGODB-CR`` is a challenge-response mechanism that authenticates users "
"through passwords."
msgstr ""

#: ../source/core/authentication.txt:156
msgid ""
"As of version 3.0, MongoDB no longer defaults to ``MONGODB-CR`` and instead "
"uses ``SCRAM-SHA-1`` as the default authentication mechanism."
msgstr ""

#: ../source/core/authentication.txt:160
msgid ""
"``MONGODB-CR`` verifies supplied user credentials against the user's "
":data:`name <admin.system.users.user>`, :data:`password "
"<admin.system.users.credentials>` and :data:`database "
"<admin.system.users.db>`. The user's database is the database where the user"
" was created, and the user's database and the user's name together serve to "
"identify the user."
msgstr ""

#: ../source/core/authentication.txt:167
msgid ""
"Using :setting:`key files <security.keyFile>`, you can also use ``MONGODB-CR`` "
"authentication for the :ref:`internal member authentication <inter-process-"
"auth>` of replica set members and sharded cluster members. The contents of the "
"key files serve as the shared password for the members. You must store the key "
"file on each :program:`mongod` or :program:`mongos` instance for that replica "
"set or sharded cluster. The content of the key file is arbitrary but must be "
"the same on all :program:`mongod` and :program:`mongos` instances that connect "
"to each other."
msgstr ""
" :setting:`密钥文件 <security.keyFile>` 可以允许使用 ``MONGODB-CR`` 认证为分片"
"集和复制集的成员进行:ref:`内部成员认证 <inter-process-auth>`。密钥文件的内容将"
"作为成员见的共用密码。每一个:program:`mongod` 或 :program:`mongos` 实例中都必须"
"存有其所在的分片集或复制集的密钥文件。密钥文件的内容没有限制，但必须保证在所有"
"相互连接的 :program:`mongod` 和 :program:`mongos` 实例中时相同的。"

#: ../source/core/authentication.txt:177
msgid ""
"See :doc:`/tutorial/generate-key-file` for instructions on generating a key "
"file and turning on key file authentication for members."
msgstr ""
"参见 :doc:`/tutorial/generate-key-file` 如何生成密钥文件和开启成员之间密钥文件"
"认证。"

#: ../source/core/authentication.txt:183
msgid "x.509 Certificate Authentication"
msgstr ""

#: ../source/core/authentication.txt:187
msgid ""
"MongoDB supports x.509 certificate authentication for use with a secure "
":doc:`TLS/SSL connection </tutorial/configure-ssl>`."
msgstr ""

#: ../source/core/authentication.txt:190
msgid ""
"To authenticate to servers, clients can use x.509 certificates instead of "
"usernames and passwords. See :ref:`x509-client-authentication` for more "
"information."
msgstr ""
"向服务器认证，客户端可以使用x.509证书替代用户名和密码。参见 :ref:`x509-client-"
"authentication` 了解详情。"

#: ../source/core/authentication.txt:194
msgid ""
"For membership authentication, members of sharded clusters and replica sets "
"can use x.509 certificates instead of key files. See :ref:`x509-internal-"
"authentication` for more information."
msgstr ""
"进行成员认证，分片集和复制群可以使用 x.509 证书替代密钥文件。参见 :ref:`x509-"
"internal-authentication` 了解详情。"

#: ../source/core/authentication.txt:201
msgid "Kerberos Authentication"
msgstr ""

#: ../source/core/authentication.txt:203
msgid ""
"`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-"
"enterprise?jmp=docs>`_ supports authentication using a Kerberos service. "
"Kerberos is an industry standard authentication protocol for large "
"client/server systems."
msgstr ""
"`MongoDB企业版 <http://www.mongodb.com/products/mongodb-enterprise>`_ 支持使用"
"Kerberos服务认证。Kerberos是一个行业标准认证协议，适用于大规模的客户端－服务器"
"系统。"

#: ../source/core/authentication.txt:207
msgid ""
"To use MongoDB with Kerberos, you must have a properly configured Kerberos "
"deployment, configured :ref:`Kerberos service principals <kerberos-service-"
"principal>` for MongoDB, and added :ref:`Kerberos user principal <kerberos-"
"user-principal>` to MongoDB."
msgstr ""
"如果想使用MongoDB与Kerberos，你必须有一个有一个正确设置的Kerberos部署，为"
"MongoDB设置 :ref:` <kerberos-service-principal>`，并且为MongoDB添加了 :ref:"
"`Kerberos user principal <kerberos-user-principal>` "

#: ../source/core/authentication.txt:212
msgid ""
"See :doc:`/core/kerberos` for more information on Kerberos and MongoDB. To "
"configure MongoDB to use Kerberos authentication, see :doc:`/tutorial/control-"
"access-to-mongodb-with-kerberos-authentication` and :doc:`/tutorial/control-"
"access-to-mongodb-windows-with-kerberos-authentication`."
msgstr ""
"参见 :doc:`/core/kerberos` 了解详情。为MongoDB设置Kerberos认证，请参见  :doc:`/"
"tutorial/control-access-to-mongodb-with-kerberos-authentication 和 :doc:`/"
"tutorial/control-access-to-mongodb-windows-with-kerberos-authentication`。"

#: ../source/core/authentication.txt:221
msgid "LDAP Proxy Authority Authentication"
msgstr ""

#: ../source/core/authentication.txt:223
msgid ""
"`MongoDB Enterprise <http://www.mongodb.com/products/mongodb-"
"enterprise?jmp=docs>`_ supports proxy authentication through a Lightweight "
"Directory Access Protocol (LDAP) service. See :doc:`/tutorial/configure-"
"ldap-sasl-openldap` and :doc:`/tutorial/configure-ldap-sasl-"
"activedirectory`."
msgstr ""
"`MongoDB 企业版 <http://www.mongodb.com/products/mongodb-enterprise>`_ 支持通过"
"轻型目录访问协议(LDAP)代理认证。参见 :doc:`/tutorial/configure-ldap-sasl-"
"openldap` 和 :doc:`/tutorial/configure-ldap-sasl-activedirectory`."

#: ../source/includes/admonition-mongodb-enterprise-windows-ldap.rst:1
msgid ""
"MongoDB Enterprise for Windows does **not** include LDAP support for "
"authentication. However, MongoDB Enterprise for Linux supports using LDAP "
"authentication with an ActiveDirectory server."
msgstr ""
"MongoDB企业版在Windows上不支持使用LDAP认证。但是MongoDB企业版在Linux上支持活动"
"目录(ActiveDirectory)服务器上的LDAP。"

#: ../source/core/authentication.txt:231
msgid ""
"MongoDB does **not** support LDAP authentication in mixed sharded cluster "
"deployments that contain both version 2.4 and version 2.6 shards."
msgstr "MongoDB在有2.4和2.6多版本的分片集部署中**不**支持LDAP认证。"

#: ../source/core/authentication.txt:235
msgid "Authentication Behavior"
msgstr ""

#: ../source/core/authentication.txt:240
msgid "Client Authentication"
msgstr ""

#: ../source/core/authentication.txt:242
msgid ""
"Clients can authenticate using the :ref:`challenge and response "
"<authentication-mongodb-cr>`, :ref:`x.509 <security-auth-x509>`, :ref:`LDAP "
"Proxy <security-auth-ldap>` and :ref:`Kerberos <security-auth-kerberos>` "
"mechanisms."
msgstr ""
"客户端可以使用以下几种方式认证：:ref:`挑战－应答 <authentication-mongodb-"
"cr>`，:ref:`x.509 <security-auth-x509>`，:ref:`LDAP Proxy <security-auth-"
"ldap>` 和 :ref:`Kerberos <security-auth-kerberos>` 机构。"

#: ../source/core/authentication.txt:247
msgid ""
"Each client connection should authenticate as exactly one user. If a client "
"authenticates to a database as one user and later authenticates to the same "
"database as a different user, the second authentication invalidates the first. "
"While clients can authenticate as multiple users if the users are defined on "
"different databases, we recommend authenticating as one user at a time, "
"providing the user with appropriate privileges on the databases required by "
"the user."
msgstr ""
"每一个客户端的连接都应当以一个用户认证。如果客户端以某一用户向一个数据库认证，"
"之后又用另一用户向同一数据库认证，第二次认证会使前一次的实效。虽然客户端可以同"
"时以多个用户认证，只要这些用户都在不同数据库里，我们推荐一次只以一个用户认证，"
"确保该用户在其所在的数据库内有足够的权限。"

#: ../source/core/authentication.txt:255
msgid "See :doc:`/tutorial/authenticate-as-client` for more information."
msgstr ""

#: ../source/core/authentication.txt:261
msgid "Authentication Between MongoDB Instances"
msgstr ""

#: ../source/core/authentication.txt:263
msgid ""
"You can authenticate members of :term:`replica sets <replica set>` and :term:"
"`sharded clusters <sharded cluster>`. To authenticate members of a single "
"MongoDB deployment to each other, MongoDB can use the :setting:`~security."
"keyFile` and :ref:`x.509 <security-auth-x509>` mechanisms. Using :setting:"
"`~security.keyFile` authentication for members also enables authorization."
msgstr ""
"你可以认证 :term:`复制集 <replica set>` 和 :term:`分片集 <sharded cluster>` 里"
"的成员。同一个MongoDB部署里的不同成员互相认证可以通过MongoDB 的:setting:"
"`~security.keyFile` 和 :ref:`x.509 <security-auth-x509>`机制。使用 :setting:"
"`~security.keyFile` 认证成员会开启授权。"

#: ../source/core/authentication.txt:277
msgid ""
"Always run replica sets and sharded clusters in a trusted networking "
"environment. Ensure that the network permits only trusted traffic to reach "
"each :program:`mongod` and :program:`mongos` instance."
msgstr ""

#: ../source/core/authentication.txt:281
msgid ""
"Use your environment's firewall and network routing to ensure that traffic "
"*only* from clients and other members can reach your :program:`mongod` and "
":program:`mongos` instances. If needed, use virtual private networks (VPNs) "
"to ensure secure connections over wide area networks (WANs)."
msgstr ""

#: ../source/core/authentication.txt:286
msgid "Always ensure that:"
msgstr ""

#: ../source/core/authentication.txt:288
msgid ""
"Your network configuration will allow every member of the replica set or "
"sharded cluster to contact every other member."
msgstr ""

#: ../source/core/authentication.txt:291
msgid ""
"If you use MongoDB's authentication system to limit access to your "
"infrastructure, ensure that you configure a :setting:`~security.keyFile` on "
"all members to permit authentication."
msgstr ""

#: ../source/core/authentication.txt:295
msgid ""
"See :doc:`/tutorial/generate-key-file` for instructions on generating a key "
"file and turning on key file authentication for members. For an example of "
"using key files for sharded cluster authentication, see :doc:`/tutorial/enable-"
"authentication-in-sharded-cluster`."
msgstr ""
"参见:doc:`/tutorial/generate-key-file` 如何生成密钥文件并且开启使用密钥文件认证"
"成员。例如使用密钥文件进行分片集认证。参见 :doc:`/tutorial/enable-"
"authentication-in-sharded-cluster`。"

#: ../source/core/authentication.txt:305
msgid "Authentication on Sharded Clusters"
msgstr ""

#: ../source/core/authentication.txt:307
msgid ""
"In sharded clusters, applications authenticate to directly to :program:"
"`mongos` instances, using credentials stored in the ``admin`` database of the :"
"term:`config servers <config server>`. The shards in the sharded cluster also "
"have credentials, and clients can authenticate directly to the shards to "
"perform maintenance directly on the shards. In general, applications and "
"clients should connect to the sharded cluster through the :program:`mongos`."
msgstr ""
"在分片集中，应用程序可以直接使用:term:`config servers <config server>`服务器"
"``admin``数据库中的用户身份凭证向 :program:`mongos` 实例认证。分片集中的分片也"
"存有用户身份凭证，客户端在维护服务器时可以直接向分片认证。一般来讲，应用程序或"
"者客户端应该通过:program:`mongos`连接到分片集。"

#: ../source/core/authentication.txt:316
msgid ""
"Previously, the credentials for authenticating to a database on a cluster "
"resided on the :ref:`primary shard <primary-shard>` for that database."
msgstr ""
"在之前版本里，用户向一个集中的数据库认证的身份凭证是存在该数据库的 :ref:"
"`primary shard <primary-shard>` 里。"

#: ../source/core/authentication.txt:321
msgid ""
"Some maintenance operations, such as :dbcommand:`cleanupOrphaned`, :dbcommand:"
"`compact`, :method:`rs.reconfig()`, require direct connections to specific "
"shards in a sharded cluster. To perform these operations with authentication "
"enabled, you must connect directly to the shard and authenticate as a *shard "
"local* administrative user. To create a *shard local* administrative user, "
"connect directly to the shard and create the user. MongoDB stores *shard "
"local* users in the ``admin`` database of the shard itself. These *shard "
"local* users are completely independent from the users added to the sharded "
"cluster via :program:`mongos`. *Shard local* users are local to the shard and "
"are inaccessible by :program:`mongos`. Direct connections to a shard should "
"only be for shard-specific maintenance and configuration."
msgstr ""
"有一些维护作业，例如:dbcommand:`cleanupOrphaned`， :dbcommand:`compact`， :"
"method:`rs.reconfig()`，需要直接连接分片集里的每一个分片。在开启认证的时候进行"
"这些操作必须要直接连接一个分片，并以*分片本地*管理员用户的身份认证。为了建立一"
"个*分片本地*管理员用户，直接连接到一个分片并建立用户。MongoDB将所有的*分片本地*"
"用户都存在该分片的``admin``数据库中。这些*分片本地*用户完全独立于通过:program:"
"`mongos`添加的分片集的用户。*分片本地*用户只在在分片本地使用，无法通过:program:"
"`mongos`访问。直接连接分片只应当针对分片进行维护和设置时使用。"

#: ../source/core/authentication.txt:337
msgid "Localhost Exception"
msgstr ""

#: ../source/core/authentication.txt:339
msgid ""
"The localhost exception allows you to enable authorization *before* creating"
" the first user in the system. When active, the localhost exception allows "
"connections from the localhost interface to create the first user on the "
"``admin`` database. The exception applies only when there are no users "
"created in the MongoDB instance."
msgstr ""

#: ../source/core/authentication.txt:345
msgid ""
"The localhost exception changed so that these connections *only* have access"
" to create the first user on the ``admin`` database. In previous versions, "
"connections that gained access using the localhost exception had "
"unrestricted access to the MongoDB instance."
msgstr ""
"你可以使用本地主机例外在系统中建立第一个用户。在被开启时，本地主机例外允许所有"
"来自本地主机接口的所有连接都对该实例有完全的访问权限。本地主机例外只有在MongoDB"
"实例中没有任何用户时才适用。"

#: ../source/core/authentication.txt:352
msgid ""
"If you use the localhost exception when deploying a new MongoDB system, the "
"first user you create must be in the ``admin`` database with privileges to "
"create other users, such as a user with the :authrole:`userAdmin` or :authrole:"
"`userAdminAnyDatabase` role. See :doc:`/tutorial/enable-authentication` and :"
"doc:`/tutorial/add-user-administrator` for more information."
msgstr ""
"如果你在部署新的MongoDB系统时使用本地主机例外，你所创建的第一个用户必须是在 "
"``admin`` 数据库中并且有权力建立其他用户，例如一个有:authrole:`userAdmin` 或 :"
"authrole:`userAdminAnyDatabase` 权限的用户。参见:doc:`/tutorial/enable-"
"authentication` 和 :doc:`/tutorial/add-user-administrator` 了解详情。"

#: ../source/core/authentication.txt:359
msgid ""
"In the case of a sharded cluster, the localhost exception applies to each "
"shard individually as well as to the cluster as a whole. Once you create a "
"sharded cluster and add an administrator to the :program:`mongos` instance, "
"you must still prevent unauthorized access to the individual shards. Follow "
"one of the following steps for each shard in your cluster:"
msgstr ""

#: ../source/core/authentication.txt:365
msgid "Create an administrative user, or"
msgstr ""

#: ../source/core/authentication.txt:366
msgid ""
"Disable the localhost exception at startup.  To disable the localhost "
"exception, use :setting:`setParameter` in your :doc:`configuration file "
"</reference/configuration-options>`, or :option:`--setParameter` on the "
"command line to set the :parameter:`enableLocalhostAuthBypass` parameter to "
"``0``."
msgstr ""

#: ../source/core/authentication.txt:300
msgid "sharding"
msgstr ""

#: ../source/core/authentication.txt:300
msgid "localhost"
msgstr ""
