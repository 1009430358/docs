# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-10-11 17:34+0800\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.6.9\n"

# 4d08d1e72bd64be292d0dcfe88a83f91
#: ../source/core/replica-set-architecture-geographically-distributed.txt:5
msgid "Geographically Distributed Replica Sets"
msgstr "异地分布式架构的复制集"

# 9d4b32359d5141729dc0a0cffe1a4246
#: ../source/core/replica-set-architecture-geographically-distributed.txt:9
msgid ""
"Adding members to a replica set in multiple data centers adds redundancy and "
"provides fault tolerance if one data center is unavailable. Members in "
"additional data centers should have a :doc:`priority of 0 </core/replica-set-"
"priority-0-member>` to prevent them from becoming primary."
msgstr ""
"在多个数据中心建立复制集节点可以提高数据冗余小也可以在主数据中心不可用时提供"
"很好的故障容忍性。在其他数据中心中得复制集节点应该将 :doc:`优先级设置为0 </"
"core/replica-set-priority-0-member>` 来避免其升职为主节点。"

# c6a59b45847f425ea16c954d26279e77
#: ../source/core/replica-set-architecture-geographically-distributed.txt:15
msgid ""
"For example: the architecture of a geographically distributed replica set "
"may be:"
msgstr "异地分布式架构的复制集应该拥有："

# 2ed05c841c7543a19785b25f77e7bb1c
#: ../source/core/replica-set-architecture-geographically-distributed.txt:18
msgid "One :term:`primary <primary>` in the main data center."
msgstr "一个 :term:`主节点 <primary>` 在主数据中心。"

# db73223ac2ad45bbbc179ccf8d4ed072
#: ../source/core/replica-set-architecture-geographically-distributed.txt:20
msgid ""
"One :term:`secondary <secondary>` member in the main data center. This "
"member can become primary at any time."
msgstr ""
"一个 :term:`从节点 <secondary>` 在主数据中心。这个节点需随时准备成为新的主节"
"点。"

# c45cac0f42944a2a9de0243656f71ae4
#: ../source/core/replica-set-architecture-geographically-distributed.txt:23
msgid ""
"One :doc:`priority 0 </core/replica-set-priority-0-member>` member in a "
"second data center. This member cannot become primary."
msgstr ""
"一个 :doc:`优先级为0的节点 </core/replica-set-priority-0-member>` 在另一个数"
"据中心。这个节点将不能升职为主节点。"

# f577bf1501034c35ac34457e312435ce
#: ../source/core/replica-set-architecture-geographically-distributed.txt:26
msgid ""
"In the following replica set, the primary and one secondary are in *Data "
"Center 1*, while *Data Center 2* has a :doc:`priority 0 </core/replica-set-"
"priority-0-member>` secondary that cannot become a primary."
msgstr ""
"在下面这样的复制集中，主节点和一个从节点在 *数据中心1* 中， *数据中心2* 中有"
"一个不能升职为主节点的  :doc:`优先级为0的从节点 </core/replica-set-"
"priority-0-member>` 。"

# 27dd84f5523b43629a169066ccb48816
#: ../source/core/replica-set-architecture-geographically-distributed.txt:33
msgid ""
"If the primary is unavailable, the replica set will elect a new primary from "
"*Data Center 1*. If the data centers cannot connect to each other, the "
"member in *Data Center 2* will not become the primary."
msgstr ""
"当主节点不可用时，复制集将会选举出一个在 *数据中心1* 的新的主节点。如果2个数"
"据中心之间无法沟通， *数据中心2* 中的节点将不能升职为主节点。"

# 9586d0735e2a4b41be3694f03dce59af
#: ../source/core/replica-set-architecture-geographically-distributed.txt:37
msgid ""
"If *Data Center 1* becomes unavailable, you can manually recover the data "
"set from *Data Center 2* with minimal downtime. With sufficient :ref:`write "
"concern <write-concern>`, there will be no data loss."
msgstr ""
"当 *数据中心1* 不可用了，我们可以在最短的时间内手动的从 *数据中心2* 中将数据"
"恢复出来。若拥有适当的 :ref:`安全写级别 <write-concern>` ，将不会有数据丢失。"

# b1e08a4eba7b4c1b9364b3cd2cb9e964
#: ../source/core/replica-set-architecture-geographically-distributed.txt:41
msgid ""
"To facilitate elections, the main data center should hold a majority of "
"members. Also ensure that the set has an odd number of members. If adding a "
"member in another data center results in a set with an even number of "
"members, deploy an :ref:`arbiter <replica-set-arbiters>`. For more "
"information on elections, see :doc:`/core/replica-set-elections`."
msgstr ""
"为了实现选举，主数据中心上应该有多数节点。同时也别忘了让复制集保持奇数个节"
"点。当我们在其他数据中心新增节点而导致复制集拥有偶数个节点的时候，应该新建一"
"个 :ref:`投票节点 <replica-set-arbiters>` 。参见 :doc:`/core/replica-set-"
"elections` 获得更多选举的信息。"

# d98452a1c84f4e2db3b684edccae7869
#: ../source/core/replica-set-architecture-geographically-distributed.txt:48
msgid ":doc:`/tutorial/deploy-geographically-distributed-replica-set`."
msgstr " :doc:`/tutorial/deploy-geographically-distributed-replica-set` 。"
