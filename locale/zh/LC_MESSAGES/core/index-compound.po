# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-compound.txt:7
msgid "Compound Indexes"
msgstr "复合索引"

#: ../source/core/index-compound.txt:11
msgid "MongoDB supports *compound indexes*, where a single index structure holds references to multiple fields [#compound-index-field-limit]_ within a collection's documents. The following diagram illustrates an example of a compound index on two fields:"
msgstr "MongoDB支持 *复合索引* ，其中每个索引项可以包含有集合中文档的多个键 [#compound-index-field-limit]_ 。下图是一个具有两个键的复合索引的例子："

#: ../source/core/index-compound.txt:19
msgid "MongoDB imposes a :limit:`limit of 31 fields for any compound index <Number of Indexed Fields in a Compound Index>`."
msgstr "MongoDB允许 :limit:`复合索引最多31个键 <Number of Indexed Fields in a Compound Index>`。"

#: ../source/core/index-compound.txt:22
msgid "Compound indexes can support queries that match on multiple fields."
msgstr "复合索引可以支持要求匹配多个键的查询。"

#: ../source/core/index-compound.txt:0
msgid "Example"
msgstr "例子"

#: ../source/core/index-compound.txt:26
msgid "Consider a collection named ``products`` that holds documents that resemble the following document:"
msgstr "假设有个叫 ``products`` 的集合包含了如下文档："

#: ../source/core/index-compound.txt:42
msgid "If applications query on the ``item`` field as well as query on both the ``item`` field and the ``stock`` field, you can specify a single compound index to support both of these queries:"
msgstr "如果应用需要查询 ``item`` 键，有时也需要同时查询 ``item`` 和 ``stock`` 键，那么您可以创建一个复合索引来同时支持这些查询，如下："

#: ../source/core/index-compound.txt:50
msgid "You may not create compound indexes that have ``hashed`` index fields. You will receive an error if you attempt to create a compound index that includes :doc:`a hashed index </core/index-hashed>`."
msgstr "您不能基于 ``hashed`` 键创建索引。您将会收到错误如果您尝试在复合索引里包含 :doc:`哈希索引 </core/index-hashed>`。"

#: ../source/core/index-compound.txt:55
msgid "The order of the fields in a compound index is very important. In the previous example, the index will contain references to documents sorted first by the values of the ``item`` field and, within each value of the ``item`` field, sorted by values of the ``stock`` field. See :ref:`index-ascending-and-descending` for more information."
msgstr "复合索引中键的顺序是非常重要的。在前面的一个例子中，索引会首先根据 ``item`` 键的值对文档排序，其次在 ``item`` 相同的情况下再根据 ``stock`` 的值对文档排序。参见 :ref:`index-ascending-and-descending` 了解详情。"

#: ../source/core/index-compound.txt:61
msgid "In addition to supporting queries that match on all the index fields, compound indexes can support queries that match on the prefix of the index fields. For details, see :ref:`compound-index-prefix`."
msgstr "复合索引支持匹配所有被索引键的查询，除此之外还支持查询被索引键的前缀。点击 :ref:`compound-index-prefix` 了解细节。"

#: ../source/core/index-compound.txt:69
msgid "Sort Order"
msgstr "排序顺序"

#: ../source/core/index-compound.txt:71
msgid "Indexes store references to fields in either ascending (``1``) or descending (``-1``) sort order. For single-field indexes, the sort order of keys doesn't matter because MongoDB can traverse the index in either direction. However, for :ref:`compound indexes <index-type-compound>`, sort order can matter in determining whether the index can support a sort operation."
msgstr "索引以两种顺序存储键，升序 (``1``) 或降序 (``-1``)。对于单键索引而言，键的顺序无关紧要因为MongoDB可以以任一顺序便利整个索引。但是对于 :ref:`复合索引 <index-type-compound>` 而言，索引的顺序可以决定索引是否支持直接排序操作(而不需要而外附加一个排序阶段)。"

#: ../source/core/index-compound.txt:78
msgid "Consider a collection ``events`` that contains documents with the fields ``username`` and ``date``. Applications can issue queries that return results sorted first by ascending ``username`` values and then by descending (i.e. more recent to last) ``date`` values, such as:"
msgstr "假设有一个集合名叫 ``events`` ，其中文档包含有 ``username`` and ``date`` 键。应用可以发起一个查询请求要求结果按照 ``username`` 键升序而且 ``date`` 键将需 (比如，更多的最近更新数据)，如下： "

#: ../source/core/index-compound.txt:87
msgid "or queries that return results sorted first by descending ``username`` values and then by ascending ``date`` values, such as:"
msgstr "或者查询要求结果按照 ``username`` 键降序然后 ``date`` 键升序，如下："

#: ../source/core/index-compound.txt:94
msgid "The following index can support both these sort operations:"
msgstr "那么，下面的这个索引就可以同时支持这两种排序操作："

#: ../source/core/index-compound.txt:100
msgid "However, the above index **cannot** support sorting by ascending ``username`` values and then by ascending ``date`` values, such as the following:"
msgstr "但是，上述的索引 **不能** 支持先按照 ``username`` 键升序再按照 ``date`` 升序这样的请求，如下："

#: ../source/core/index-compound.txt:108
msgid ""
"For more information on sort order and compound indexes, see :doc:`/tutorial"
"/sort-results-with-indexes`."
msgstr ""

#: ../source/core/index-compound.txt:114
msgid "Prefixes"
msgstr "前缀"

#: ../source/core/index-compound.txt:116
msgid ""
"Index prefixes are the *beginning* subsets of indexed fields. For example, "
"consider the following compound index:"
msgstr ""

#: ../source/core/index-compound.txt:123
msgid "The index has the following index prefixes:"
msgstr ""

#: ../source/core/index-compound.txt:125
msgid "``{ item: 1 }``"
msgstr ""

#: ../source/core/index-compound.txt:127
msgid "``{ item: 1, location: 1 }``"
msgstr ""

#: ../source/core/index-compound.txt:129
msgid ""
"For a compound index, MongoDB can use the index to support queries on the "
"index prefixes. As such, MongoDB can use the index for queries on the "
"following fields:"
msgstr ""

#: ../source/core/index-compound.txt:133
msgid "the ``item`` field,"
msgstr "包含 ``item`` 键，或者"

#: ../source/core/index-compound.txt:134
msgid "the ``item`` field *and* the ``location`` field,"
msgstr "包含 ``item``  *和*  ``location`` 键,或者"

#: ../source/core/index-compound.txt:135
msgid ""
"the ``item`` field *and* the ``location`` field *and* the ``stock`` field."
msgstr ""

#: ../source/core/index-compound.txt:137
msgid ""
"MongoDB can also use the index to support a query on ``item`` and ``stock`` "
"fields since ``item`` field corresponds to a prefix. However, the index "
"would not be as efficient in supporting the query as would be an index on "
"only ``item`` and ``stock``."
msgstr ""

#: ../source/core/index-compound.txt:142
msgid ""
"However, MongoDB cannot use the index to support queries that include the "
"following fields since without the ``item`` field, none of the listed fields"
" correspond to a prefix index:"
msgstr ""

#: ../source/core/index-compound.txt:146
msgid "the ``location`` field,"
msgstr ""

#: ../source/core/index-compound.txt:148
msgid "the ``stock`` field, or"
msgstr ""

#: ../source/core/index-compound.txt:150
msgid "the ``location`` and ``stock`` fields."
msgstr ""

#: ../source/core/index-compound.txt:152
msgid ""
"If you have a collection that has both a compound index and an index on its "
"prefix (e.g. ``{ a: 1, b: 1 }`` and ``{ a: 1 }``), if neither index has a "
"sparse or unique constraint, then you can remove the index on the prefix "
"(e.g. ``{ a: 1 }``). MongoDB will use the compound index in all of the "
"situations that it would have used the prefix index."
msgstr ""

#: ../source/core/index-compound.txt:159
msgid "Index Intersection"
msgstr "集合交集"

#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
msgid "Starting in version 2.6, MongoDB can use :doc:`index intersection </core/index-intersection>` to fulfill queries. The choice between creating compound indexes that support your queries or relying on index intersection depends on the specifics of your system. See :ref:`index-intersection-compound-indexes` for more details."
msgstr "从版本2.6开始， MongoDB可以使用 :doc:`索引交集 </core/index-intersection>` 来完整匹配查询。采用复合索引来支持查询还是使用索引交集取决于您的系统的具体情况。参见 :ref:`index-intersection-compound-indexes` 了解更多细节。"

#: ../source/core/index-compound.txt:1 ../source/core/index-compound.txt:65
msgid "index"
msgstr "索引"

#: ../source/core/index-compound.txt:1
msgid "compound"
msgstr "复合"

#: ../source/core/index-compound.txt:2
msgid "compound index"
msgstr "复合索引"

#: ../source/core/index-compound.txt:65
msgid "sort order"
msgstr "排序顺序"

