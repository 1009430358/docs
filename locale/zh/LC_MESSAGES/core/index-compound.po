# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-09-29 21:54+0800\n"
"Last-Translator: yexingzhe <ispe54@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 64c0c4cf7ed4417fa866db2f28bef586
#: ../source/core/index-compound.txt:7
msgid "Compound Indexes"
msgstr "复合索引"

# 364f233c56224dec8abf7082512a8feb
#: ../source/core/index-compound.txt:11
msgid "MongoDB supports *compound indexes*, where a single index structure holds references to multiple fields [#compound-index-field-limit]_ within a collection's documents. The following diagram illustrates an example of a compound index on two fields:"
msgstr "MongoDB支持 *复合索引* ，其中每个索引项可以包含有集合中文档的多个键 [#compound-index-field-limit]_ 。下图是一个具有两个键的复合索引的例子："

# 87a177fd62044ee1afe87c8d14024eb9
#: ../source/core/index-compound.txt:19
msgid "MongoDB imposes a :limit:`limit of 31 fields for any compound index <Number of Indexed Fields in a Compound Index>`."
msgstr "MongoDB允许 :limit:`复合索引最多31个键 <Number of Indexed Fields in a Compound Index>`。"

# 00131e9e472443ea9a11770ccbafa3a5
#: ../source/core/index-compound.txt:22
msgid "Compound indexes can support queries that match on multiple fields."
msgstr "复合索引可以支持要求匹配多个键的查询。"

# 33ca76732ad34f14a017c414e04d84f3
#: ../source/core/index-compound.txt:0
msgid "Example"
msgstr "例子"

# 1ab2040a84124627b0a23364d00d7dc3
#: ../source/core/index-compound.txt:26
msgid "Consider a collection named ``products`` that holds documents that resemble the following document:"
msgstr "假设有个叫 ``products`` 的集合包含了如下文档："

# 0313b11210d741ef9be9fc7da1c04038
#: ../source/core/index-compound.txt:42
msgid "If applications query on the ``item`` field as well as query on both the ``item`` field and the ``stock`` field, you can specify a single compound index to support both of these queries:"
msgstr "如果应用需要查询 ``item`` 键，有时也需要同时查询 ``item`` 和 ``stock`` 键，那么您可以创建一个复合索引来同时支持这些查询，如下："

# 6b320cb6e6eb45408ed333f6320799fa
#: ../source/core/index-compound.txt:50
msgid "You may not create compound indexes that have ``hashed`` index fields. You will receive an error if you attempt to create a compound index that includes :doc:`a hashed index </core/index-hashed>`."
msgstr "您不能基于 ``hashed`` 键创建索引。您将会收到错误如果您尝试在复合索引里包含 :doc:`哈希索引 </core/index-hashed>`。"

# 5a91f8d898b3467c86ee4c22d1d32b6b
#: ../source/core/index-compound.txt:55
msgid "The order of the fields in a compound index is very important. In the previous example, the index will contain references to documents sorted first by the values of the ``item`` field and, within each value of the ``item`` field, sorted by values of the ``stock`` field. See :ref:`index-ascending-and-descending` for more information."
msgstr "复合索引中键的顺序是非常重要的。在前面的一个例子中，索引会首先根据 ``item`` 键的值对文档排序，其次在 ``item`` 相同的情况下再根据 ``stock`` 的值对文档排序。参见 :ref:`index-ascending-and-descending` 了解详情。"

# c243f57a5d9d4ac3a56f441ad5817344
#: ../source/core/index-compound.txt:61
msgid "In addition to supporting queries that match on all the index fields, compound indexes can support queries that match on the prefix of the index fields. For details, see :ref:`compound-index-prefix`."
msgstr "复合索引支持匹配所有被索引键的查询，除此之外还支持查询被索引键的前缀。点击 :ref:`compound-index-prefix` 了解细节。"

# 8e7694c9bf29443cafe5b5c902ae3a3f
#: ../source/core/index-compound.txt:69
msgid "Sort Order"
msgstr "排序顺序"

# 04f0e8336c194ecf8a184b9962b3d7d8
#: ../source/core/index-compound.txt:71
msgid "Indexes store references to fields in either ascending (``1``) or descending (``-1``) sort order. For single-field indexes, the sort order of keys doesn't matter because MongoDB can traverse the index in either direction. However, for :ref:`compound indexes <index-type-compound>`, sort order can matter in determining whether the index can support a sort operation."
msgstr "索引以两种顺序存储键，升序 (``1``) 或降序 (``-1``)。对于单键索引而言，键的顺序无关紧要因为MongoDB可以以任一顺序便利整个索引。但是对于 :ref:`复合索引 <index-type-compound>` 而言，索引的顺序可以决定索引是否支持直接排序操作(而不需要而外附加一个排序阶段)。"

# ab849a4422704b9d91ae2f7fcad4027a
#: ../source/core/index-compound.txt:78
msgid "Consider a collection ``events`` that contains documents with the fields ``username`` and ``date``. Applications can issue queries that return results sorted first by ascending ``username`` values and then by descending (i.e. more recent to last) ``date`` values, such as:"
msgstr "假设有一个集合名叫 ``events`` ，其中文档包含有 ``username`` and ``date`` 键。应用可以发起一个查询请求要求结果按照 ``username`` 键升序而且 ``date`` 键将需 (比如，更多的最近更新数据)，如下： "

# 762aad056f63491383206ee3626db034
#: ../source/core/index-compound.txt:87
msgid "or queries that return results sorted first by descending ``username`` values and then by ascending ``date`` values, such as:"
msgstr "或者查询要求结果按照 ``username`` 键降序然后 ``date`` 键升序，如下："

# a0f9367fcfe34f4291785df3004e9519
#: ../source/core/index-compound.txt:94
msgid "The following index can support both these sort operations:"
msgstr "那么，下面的这个索引就可以同时支持这两种排序操作："

# d433dca4717640228959dfc32bd5f865
#: ../source/core/index-compound.txt:100
msgid "However, the above index **cannot** support sorting by ascending ``username`` values and then by ascending ``date`` values, such as the following:"
msgstr "但是，上述的索引 **不能** 支持先按照 ``username`` 键升序再按照 ``date`` 升序这样的请求，如下："

# 12d8cb0f6ca64a68b953587e33d60edf
#: ../source/core/index-compound.txt:111
msgid "Prefixes"
msgstr "前缀"

# 17592ce8a1474851872b6dbf8f8efb5a
#: ../source/core/index-compound.txt:113
msgid "Compound indexes support queries on any prefix of the index fields. Index prefixes are the beginning subset of indexed fields. For example, given the index ``{ a: 1, b: 1, c: 1 }``, both ``{ a: 1 }`` and ``{ a: 1, b: 1 }`` are prefixes of the index."
msgstr "复合索引支持匹配被索引键的任何前缀的查询。这里的前缀是指被索引键的起始子集部分，比如给定索引 ``{ a: 1, b: 1, c: 1 }``，那么 ``{ a: 1 }`` 和 ``{ a: 1, b: 1 }`` 都是它的前缀。"

# d34ebcaf948c487e8a09cfa7fdc51280
#: ../source/core/index-compound.txt:118
msgid "If you have a collection that has a compound index on ``{ a: 1, b: 1 }``, as well as an index that consists of the prefix of that index, i.e. ``{ a: 1 }``, assuming none of the index has a sparse or unique constraints, then you can drop the ``{ a: 1 }`` index. MongoDB will be able to use the compound index in all of situations that it would have used the ``{ a: 1 }`` index."
msgstr "如果您的集合有一个复合索引 ``{ a: 1, b: 1 }``，此外还有一个索引包含了前述复合索引的前缀部分，比如 ``{ a: 1 }``，假设这两个索引都没有系数或者唯一性方面的限制，那么您可以移除 ``{ a: 1 }`` 索引。因为在所有可以使用 ``{ a: 1 }`` 索引的场合里，MongoDB都将会使用前述复合索引。"

# ef7c8d69a8c0464da19628a927fef246
#: ../source/core/index-compound.txt:125
msgid "For example, given the following index:"
msgstr "比如，假设有如下索引"

# 4fd6391c45754496ac4d62effb7cc021
#: ../source/core/index-compound.txt:131
msgid "MongoDB **can** use this index to support queries that include:"
msgstr "MongoDB **可以** 可以使用这个索引来支持匹配如下条件的查询："

# 6c6ea1e638ad46fdbf7dc45dc9296e96
#: ../source/core/index-compound.txt:133
msgid "the ``item`` field,"
msgstr "包含 ``item`` 键，或者"

# e2595caacc0e4d34a1b2d672c1371e8b
#: ../source/core/index-compound.txt:134
msgid "the ``item`` field *and* the ``location`` field,"
msgstr "包含 ``item``  *和*  ``location`` 键,或者"

# 7cd3aac028d44602abfd5c284de5c562
#: ../source/core/index-compound.txt:135
msgid "the ``item`` field *and* the ``location`` field *and* the ``stock`` field, or"
msgstr "包含 ``item``  *和*  ``location``  *以及*  ``stock`` 键，或者"

# 28e293043dce47a9a98eb38854086aa3
#: ../source/core/index-compound.txt:137
msgid "only the ``item`` *and* ``stock`` fields; however, this index would be less efficient than an index on only ``item`` and ``stock``."
msgstr "只是 ``item`` *和* ``stock`` 键；但是，这种情况下，索引将不如只包含 ``item`` 和 ``stock`` 键的索引高效。"

# 65e4adf7f25740e19b5c0a81eb2a7b6c
#: ../source/core/index-compound.txt:141
msgid "MongoDB **cannot** use this index to support queries that include:"
msgstr "MongoDB **不能** 使用这个索引来支持下述查询："

# 144d12d566324c0c95d01f5fd5a0d268
#: ../source/core/index-compound.txt:143
msgid "only the ``location`` field,"
msgstr "只有 ``location`` 键，"

# 36c121095f18426ea1fc01427894feb6
#: ../source/core/index-compound.txt:144
msgid "only the ``stock`` field, or"
msgstr "只有 ``stock`` 键，或者"

# 9a4c82817d10453fa5fd6a3fa84f32aa
#: ../source/core/index-compound.txt:145
msgid "only the ``location`` *and* ``stock`` fields."
msgstr "只有 ``location`` *和* ``stock`` 键。"

# e926f6399a5a4f73b9eac47e8b075363
#: ../source/core/index-compound.txt:148
msgid "Index Intersection"
msgstr "集合交集"

# 454a17140b2c43e79e6ade7df3b278cb
#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
msgid "Starting in version 2.6, MongoDB can use :doc:`index intersection </core/index-intersection>` to fulfill queries. The choice between creating compound indexes that support your queries or relying on index intersection depends on the specifics of your system. See :ref:`index-intersection-compound-indexes` for more details."
msgstr "从版本2.6开始， MongoDB可以使用 :doc:`索引交集 </core/index-intersection>` 来完整匹配查询。采用复合索引来支持查询还是使用索引交集取决于您的系统的具体情况。参见 :ref:`index-intersection-compound-indexes` 了解更多细节。"

# 2be29d138e984f719f340fc3b5799c75
# c8fe8a4b20f9420d96c48e1bd3138be4
#: ../source/core/index-compound.txt:1
#: ../source/core/index-compound.txt:65
msgid "index"
msgstr "索引"

# 2be29d138e984f719f340fc3b5799c75
#: ../source/core/index-compound.txt:1
msgid "compound"
msgstr "复合"

# 945f3cec456b489493efd2bada7b7494
#: ../source/core/index-compound.txt:2
msgid "compound index"
msgstr "复合索引"

# c8fe8a4b20f9420d96c48e1bd3138be4
#: ../source/core/index-compound.txt:65
msgid "sort order"
msgstr "排序顺序"

