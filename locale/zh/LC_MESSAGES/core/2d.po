# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-10-18 12:55+0800\n"
"Last-Translator: YEXINGZHE54 <ispe54@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.6.9\n"

# 6e36f1bc4d3e438a934b8682b2201875
#: ../source/core/2d.txt:3
msgid "``2d`` Indexes"
msgstr "``2d`` 索引"

# 66d5d6f472c146c4b3bd83c570d6fab2
#: ../source/core/2d.txt:7
msgid ""
"Use a ``2d`` index for data stored as points on a two-dimensional plane. The "
"``2d`` index is intended for legacy coordinate pairs used in MongoDB 2.2 and "
"earlier."
msgstr ""
"对于以二维平面上点的方式存储的数据，可以使用 ``2d`` 索引。在MongoDB2.2版及更"
"早之前， ``2d`` 索引是用于索引普通坐标。"

# db35b801a86248939e5a9a1a1fedc460
#: ../source/core/2d.txt:11
msgid "Use a ``2d`` index if:"
msgstr "使用 ``2d`` 索引， 在如下情况："

# 57faad288f584e87873b32816669977d
#: ../source/core/2d.txt:13
msgid ""
"your database has legacy location data from MongoDB 2.2 or earlier, *and*"
msgstr ""
"您的数据库中存储的是从MongoDB2.2版或者更早版遗留下的普通位置信息， *并且* "

# 6e79e738940248b28ce6ddefe6e9e325
#: ../source/core/2d.txt:15
msgid ""
"you do not intend to store any location data as :term:`GeoJSON` objects."
msgstr "您不打算把位置数据存储为 :term:`GeoJSON` 对象。"

# 04991cdd31834fd98fab55e8a6409b5c
#: ../source/core/2d.txt:17
msgid ""
"See the :doc:`/reference/operator/query-geospatial` for the query operators "
"that support geospatial queries."
msgstr ""
"参见 :doc:`/reference/operator/query-geospatial` 来了解支持地理查询的操作符。"

# 04bfc9615c024ffa9e265709a83bea10
#: ../source/core/2d.txt:21
msgid "Considerations"
msgstr "注意事项"

# 05c6b76da9b94f24bf5c4aad19080d15
#: ../source/core/2d.txt:27
msgid ""
"Do not use a ``2d`` index if your location data includes GeoJSON objects. To "
"index on both legacy coordinate pairs *and* GeoJSON objects, use a :doc:"
"`2dsphere </core/2dsphere>` index."
msgstr ""
"请不要使用 ``2d`` 索引， 如果您的位置信息里包含GeoJSON对象。如果要同时索引普"
"通坐标 *和* GeoJSON对象，请使用 :doc:`2dsphere </core/2dsphere>` 索引。"

# c42144dd50c04585b9dd2bcd33fe21e3
#: ../source/core/2d.txt:31
msgid ""
"You cannot use a ``2d`` index as a shard key when sharding a collection. "
"However, you can create and maintain a geospatial index on a sharded "
"collection by using a different field as the shard key."
msgstr ""
"当把一个集合分片时， 您不应该使用 ``2d`` 索引键作为分片键。 但是，在使用其他"
"键作为分片键的前提下， 您可以在被分片的集合上创建并维护一个地理索引。"

# ab22439638ca455e9ca93e0a9c5110ee
#: ../source/core/2d.txt:36
msgid "Behavior"
msgstr "特性"

# 8ec27beb041045d7b068f764fc264821
#: ../source/core/2d.txt:38
msgid ""
"The ``2d`` index supports calculations on a flat, Euclidean plane. The "
"``2d`` index also supports *distance-only* calculations on a sphere, but for "
"*geometric* calculations (e.g. :query:`$geoWithin`) on a sphere, store data "
"as GeoJSON objects and use the ``2dsphere`` index type."
msgstr ""
"MongoDB中 ``2d`` 索引支持在欧几里德平面上的计算。 ``2d`` 索引也支持在球面上 "
"``distance-only`` 计算。但是如果是在球面上的 *地理* 计算(例如 :query: :`"
"$geoWithin`) ，请把数据存储为GeoJSON对象，并使用 ``2dsphere`` 索引。"

# a2d95735f25c4fc9ae1abf49944e38a9
#: ../source/core/2d.txt:44
msgid ""
"A ``2d`` index can reference two fields. The first must be the location "
"field. A ``2d`` compound index constructs queries that select first on the "
"location field, and then filters those results by the additional criteria. A "
"compound ``2d`` index can cover queries."
msgstr ""
"MongoDB中 ``2d`` 复合索引可以包含两个键。第一个键必须是位置键。在查询时， "
"``2d`` 复合索引首先根据位置键选择文档，然后再根据附加的第二个键过滤结果集。复"
"合 ``2d`` 索引可以覆盖查询(这意味着，不需要载入文档而直接返回结果)。"

# 2547d5ef2da44809bb1ef897a2895a96
#: ../source/core/2d.txt:52
msgid "Points on a 2D Plane"
msgstr "在二维平面上的点"

# b252eb873360477cb7ef19291d8a76ff
#: ../source/core/2d.txt:56
msgid ""
"To store location data as legacy coordinate pairs, use an array or an "
"embedded document. When possible, use the array format:"
msgstr ""
"可以通过数据或者子文档的形式，把位置数据存储为普通坐标。如果可以，请使用数组"
"格式："

# c66228373baa4c0292d93692c9f850d4
#: ../source/core/2d.txt:63
msgid "Consider the embedded document form:"
msgstr "以下是子文档格式："

# 657a5fdda15041b987b673489fb07ab7
#: ../source/core/2d.txt:69
msgid ""
"Arrays are preferred as certain languages do not guarantee associative map "
"ordering."
msgstr "更推荐数组是因为某些语言也许无法保证关联字典顺序。"

# efd0ef585a1a46c09a203750b4e3be9a
#: ../source/core/2d.txt:72
msgid ""
"For all points, if you use longitude and latitude, store coordinates in "
"**longitude, latitude** order."
msgstr "如果是以经度和纬度定位的点，请存储为 **经度，纬度** 顺序。"

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:1
msgid ""
"The :dbcommand:`geoNear` command and the :pipeline:`$geoNear` pipeline stage "
"require that a collection have *at most* only one |first-geo-index| and/or "
"only one |second-geo-index| whereas :ref:`geospatial query operators "
"<geospatial-query-selectors>` (e.g. :query:`$near` and :query:`$geoWithin`) "
"permit collections to have multiple geospatial indexes."
msgstr ""
"注意， :dbcommand:`geoNear` 命令和 :pipeline:`$geoNear` 管道阶段要求一个集合"
"中 *最多* 只能有一个 |first-geo-index| 或者 |second-geo-index| ，但是 :ref:`"
"地理查询操作符 <geospatial-query-selectors>` (例如 :query:`$near` 和 :query:`"
"$geoWithin`) 允许几何拥有多个地理索引。"

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:8
msgid ""
"The geospatial index restriction for the :dbcommand:`geoNear` command nor "
"the :pipeline:`$geoNear` pipeline stage exists because neither the :"
"dbcommand:`geoNear` command nor the :pipeline:`$geoNear` pipeline stage "
"syntax includes the location field. As such, index selection among multiple "
"``2d`` indexes or ``2dsphere`` indexes is ambiguous."
msgstr ""
"对地理索引的之所以有这样的限制， 是因为 :dbcommand:`geoNear` 命令和 :"
"pipeline:`$geoNear` 管道 的格式里没有包含位置索引键。因此，如何在多个 ``2d`` "
"或者 ``2dsphere`` 索引中做选择这将造成歧义。"

#: ../source/includes/fact-limitation-one-geo-index-per-collection.rst:14
msgid ""
"No such restriction applies for :ref:`geospatial query operators <geospatial-"
"query-selectors>` since these operators take a location field, eliminating "
"the ambiguity."
msgstr ""
"而对于 :ref:`地理查询操作符 <geospatial-query-selectors>` 没有这样的限制是因"
"为，这些操作符都要求指定一个位置键，消除了歧义。"

#: ../source/core/2d.txt:76
msgid "``sparse`` Property"
msgstr "``稀疏`` 属性"

#: ../source/core/2d.txt:78
msgid ""
"``2d`` indexes are :doc:`sparse </core/index-sparse>` by default and ignores "
"the :doc:`sparse: true </core/index-sparse>` option. If a document lacks a "
"``2d`` index field (or the field is ``null`` or an empty array), MongoDB "
"does not add an entry for the document to the ``2d`` index. For inserts, "
"MongoDB inserts the document but does not add to the ``2d`` index."
msgstr ""
"默认情况下， ``2d`` 索引是 :doc:`稀疏 </core/index-sparse>` 的，并且忽略 :"
"doc:`sparse: true </core/index-sparse>` 选项。如果一篇文档中不包含 ``2d`` 索"
"引键(或者这个键存储的是 ``null`` 或者空数组)，那么MongoDB将不会为这篇文档建"
"立 ``2d`` 索引项。如果是一个插入操作，MongoDB会插入这篇文档，但不把它加到 "
"``2d`` 索引中。"

#: ../source/core/2d.txt:85
msgid ""
"For a compound index that includes a ``2d`` index key along with keys of "
"other types, only the ``2d`` index field determines whether the index "
"references a document."
msgstr ""
"在一个复合索引中，如果同时包含了 ``2d`` 索引键和其他类型的键， 那么只有 "
"``2d`` 索引键可以决定索引是否要引用一篇文档。"
