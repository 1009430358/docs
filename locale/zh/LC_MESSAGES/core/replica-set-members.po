# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-10-09 13:31+0800\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.6.9\n"

# ba99212eb3f44882a091b9bb51c99ded
#: ../source/core/replica-set-members.txt:3
msgid "Replica Set Members"
msgstr "复制集成员"

# 8c9585df8bae4c49a03646dca09ff48e
#: ../source/core/replica-set-members.txt:7
msgid ""
"A *replica set* in MongoDB is a group of :program:`mongod` processes that "
"provide redundancy and high availability. The members of a replica set are:"
msgstr ""
"MongoDB的 *复制集* 是由一组 :program:`mongod` 实例所组成的，并提供了数据冗余"
"与高可用性。副本集中的成员有以下几种："

# f2cc7a0d734d41a7a5bed2d2319b20a7
#: ../source/core/replica-set-members.txt:12
msgid ":ref:`replica-set-primary-member`."
msgstr ":ref:`replica-set-primary-member`."

# d434622198eb48919d1b598426217438
#: ../source/core/replica-set-members.txt:12
msgid "The *primary* receives all write operations."
msgstr "*主节点* 接收所有的写操作请求。"

# e812fece12bb4bdba6d8d970c2540698
#: ../source/core/replica-set-members.txt:19
msgid ":ref:`replica-set-secondary-members`."
msgstr ":ref:`replica-set-secondary-members`."

# f8a73b5c4fbc4c88a0731e3befda166a
#: ../source/core/replica-set-members.txt:15
msgid ""
"Secondaries replicate operations from the primary to maintain an identical "
"data set. Secondaries may have additional configurations for special usage "
"profiles. For example, secondaries may be :ref:`non-voting <replica-set-non-"
"voting-members>` or :ref:`priority 0 <replica-set-secondary-only-members>`."
msgstr ""
"从节点通过应用主节点传来的数据变动操作来保持其数据集与主节点的一致。从节点也"
"可以通过增加额外的参数配置来对应特殊的需求。例如，从节点可以是 :ref:`non-"
"voting <replica-set-non-voting-members>` 或是 :ref:`priority 0 <replica-set-"
"secondary-only-members>` 。"

# af071bdf18e04fd68c1b754fc153dbd5
#: ../source/core/replica-set-members.txt:21
msgid ""
"You can also maintain an :ref:`arbiter <replica-set-arbiters>` as part of a "
"replica set. Arbiters do not keep a copy of the data. However, arbiters play "
"a role in the elections that select a primary if the current primary is "
"unavailable."
msgstr ""
"我们也可以为复制集设置一个 :ref:`投票节点 <replica-set-arbiters>` 。投票节点"
"其本身并不包含数据集。但是，一旦当前的主节点不可用时，投票节点就会参与到新的"
"主节点选举的投票中。"

# 7d9256e5452d47d6a2f34f3a17af857c
#: ../source/core/replica-set-members.txt:26
msgid ""
"A replica set can have up to 12 members. [#master-slave]_ However, only 7 "
"members can vote at a time."
msgstr ""
"一个复制集最多可以拥有12个成员。 [#master-slave]_  但是每次只有其中的7个可以"
"参与选举。"

# 09cbf6f931864e39932b45389d528d55
#: ../source/core/replica-set-members.txt:29
msgid ""
"The minimum requirements for a replica set are: A :ref:`primary <replica-set-"
"primary-member>`, a :ref:`secondary <replica-set-secondary-members>`, and "
"an :ref:`arbiter <replica-set-arbiters>`. Most deployments, however, will "
"keep three members that store data: A :ref:`primary <replica-set-primary-"
"member>` and two :ref:`secondary members <replica-set-secondary-members>`."
msgstr ""
"一个复制集至少需要这几个成员：一个 :ref:`主节点 <replica-set-primary-"
"member>` ，一个 :ref:`从节点 <replica-set-secondary-members>`  ，和一个 :ref:"
"`投票节点 <replica-set-arbiters>` 。但是在大多数情况下，我们会保持3个拥有数据"
"集的节点：一个 :ref:`主节点 <replica-set-primary-member>` 和两个 :ref:`从节"
"点 <replica-set-secondary-members>`  。"

# 042b2e70305248cea95e23b3392f7b3a
#: ../source/includes/fact-master-slave-workaround.rst:1
msgid ""
"While replica sets are the recommended solution for production, a replica "
"set can support only 12 members in total. If your deployment requires more "
"than 12 members, you’ll need to use :doc:`master-slave </core/master-slave>` "
"replication. Master-slave replication lacks the automatic failover "
"capabilities."
msgstr ""
"如果我们选择使用复制集来做业务的解决方案，需要注意的是，一个复制集最多可以拥"
"有12个成员。如果我们需要超过12个成员，那么就需要使用 :doc:`主-从 </core/"
"master-slave>` 复制的架构来实现了。需要注意的是，主-从架构并没有自动故障切换"
"的功能。"
