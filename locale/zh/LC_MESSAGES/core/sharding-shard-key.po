#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# 0a65b6bbe78544a6acff3bc2126c750f
#: ../source/core/sharding-shard-key.txt:10
msgid "Shard Keys"
msgstr "片键"

# 9bc463b9a53e49e09b1b2b53e75545f4
#: ../source/core/sharding-shard-key.txt
msgid "On this page"
msgstr ""

# 0fee7ea2bd704627978401e4c411e5e6
#: ../source/core/sharding-shard-key.txt:20
msgid ""
"The shard key determines the distribution of the collection's "
":term:`documents <document>` among the cluster's :term:`shards <shard>`. "
"The shard key is either an indexed :term:`field` or indexed "
":term:`compound <compound index>` fields that exists in every document in"
" the collection."
msgstr ""
"片键决定了集群中一个集合的 :term:`documents <document>` 在不同 :term:`shards "
"<shard>` 中的分布.片键字段必须被索引,且在集合中的每条记录都不能为空,可以是单"
"个字段或复合字段."

# ceafc4831e524e73b8588e4a49b69dd2
#: ../source/core/sharding-shard-key.txt:25
msgid ""
"MongoDB :term:`partitions <data partition>` data in the collection using "
"ranges of shard key values. Each range defines a non-overlapping range of"
" shard key values and is associated with a :term:`chunk`."
msgstr ""
"MongoDB使用片键的范围把数据分布在分片中,每个范围,又称为数据块,定义了一个不重"
"叠的片键范围,MongoDB把数据块与他们存储的文档分布到集群中的不同分片中."

# 2612c7430c13465a8da52b1791ca39d2
#: ../source/core/sharding-shard-key.txt:29
msgid ""
"MongoDB attempts to distribute chunks evenly among the shards in the "
"cluster. The shard key has a direct relationship to the effectiveness of "
"chunk distribution. See :ref:`sharding-shard-key-selection`."
msgstr ""
"当一个数据块的大小超过 :ref:`数据块最大大小 <sharding-chunk-size>` 时,MongoDB"
"会依据片键的范围将数据块 :term:`分裂为 <split>` 更小的数据块."

# fa1400de2ca449de816334c305f7e642
#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:1
msgid ""
"Once you shard a collection, the shard key and the shard key values are "
"immutable; i.e."
msgstr ""

# 8fa8325bb8f6463093b1fedd2ffaa6de
#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:4
msgid "You cannot select a different shard key for that collection."
msgstr ""
"片键在写入后不能被改变,参见 :ref:`集合的限制 <limits-sharding>` 以获取更多信"
"息."

# d878eaac9fc64aa5a01ab5f5a6cad3e7
#: ../source/includes/limits-sharding-shardkey-document-immutable.rst:6
msgid "You cannot update the values of the shard key fields."
msgstr ""

# 327205209bb04c609e5eb3abc63670f3
#: ../source/core/sharding-shard-key.txt:45
msgid "Shard Key Specification"
msgstr ""

# fffe8affcf7444b3855181500d2f8d0d
#: ../source/core/sharding-shard-key.txt:47
msgid ""
"To shard a collection, you must specify the target collection and the "
"shard key to the :method:`sh.shardCollection()` method:"
msgstr ""

# 5c69a087037148acac2a1438793d7f3c
#: ../source/core/sharding-shard-key.txt:54
msgid ""
"The ``namespace`` parameter consists of a string "
"``<database>.<collection>`` specifying the full :term:`namespace` of the "
"target collection."
msgstr ""
"哈希片键使用单字段上的 :ref:`哈希索引 <index-hashed-index>` 进行数据在分片之"
"间的分发."

# 69f283e61f0c4e49b5490a3c86e80613
#: ../source/core/sharding-shard-key.txt:58
msgid ""
"The ``key`` parameter consists of a document containing a field and the "
"index traversal direction for that field."
msgstr ""
"被选为片键的字段必须有足够大的基数,或者足够多的不同的值,对于单调递增的字段,"
"如 :term:`ObjectId` 或者时间戳,哈希索引效果更好."

# d14c587b5da44a539c7efb2528936d62
#: ../source/core/sharding-shard-key.txt:61
msgid ""
"For instructions specific to sharding a collection using the :ref:`hashed"
" sharding <sharding-hashed>` strategy, see :ref:`deploy-hashed-sharded-"
"cluster-shard-collection`"
msgstr ""
"如果在一个空的集合创建哈希片键,MongoDB会自动创建并迁移数据块,以保证每个分片上"
"都有两个数据块,你可以在执行 :dbcommand:`shardCollection` 指定 "
"``numInitialChunks`` 参数以控制初始化时MongoDB创建的数据块数目,或者手动调用 :"
"dbcommand:`split` 命令在分片上分裂数据块."

# 5de65dbdf3e74add8157e5e712d8cabd
#: ../source/core/sharding-shard-key.txt:65
msgid ""
"For instructions specific to sharding a collection using the :ref:`ranged"
" sharding <sharding-ranged>` strategy, see :ref:`deploy-ranged-sharded-"
"cluster-shard-collection`."
msgstr ""
"要在集合上使用哈希片键,参见 :doc:`/tutorial/shard-collection-with-a-hashed-"
"shard-key` ."

# f07921c2c6f942118391218893882ca9
#: ../source/core/sharding-shard-key.txt:73
msgid "Shard Key Indexes"
msgstr ""

# e04579ae144e4aea92de21ec7ca937da
#: ../source/core/sharding-shard-key.txt:75
msgid ""
"All sharded collections **must** have an index that supports the "
":term:`shard key`; i.e. the index can be an index on the shard key or a "
":term:`compound index` where the shard key is a :ref:`prefix <compound-"
"index-prefix>` of the index."
msgstr ""
"对使用了哈希片键分片的集合进行请求时,MongoDB会自动计算哈希值,应用方 **不需要** "
"解析哈希值."

# a63336923f0d485c956ccacd8fecd475
#: ../source/core/sharding-shard-key.txt:80
msgid ""
"If the collection is empty, :method:`sh.shardCollection()` creates the "
"index on the shard key if such an index does not already exists."
msgstr ""

# 3aaa8fa806fa40ed81b072a575dff864
# 696ab9d5513348968d9abc49cfa45887
#: ../source/core/sharding-shard-key.txt:83
#: ../source/includes/extracts/shard-collection-unique-restriction-method.rst:5
msgid ""
"If the collection is not empty, you must create the index first before "
"using :method:`sh.shardCollection()`."
msgstr ""
"片键可以影响数据在分片间的分布,也影响 :program:`mongos` 对集群直接操作的效率,"
"因此可以影响集群的读写性能, 可以考虑以下的操作受片键的影响. "

# e9562c885bc342b08edcc3267a93bb5b
#: ../source/core/sharding-shard-key.txt:86
msgid ""
"If you drop the last valid index for the shard key, recover by recreating"
" an index on just the shard key."
msgstr ""

# 5698c0881393479e94a1efc60eace93f
#: ../source/core/sharding-shard-key.txt:92
msgid "Unique Indexes"
msgstr ""

# a6d6a7b306684aabb9b63bb184f6d7c2
#: ../source/core/sharding-shard-key.txt:94
msgid ""
"For a sharded collection, only the ``_id`` field index and the index on "
"the shard key or a :term:`compound index` where the shard key is a "
":ref:`prefix <compound-index-prefix>` can be :doc:`unique </core/index-"
"unique>`:"
msgstr ""

# 4221b277b1a541ae8527aa7e6596d397
#: ../source/core/sharding-shard-key.txt:99
msgid "You cannot shard a collection that has unique indexes on other fields."
msgstr ""

# 24ace1057cd0483380b0e4920cd8efb4
#: ../source/core/sharding-shard-key.txt:101
msgid "You cannot create unique indexes on other fields for a sharded collection."
msgstr ""

# f99490cacb054aeabf4305cdf4331162
#: ../source/core/sharding-shard-key.txt:104
msgid ""
"Through the use of the unique index on the shard key, MongoDB *can* "
"enforce uniqueness on the shard key values. MongoDB enforces uniqueness "
"on the *entire* key combination, and not individual components of the "
"shard key. To enforce uniqueness on the shard key values, pass the "
"``unique`` parameter as ``true`` to the :method:`sh.shardCollection()` "
"method:"
msgstr ""
"一些片键会使应用程序能够达到集群能够提供的最大的写性能,有一些则不能,比如使用"
"默认的 :term:`_id` 做片键的情况."

# 98d6cf66a73e4a47a8e3ceafc78665c1
#: ../source/includes/extracts/shard-collection-unique-restriction-method.rst:2
msgid ""
"If the collection is empty, :method:`sh.shardCollection()` creates the "
"unique index on the shard key if such an index does not already exists."
msgstr ""
"在插入文档时,MongoDB会生成一个全局唯一的 ``ObjectId`` 标识符_id,不过,需要注意"
"的一点是, 这个标识符的前几位代表时间戳,这意味着_id是以常规的并且可预测的方式"
"增长,即使_id有 :ref:`大的基数<sharding-shard-key-cardinality>` ,在使用 *_id或"
"者任意其他单调递增的数据* 作为片键时,所有的写入操作都会集中到一个分片中"

# 0be6e159d69743018f44a2e0a7309f15
#: ../source/includes/extracts/shard-collection-unique-restriction-method.rst:8
msgid ""
"Although you can have a unique :term:`compound index` where the shard key"
" is a :ref:`prefix <compound-index-prefix>`, if using ``unique`` "
"parameter, the collection must have a unique index that is on the shard "
"key."
msgstr ""
"不过,如果你的写入频率很低或者大多都是 :method:`~db.collection.update()` 操作,"
"单调递增的片键不会对性能有很大影响,一般来说,选择的片键要 *同时* 具有较大的基"
"数与将请求分布在整个集群中两个特性."

# 4b45c6e29bca4716aa90ff4efd719b88
#: ../source/core/sharding-shard-key.txt:113
msgid ""
"You cannot specify a unique constraint on a :ref:`hashed index <index-"
"type-hashed>`."
msgstr ""

# 41864aecd8164ce08fa1413e2c7afbb9
#: ../source/core/sharding-shard-key.txt:125
msgid "Choosing a Shard Key"
msgstr ""
"通常,一个经过计算的片键会有一定的\"随机性\",比如一个包含了其他字段加密哈希(例"
"如 MD5或者SHA1)的片键,会使集群具有较好的写扩展性能.不过,随机的片键通常不会提"
"供 :ref:`查询隔离 <sharding-shard-key-query-isolation>` 的特性,而查询隔离同样"
"是片键一个很重要的特性."

# 4c00f35501324131af5693daf5b73396
#: ../source/core/sharding-shard-key.txt:127
msgid ""
"The choice of shard key affects how the :term:`sharded cluster` "
":term:`balancer` creates and distributes :term:`chunks<chunk>` across the"
" available :term:`shards <shard>`. This affects the overall efficiency "
"and performance of operations within the sharded cluster."
msgstr ""
"MongoDB可以使用哈希片键为数据库分片,哈希片键提供了较好的写扩展性能,参见 :doc:"
"`/tutorial/shard-collection-with-a-hashed-shard-key` 获得更多细节."

# c4f3f208785c4b5badab545b40a62b5d
#: ../source/core/sharding-shard-key.txt:132
msgid ""
"The shard key affects the performance and efficiency of the "
":ref:`sharding strategy <sharding-strategy>` used by the sharded cluster."
msgstr ""

# 712f5a7b324c45a384892476c67c5880
#: ../source/core/sharding-shard-key.txt:135
msgid ""
"The ideal shard key allows MongoDB to distribute documents evenly "
"throughout the cluster."
msgstr ""
" :program:`mongos` 隐藏了集群内部复杂的 :term:`数据分区 <partition>`,为应用提"
"供了访问集群的统一入口, :program:`mongos` 接收来自应用的查询,并根据从 :ref:`"
"配置服务器 <sharding-config-server>` 取得的集群元信息,将查询分发到相应的 :"
"program:`mongod` 中.在集群中,由于 :program:`mongos` 处理所有查询请求,因此片键"
"的选择会对集群的性能产生很大的影响."

# ef742598e38f4beeaa2fa54e52ff2dcf
#: ../source/core/sharding-shard-key.txt:140
msgid ""
"At minimum, consider the consequences of the :ref:`cardinality<shard-key-"
"range>`, :ref:`frequency<shard-key-frequency>`, and rate of :ref:`change"
"<shard-key-monotonic>` of a potential shard key."
msgstr ""

# cc0d93d33d054f09808db19a07f34380
#: ../source/core/sharding-shard-key.txt:145
msgid "Restrictions"
msgstr ""
"参见文档 :doc:`/core/sharded-cluster-query-router` 与文档 :ref:`配置服务器 "
"<sharding-config-server>` 部分以获得关于集群环境概览与查询的详细信息."

# d4bb9308c46e4eccaed9a9b543e64dc9
#: ../source/core/sharding-shard-key.txt:147
msgid "For restrictions on shard key, see :ref:`limits-shard-keys`."
msgstr ""

# a15b43189d634426a35403ebe9750046
#: ../source/core/sharding-shard-key.txt:150
msgid "Collection Size"
msgstr ""

# 969816b032424b7a90dab4625e4bc9fd
#: ../source/core/sharding-shard-key.txt:152
msgid ""
"When sharding a collection that is not empty, the shard key can constrain"
" the maximum supported collection size for the initial sharding operation"
" only. See :limit:`Sharding Existing Collection Data Size`."
msgstr ""

# a344da2300154b60b3b61e93fb5183c4
#: ../source/core/sharding-shard-key.txt:159
msgid "A sharded collection can grow to any size after successful sharding."
msgstr ""

# 9f0f0e1bda984e14b2a755959d194654
#: ../source/core/sharding-shard-key.txt:166
msgid "Shard Key Cardinality"
msgstr ""

# 24d442ecbce84ada93eb62cf3dfb809d
#: ../source/core/sharding-shard-key.txt:168
msgid ""
"The :term:`cardinality` of a shard key determines the maximum number of "
"chunks the balancer can create. This can reduce or remove the "
"effectiveness of horizontal scaling in the cluster."
msgstr ""

# 8d929e4ed07c4927b9feb5df30122724
#: ../source/core/sharding-shard-key.txt:172
msgid ""
"A unique shard key value can exist on no more than a single chunk at any "
"given time. If a shard key has a cardinality of ``4``, then there can be "
"no more than ``4`` chunks within the sharded cluster, each storing one "
"unique shard key value. This constrains the number of effective shards in"
" the cluster to ``4`` as well - adding additional shards would not "
"provide any benefit."
msgstr ""

# e8c3a90e463d417f890f2af9214ac975
#: ../source/core/sharding-shard-key.txt:179
msgid ""
"The following image illustrates a sharded cluster using the field ``X`` "
"as the shard key. If ``X`` has low cardinality, the distribution of "
"inserts may look similar to the following:"
msgstr ""

# 34f39979a40e44b18ef8756584fb699e
#: ../source/core/sharding-shard-key.txt:185
msgid ""
"The cluster in this example would *not* scale horizontally, as incoming "
"writes would only route to a subset of shards."
msgstr ""

# 897ce06eb3914bafbe2457dce73c63d4
#: ../source/core/sharding-shard-key.txt:188
msgid ""
"A shard key with high cardinality does not guarantee even distribution of"
" data across the sharded cluster, though it does better facilitate "
"horizontal scaling. The :ref:`frequency <shard-key-frequency>` and "
":ref:`rate of change <shard-key-monotonic>` of the shard key also "
"contributes to data distribution. Consider each factor when choosing a "
"shard key."
msgstr ""
"如果这个字段基数比较低(即没有足够的选择性),你需要添加第二个字段,构成复合字段"
"片键,在使用复合片键时,数据可以被更好地分离."

# 7b256e95ea574a848083a3e5cd69109a
#: ../source/core/sharding-shard-key.txt:194
msgid ""
"If your data model requires sharding on a key that has low cardinality, "
"consider using a :term:`compound index` using a field that has higher "
"relative cardinality."
msgstr ""

# 95710adefccf4ba99104b6d147d59f37
#: ../source/core/sharding-shard-key.txt:201
msgid "Shard Key Frequency"
msgstr ""

# 63244a05550d434cbce444847f9890fb
#: ../source/core/sharding-shard-key.txt:203
msgid ""
"Consider a set representing the range of shard key values - the "
"``frequency`` of the shard key represents how often a given value occurs "
"in the data. If the majority of documents contain only a subset of those "
"values, then the chunks storing those documents become a bottleneck "
"within the cluster. Furthermore, as those chunks grow, they may become "
":ref:`indivisible chunks <jumbo-chunks>` as they cannot be split any "
"further. This reduces or removes the effectiveness of horizontal scaling "
"within the cluster."
msgstr ""

# edca9a01e16d46be86dcb098cabc5f85
#: ../source/core/sharding-shard-key.txt:211
msgid ""
"The following image illustrates a sharded cluster using the field ``X`` "
"as the shard key. If a subset of values for ``X`` occur with high "
"frequency, the distribution of inserts may look similar to the following:"
msgstr ""
"在集群中, :program:`mongos` 对从所有分片返回的数据进行合并排序,参见 :doc:`/"
"core/sharded-cluster-query-router` 和 :ref:`index-sort` 以获得更多信息."

# fded1c2d4da34743a95983b826f132fe
#: ../source/core/sharding-shard-key.txt:217
msgid ""
"A shard key with low frequency does not guarantee even distribution of "
"data across the sharded cluster. The :ref:`cardinality <shard-key-"
"cardinality>` and :ref:`rate of change <shard-key-monotonic>` of the "
"shard key also contributes to data distribution. Consider each factor "
"when choosing a shard key."
msgstr ""

# 62623361003340ddad8c883b6b901ba3
#: ../source/core/sharding-shard-key.txt:222
msgid ""
"If your data model requires sharding on a key that has high frequency "
"values, consider using a :term:`compound index` using a unique or low "
"frequency value."
msgstr ""

# 1082f181746644e194066f91cb056ee0
#: ../source/core/sharding-shard-key.txt:229
msgid "Monotonically Changing Shard Keys"
msgstr ""

# d46e36d19ebd44a7bf66b1e1f523b89a
#: ../source/core/sharding-shard-key.txt:231
msgid ""
"A shard key on a value that increases or decreases monotonically is more "
"likely to distribute inserts to a single shard within the cluster."
msgstr ""

# 1a6b2cd63e82490a801d549c81eadeb8
#: ../source/core/sharding-shard-key.txt:234
msgid ""
"This occurs because every cluster has a chunk that captures a range with "
"an upper bound of :bsontype:`maxKey<data_maxkey>`. ``maxKey`` always "
"compares as higher than all other values. Similarly, there is a chunk "
"that captures a range with a lower bound of "
":bsontype:`minKey<data_minkey>`. ``minKey`` always compares as lower than"
" all other values."
msgstr ""

# abb69a9278ff42ec965dae99ec78d9f6
#: ../source/core/sharding-shard-key.txt:240
msgid ""
"If the shard key value is always increasing, all new inserts are routed "
"to the chunk with ``maxKey`` as the upper bound. If the shard key value "
"is always decreasing, all new inserts are routed to the chunk with "
"``minKey`` as the lower bound. The shard containing that chunk becomes "
"the bottleneck for write operations."
msgstr ""

# 9de6186176d942a9935d347cf1129a9d
#: ../source/core/sharding-shard-key.txt:246
msgid ""
"The following image illustrates a sharded cluster using the field ``X`` "
"as the shard key. If the values for ``X`` are monotonically increasing, "
"the distribution of inserts may look similar to the following:"
msgstr ""

# fedba3210bc34cbbb4cdaf89c9ac9bb1
#: ../source/core/sharding-shard-key.txt:252
msgid ""
"If the shard key value was monotonically decreasing, then all inserts "
"would route to ``Chunk A`` instead."
msgstr ""

# 4a676c9f795a40d6a0d7a7c7f4e2ea1a
#: ../source/core/sharding-shard-key.txt:255
msgid ""
"A shard key that does not change monotonically does not guarantee even "
"distribution of data across the sharded cluster. The :ref:`cardinality"
"<shard-key-cardinality>` and :ref:`frequency<shard-key-frequency>` of the"
" shard key also contributes to data distribution. Consider each factor "
"when choosing a shard key."
msgstr ""

# 2f9f707a40094013a8037563e1facf75
#: ../source/core/sharding-shard-key.txt:261
msgid ""
"If your data model requires sharding on a key that changes monotonically,"
" consider using :doc:`/core/hashed-sharding`."
msgstr ""

# 228c06da32ac4d8d9bad2fb6f5aedd91
# 203b293c0fdb4befa4bb177893623923
#: ../source/core/sharding-shard-key.txt:1
#: ../source/core/sharding-shard-key.txt:116
msgid "shard key"
msgstr "片键"

# 228c06da32ac4d8d9bad2fb6f5aedd91
#: ../source/core/sharding-shard-key.txt:1
msgid "sharding"
msgstr "分片"

# 203b293c0fdb4befa4bb177893623923
#: ../source/core/sharding-shard-key.txt:116
msgid "cardinality"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "The shard key determines the "
#~ "distribution of the collection's "
#~ ":term:`documents <document>` among the "
#~ "cluster's :term:`shards <shard>`. The shard"
#~ " key is either an indexed "
#~ ":term:`field` or an indexed compound "
#~ "field that exists in every document "
#~ "in the collection."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB partitions data in the "
#~ "collection using ranges of shard key "
#~ "values. Each range, or :term:`chunk`, "
#~ "defines a non-overlapping range of "
#~ "shard key values. MongoDB distributes "
#~ "the chunks, and their documents, among"
#~ " the shards in the cluster."
#~ msgstr ""

#~ msgid ""
#~ "When a chunk grows beyond the "
#~ ":ref:`chunk size <sharding-chunk-size>`, "
#~ "MongoDB attempts to :term:`split <split>` "
#~ "the chunk into smaller chunks, always"
#~ " based on ranges in the shard "
#~ "key."
#~ msgstr ""

#~ msgid "Considerations"
#~ msgstr ""

#~ msgid ""
#~ "Shard keys are immutable and cannot "
#~ "be changed after insertion. See the "
#~ ":ref:`system limits for sharded cluster "
#~ "<limits-sharding>` for more information."
#~ msgstr ""

#~ msgid ""
#~ "The index on the shard key "
#~ "**cannot** be a :ref:`multikey index "
#~ "<index-type-multikey>`."
#~ msgstr ""

#~ msgid "Hashed Shard Keys"
#~ msgstr ""

#~ msgid ""
#~ "Hashed shard keys use a :ref:`hashed "
#~ "index <index-hashed-index>` of a "
#~ "single field as the :term:`shard key`"
#~ " to partition data across your "
#~ "sharded cluster."
#~ msgstr ""

#~ msgid ""
#~ "The field you choose as your "
#~ "hashed shard key should have a "
#~ "good cardinality, or large number of "
#~ "different values. Hashed keys work well"
#~ " with fields that increase monotonically"
#~ " like :term:`ObjectId` values or "
#~ "timestamps."
#~ msgstr ""

#~ msgid ""
#~ "If you shard an empty collection "
#~ "using a hashed shard key, MongoDB "
#~ "will automatically create and migrate "
#~ "chunks so that each shard has two"
#~ " chunks.  You can control how many"
#~ " chunks MongoDB will create with the"
#~ " ``numInitialChunks`` parameter to "
#~ ":dbcommand:`shardCollection` or by manually "
#~ "creating chunks on the empty collection"
#~ " using the :dbcommand:`split` command."
#~ msgstr ""

#~ msgid ""
#~ "To shard a collection using a "
#~ "hashed shard key, see :doc:`/tutorial"
#~ "/shard-collection-with-a-hashed-shard-key`."
#~ msgstr ""

#~ msgid "Tip"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB automatically computes the hashes "
#~ "when resolving queries using hashed "
#~ "indexes.  Applications do **not** need "
#~ "to compute hashes."
#~ msgstr ""

#~ msgid "Impacts of Shard Keys on Cluster Operations"
#~ msgstr ""

#~ msgid ""
#~ "The shard key affects write and "
#~ "query performance by determining how the"
#~ " MongoDB partitions data in the "
#~ "cluster and how effectively the "
#~ ":program:`mongos` instances can direct "
#~ "operations to the cluster. Consider the"
#~ " following operational impacts of shard "
#~ "key selection:"
#~ msgstr ""

#~ msgid "Write Scaling"
#~ msgstr ""

#~ msgid ""
#~ "Some possible shard keys will allow "
#~ "your application to take advantage of"
#~ " the increased write capacity that "
#~ "the cluster can provide, while others"
#~ " do not. Consider the following "
#~ "example where you shard by the "
#~ "values of the default :term:`_id` field,"
#~ " which is :term:`ObjectId`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB generates ``ObjectId`` values upon "
#~ "document creation to produce a unique"
#~ " identifier for the object. However, "
#~ "the most significant bits of data "
#~ "in this value represent a time "
#~ "stamp, which means that they increment"
#~ " in a regular and predictable "
#~ "pattern. Even though this value has "
#~ ":ref:`high cardinality <sharding-shard-key-"
#~ "cardinality>`, when using this, *any "
#~ "date, or other monotonically increasing "
#~ "number* as the shard key, all "
#~ "insert operations will be storing data"
#~ " into a single chunk, and therefore,"
#~ " a single shard. As a result, "
#~ "the write capacity of this shard "
#~ "will define the effective write capacity"
#~ " of the cluster."
#~ msgstr ""

#~ msgid ""
#~ "A shard key that increases monotonically"
#~ " will not hinder performance if you"
#~ " have a very low insert rate, "
#~ "or if most of your write "
#~ "operations are :method:`~db.collection.update()` "
#~ "operations distributed through your entire "
#~ "data set. Generally, choose shard keys"
#~ " that have *both* high cardinality "
#~ "and will distribute write operations "
#~ "across the *entire cluster*."
#~ msgstr ""

#~ msgid ""
#~ "Typically, a computed shard key that "
#~ "has some amount of \"randomness,\" such"
#~ " as ones that include a cryptographic"
#~ " hash (i.e. MD5 or SHA1) of "
#~ "other content in the document, will "
#~ "allow the cluster to scale write "
#~ "operations. However, random shard keys "
#~ "do not typically provide :ref:`query "
#~ "isolation <sharding-shard-key-query-"
#~ "isolation>`, which is another important "
#~ "characteristic of shard keys."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB makes it possible to shard "
#~ "a collection on a hashed index. "
#~ "This can greatly improve write scaling."
#~ " See :doc:`/tutorial/shard-collection-with-a"
#~ "-hashed-shard-key`."
#~ msgstr ""

#~ msgid "Querying"
#~ msgstr ""

#~ msgid ""
#~ "The :program:`mongos` provides an interface"
#~ " for applications to interact with "
#~ "sharded clusters that hides the "
#~ "complexity of :term:`data partitioning "
#~ "<partition>`. A :program:`mongos` receives "
#~ "queries from applications, and uses "
#~ "metadata from the :ref:`config server "
#~ "<sharding-config-server>`, to route queries"
#~ " to the :program:`mongod` instances with"
#~ " the appropriate data. While the "
#~ ":program:`mongos` succeeds in making all "
#~ "querying operational in sharded environments,"
#~ " the :term:`shard key` you select can"
#~ " have a profound affect on query "
#~ "performance."
#~ msgstr ""

#~ msgid ""
#~ "The :doc:`/core/sharded-cluster-query-router`"
#~ " and :ref:`config server <sharding-"
#~ "config-server>` sections for a more "
#~ "general overview of querying in sharded"
#~ " environments."
#~ msgstr ""

#~ msgid "Query Isolation"
#~ msgstr ""

#~ msgid ""
#~ "Generally, the fastest queries in a "
#~ "sharded environment are those that "
#~ ":program:`mongos` will route to a single"
#~ " shard, using the :term:`shard key` "
#~ "and the cluster meta data from the"
#~ " :ref:`config server <sharding-config-"
#~ "server>`. For queries that don't include"
#~ " the shard key, :program:`mongos` must "
#~ "query all shards, wait for their "
#~ "responses and then return the result "
#~ "to the application. These \"scatter/gather\""
#~ " queries can be long running "
#~ "operations."
#~ msgstr ""

#~ msgid ""
#~ "If your query includes the first "
#~ "component of a compound shard key "
#~ "[#shard-key-index]_, the :program:`mongos` "
#~ "can route the query directly to a"
#~ " single shard, or a small number "
#~ "of shards, which provides better "
#~ "performance. Even if you query values"
#~ " of the shard key that reside "
#~ "in different chunks, the :program:`mongos` "
#~ "will route queries directly to specific"
#~ " shards."
#~ msgstr ""

#~ msgid "To select a shard key for a collection:"
#~ msgstr ""

#~ msgid ""
#~ "determine the most commonly included "
#~ "fields in queries for a given "
#~ "application"
#~ msgstr ""

#~ msgid "find which of these operations are most performance dependent."
#~ msgstr ""

#~ msgid ""
#~ "If this field has low cardinality "
#~ "(i.e not sufficiently selective) you "
#~ "should add a second field to the"
#~ " shard key making a compound shard"
#~ " key. The data may become more "
#~ "splittable with a compound shard key."
#~ msgstr ""

#~ msgid "See"
#~ msgstr ""

#~ msgid "Sorting"
#~ msgstr ""

#~ msgid ""
#~ "In sharded systems, the :program:`mongos` "
#~ "performs a merge-sort of all "
#~ "sorted query results from the shards."
#~ " See :doc:`/core/sharded-cluster-query-"
#~ "router` and :ref:`index-sort` for more"
#~ " information."
#~ msgstr ""

#~ msgid "Indivisible Chunks"
#~ msgstr ""

#~ msgid ""
#~ "An insufficiently granular shard key can"
#~ " result in chunks that are "
#~ "\"unsplittable\". See :ref:`shard-key-"
#~ "selection-divisible` for more information."
#~ msgstr ""

#~ msgid "Additional Information"
#~ msgstr ""

#~ msgid ":doc:`/tutorial/choose-a-shard-key`"
#~ msgstr ""

#~ msgid ":doc:`/tutorial/shard-collection-with-a-hashed-shard-key`."
#~ msgstr ""

#~ msgid "write scaling"
#~ msgstr ""

#~ msgid "query isolation"
#~ msgstr ""

#~ msgid ""
#~ "In many ways, you can think of "
#~ "the shard key a cluster-wide "
#~ "index. However, be aware that sharded"
#~ " systems cannot enforce cluster-wide "
#~ "unique indexes *unless* the unique field"
#~ " is in the shard key. Consider "
#~ "the :doc:`/indexes` page for more "
#~ "information on indexes and compound "
#~ "indexes."
#~ msgstr ""

