# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/sharded-cluster-high-availability.txt:5
msgid "Sharded Cluster High Availability"
msgstr "集群的高可用性"

#: ../source/core/sharded-cluster-high-availability.txt:9
msgid "A :ref:`production <sharding-production-architecture>` :term:`cluster` has no single point of failure. This section introduces the availability concerns for MongoDB deployments in general and highlights potential failure scenarios and available resolutions."
msgstr " ref:`生产环境中的 <sharding-production-architecture>` :term:`cluster` 不会因为单节点失效而停止服务.这一节介绍了部署集群时需要如何考虑可用性,以及可能出现的问题和相应的解决办法."

#: ../source/core/sharded-cluster-high-availability.txt:15
msgid "Application Servers or :program:`mongos` Instances Become Unavailable"
msgstr "应用服务器或者 :program:`mongos` 不可用"

#: ../source/core/sharded-cluster-high-availability.txt:17
msgid "If each application server has its own :program:`mongos` instance, other application servers can continue access the database. Furthermore, :program:`mongos` instances do not maintain persistent state, and they can restart and become unavailable without losing any state or data. When a :program:`mongos` instance starts, it retrieves a copy of the :term:`config database` and can begin routing queries."
msgstr "如果每个应用服务器都有自己独有的 :program:`mongos` 实例,一个应用服务器出问题时,其他应用服务器还可以继续访问数据库,另外, :program:`mongos` 并不存储集群固有的状态,他们可以随时重启,并且在变得不可用时不会丢失任何状态或数据.当 :program:`mongos` 启动时,会拷贝一份 :term:`config database` 并开始处理请求."

#: ../source/core/sharded-cluster-high-availability.txt:25
msgid "A Single :program:`mongod` Becomes Unavailable in a Shard"
msgstr "一个分片中的一个 :program:`mongod` 不可用"

#: ../source/core/sharded-cluster-high-availability.txt:27
msgid ":doc:`Replica sets </replication>` provide high availability for shards. If the unavailable :program:`mongod` is a :term:`primary`, then the replica set will :ref:`elect <replica-set-elections>` a new primary. If the unavailable :program:`mongod` is a :term:`secondary`, and it disconnects the primary and secondary will continue to hold all data. In a three member replica set, even if a single member of the set experiences catastrophic failure, two other members have full copies of the data. [#recovery-window]_"
msgstr " :doc:`复制集 </replication>` 为集群提供了高可用性的保证.如果不可用的 :program:`mongod`是 :term:`primary` ,复制集会 :ref:`选举 <replica-set-elections>` 出一个新的主节点.如果不可用的 :program:`mongod` 是 :term:`secondary` ,剩余的主节点与从节点会继续提供服务.在一个三节点的复制集中,即使一个节点发生灾难性损坏 ,剩余的两个节点依然有全部的数据拷贝. [#recovery-window]_"

#: ../source/core/sharded-cluster-high-availability.txt:36
msgid "Always investigate availability interruptions and failures. If a system is unrecoverable, replace it and create a new member of the replica set as soon as possible to replace the lost redundancy."
msgstr "对系统的异常和可用性要做监控,如果一个节点不可用,尽快使用一个新节点进行替换,保证有足够的冗余."

#: ../source/core/sharded-cluster-high-availability.txt:41
msgid "All Members of a Replica Set Become Unavailable"
msgstr "复制集中所有成员都不可用"

#: ../source/core/sharded-cluster-high-availability.txt:43
msgid "If all members of a replica set within a shard are unavailable, all data held in that shard is unavailable. However, the data on all other shards will remain available, and it's possible to read and write data to the other shards. However, your application must be able to deal with partial results, and you should investigate the cause of the interruption and attempt to recover the shard as soon as possible."
msgstr "如果一个分片的复制集中所有成员都不可用,存储在这个分片的所有数据将不可用.不过,存储在其他分片的数据依然可用,并且其他分片依然可读可写,在这种情况下,你的应用程序获取的只是部分的结果,你应该尽快调查问题发生的原因并恢复不可用的节点."

#: ../source/core/sharded-cluster-high-availability.txt:51
msgid "One or Two Config Servers Become Unavailable"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:53
msgid ""
"Three distinct :program:`mongod` instances provide the :doc:`config servers "
"</core/sharded-cluster-config-servers>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:56
msgid ""
"If one or two config servers become unavailable, the cluster's metadata "
"becomes *read only*. You can still read and write data from the shards, but "
"no :ref:`chunk migration <sharding-balancing>` or :doc:`chunk splits "
"</tutorial/split-chunks-in-sharded-cluster>` will occur until all three "
"servers are available. Replace the config server as soon as possible. If all"
" config databases become unavailable, the cluster can become inoperable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:64
msgid ""
"If the config servers are inconsistent, the balancer will not perform any "
":ref:`chunk migration <sharding-balancing>` nor will the :program:`mongos` "
"perform :doc:`auto-chunk splits </tutorial/split-chunks-in-sharded-"
"cluster>`."
msgstr ""

#: ../source/includes/note-config-server-startup.rst:3
msgid "All config servers must be running and available when you first initiate a :term:`sharded cluster`."
msgstr "在初始化一个集群时,所有的配置服务器都必须正常运行并且可访问."

#: ../source/core/sharded-cluster-high-availability.txt:71
msgid ""
"If an unavailable secondary becomes available while it still has current "
"oplog entries, it can catch up to the latest state of the set using the "
"normal :term:`replication process <sync>`, otherwise it must perform an "
":term:`initial sync`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:79
msgid "Renaming Config Servers and Cluster Availability"
msgstr "重命名配置服务器"

#: ../source/includes/fact-rename-config-servers-requires-cluster-restart.rst:1
msgid "If the name or address that a sharded cluster uses to connect to a config server changes, you must restart **every** :program:`mongod` and :program:`mongos` instance in the sharded cluster. Avoid downtime by using CNAMEs to identify config servers within the MongoDB deployment."
msgstr "如果配置服务器的域名或者ip发生变化,你必须重启集群中的 **每一台** :program:`mongod` 和 :program:`mongos` ,你也可以使用cNAMES来标识配置服务器以防止集群停止服务."

#: ../source/core/sharded-cluster-high-availability.txt:83
msgid ""
"To avoid downtime when renaming config servers, use DNS names unrelated to "
"physical or virtual hostnames to refer to your :ref:`config servers "
"<sharding-config-server>`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:87
msgid ""
"Generally, refer to each config server using the DNS alias (e.g. a CNAME "
"record). When specifying the config server connection string to "
":program:`mongos`, use these names. These records make it possible to change"
" the IP address or rename config servers without changing the connection "
"string and without having to restart the entire cluster."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:94
msgid "Shard Keys and Cluster Availability"
msgstr "片键和集群可用性"

#: ../source/core/sharded-cluster-high-availability.txt:96
msgid ""
"The most important consideration when choosing a :term:`shard key` are:"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:99
msgid ""
"to ensure that MongoDB will be able to distribute data evenly among shards, "
"and"
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:102
msgid "to scale writes across the cluster, and"
msgstr "有较好的写扩展,同时"

#: ../source/core/sharded-cluster-high-availability.txt:104
msgid ""
"to ensure that :program:`mongos` can isolate most queries to a specific "
":program:`mongod`."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:107
msgid "Furthermore:"
msgstr "此外:"

#: ../source/core/sharded-cluster-high-availability.txt:109
msgid ""
"Each shard should be a :term:`replica set`, if a specific :program:`mongod` "
"instance fails, the replica set members will elect another to be "
":term:`primary` and continue operation. However, if an entire shard is "
"unreachable or fails for some reason, that data will be unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:115
msgid ""
"If the shard key allows the :program:`mongos` to isolate most operations to "
"a single shard, then the failure of a single shard will only render *some* "
"data unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:119
msgid ""
"If your shard key distributes data required for every operation throughout "
"the cluster, then the failure of the entire shard will render the entire "
"cluster unavailable."
msgstr ""

#: ../source/core/sharded-cluster-high-availability.txt:123
msgid ""
"In essence, this concern for reliability simply underscores the importance "
"of choosing a shard key that isolates query operations to a single shard."
msgstr ""
