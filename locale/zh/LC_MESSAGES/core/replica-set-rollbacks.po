# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-10-13 19:41+0800\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.6.9\n"

# 7bc349be31aa4a168a874c965e3a016d
#: ../source/core/replica-set-rollbacks.txt:10
msgid "Rollbacks During Replica Set Failover"
msgstr "故障切换时的回滚"

# 0c61484d9ec04b829dc51d17ef1a6431
#: ../source/core/replica-set-rollbacks.txt:14
msgid ""
"A rollback reverts write operations on a former :term:`primary` when the "
"member rejoins its :term:`replica set` after a :term:`failover`. A rollback "
"is necessary only if the primary had accepted write operations that the :"
"term:`secondaries <secondary>` had **not** successfully replicated before "
"the primary stepped down. When the primary rejoins the set as a secondary, "
"it reverts, or \"rolls back,\" its write operations to maintain database "
"consistency with the other members."
msgstr ""
"之前的 :term:`主节点 <primary>` 在 a :term:`故障切换 <failover>` 后重新回归 :"
"term:`复制集 <replica set>` 时将会发生写操作的回滚。回滚只会发生在主节点的写"
"操作 **没能** 成功在 :term:`从节点 <secondary>` 上应用就辞职的情况下。当主节"
"点重新以一个从节点加入复制集，它将进行 \"回滚\" ，其上得写操作将与复制集中其"
"他成员的保持一致。"

# 781b4586c4a748039167b5c105229ce7
#: ../source/core/replica-set-rollbacks.txt:23
msgid ""
"MongoDB attempts to avoid rollbacks, which should be rare. When a rollback "
"does occur, it is often the result of a network partition. Secondaries that "
"can not keep up with the throughput of operations on the former primary, "
"increase the size and impact of the rollback."
msgstr ""
"MongoDB会尽量避免回滚的发生。回滚如果确实发生了，往往是由于网络导致的。从节点"
"如果无法跟上之前主节点上的写操作的吞吐，那么将会加剧回滚的影响范围。"

# f1c3f6aea0c7413282ea0326ddd8027d
#: ../source/core/replica-set-rollbacks.txt:29
msgid ""
"A rollback does *not* occur if the write operations replicate to another "
"member of the replica set before the primary steps down *and* if that member "
"remains available and accessible to a majority of the replica set."
msgstr ""
"当主节点在从节点完成写操作的复制后才辞职的或是主节点一直是可用的或是与多数节"
"点可以沟通的，将 *不会* 发生回滚。"

# 92b0c6ab04004e3db8f553f35e42cada
#: ../source/core/replica-set-rollbacks.txt:35
msgid "Collect Rollback Data"
msgstr "选取回滚的数据"

# a3cd2f220a19413398e0ea37e52ad819
#: ../source/core/replica-set-rollbacks.txt:37
msgid ""
"When a rollback does occur, administrators must decide whether to apply or "
"ignore the rollback data. MongoDB writes the rollback data to :term:`BSON` "
"files in the ``rollback/`` folder under the database's :setting:`~storage."
"dbPath` directory.  The names of rollback files have the following form:"
msgstr ""
"当回滚发生后，管理员需要决定是恢复回滚的数据还是忽视它。MongoDB将回滚的数据"
"以 :term:`BSON` 文件的形式写到数据库 :setting:`~storage.dbPath` 文件夹中的 "
"``rollback/`` 目录。回滚数据文件的命名是按照以下规则进行的："

# 30d92aaaea1f41b795be645825d00b68
#: ../source/core/replica-set-rollbacks.txt:47
msgid "For example:"
msgstr "例如："

# 9e1a70123dc747579bbfa76b403529f2
#: ../source/core/replica-set-rollbacks.txt:53
msgid ""
"Administrators must apply rollback data manually after the member completes "
"the rollback and returns to secondary status. Use :doc:`bsondump </reference/"
"program/bsondump>` to read the contents of the rollback files. Then use :"
"program:`mongorestore` to apply the changes to the new primary."
msgstr ""
"当节点完成回滚并退回从节点的状态后，管理员必须手动的获取回滚的数据。通过使"
"用 :doc:`bsondump </reference/program/bsondump>` 来获取回滚的数据内容。然后使"
"用 :program:`mongorestore` 来将这些数据应用到新的主节点中。"

# f501db343a214f88af757b5259016538
#: ../source/core/replica-set-rollbacks.txt:60
msgid "Avoid Replica Set Rollbacks"
msgstr "避免复制集的回滚"

# e52a1a47368545b186a74b00b2d496ec
#: ../source/core/replica-set-rollbacks.txt:62
msgid ""
"To prevent rollbacks, use :ref:`replica acknowledged write concern <write-"
"concern-replica-acknowledged>` to guarantee that the write operations "
"propagate to the members of a replica set."
msgstr ""
"我们可以通过设置 :ref:`复制集的安全写级别 <write-concern-replica-"
"acknowledged>` 确保写操作应用到了整个复制集来避免回滚。"

# f917e1b44c984e6796c77f7bf3a575a5
#: ../source/core/replica-set-rollbacks.txt:67
msgid "Rollback Limitations"
msgstr "回滚的限制"

# 787064d940404680a690b09b730bfab3
#: ../source/core/replica-set-rollbacks.txt:69
msgid ""
"A :program:`mongod` instance will not rollback more than 300 megabytes of "
"data. If your system must rollback more than 300 megabytes, you must "
"manually intervene to recover the data. If this is the case, the following "
"line will appear in your :program:`mongod` log:"
msgstr ""
" :program:`mongod` 实例将不会对超过300M的数据进行回滚。如果我们的系统必须回滚"
"超过300M的数据，我们则需要手动的进行数据恢复。如果出现这样的情况，我们 :"
"program:`mongod` 实例的日志中会有如下的信息："

# eddba05a61e04cc78c03cb0b98eece4e
#: ../source/core/replica-set-rollbacks.txt:79
msgid ""
"In this situation, save the data directly or force the member to perform an "
"initial sync. To force initial sync, sync from a \"current\" member of the "
"set by deleting the content of the :setting:`~storage.dbPath` directory for "
"the member that requires a larger rollback."
msgstr ""
"这种情况下，直接保存数据或者强制节点执行数据初始化同步。如果进行数据的初始化"
"同步呢，我们可以通过将该节点 :setting:`~storage.dbPath` 目录中的数据删除来从 "
"\"现有\" 节点上进行数据同步。"

# d0d60ee43839436183a58f2135681cd9
#: ../source/core/replica-set-rollbacks.txt:84
msgid ""
":doc:`/core/replica-set-high-availability` and :doc:`/core/replica-set-"
"elections`."
msgstr ""
" :doc:`/core/replica-set-high-availability` 和 :doc:`/core/replica-set-"
"elections` 。"

# feb3292e16fa4db1b7e49a174b5a6eb8
# feb3292e16fa4db1b7e49a174b5a6eb8
# feb3292e16fa4db1b7e49a174b5a6eb8
#: ../source/core/replica-set-rollbacks.txt:1
msgid "rollbacks"
msgstr "回滚"

# feb3292e16fa4db1b7e49a174b5a6eb8
#: ../source/core/replica-set-rollbacks.txt:1
msgid "replica set"
msgstr "复制集"

# feb3292e16fa4db1b7e49a174b5a6eb8
#: ../source/core/replica-set-rollbacks.txt:1
msgid "consistency"
msgstr "一致性"
