#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/wiredtiger.txt:5
msgid "WiredTiger Storage Engine"
msgstr ""

#: ../source/core/wiredtiger.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/wiredtiger.txt:15
msgid ""
"Starting in MongoDB 3.0, the WiredTiger storage engine is available in the "
"64-bit builds."
msgstr ""

#: ../source/core/wiredtiger.txt:20
msgid ""
"The WiredTiger storage engine is the default storage engine starting in "
"MongoDB 3.2. For existing deployments, if you do not specify the "
"``--storageEngine`` or the :setting:`storage.engine` setting, MongoDB 3.2 "
"can automatically determine the storage engine used to create the data files"
" in the ``--dbpath`` or :setting:`storage.dbPath`. See :ref:`3.2-storage-"
"engine-compatibility`."
msgstr ""

#: ../source/core/wiredtiger.txt:29
msgid "Document Level Concurrency"
msgstr ""

#: ../source/core/wiredtiger.txt:31
msgid ""
"WiredTiger uses *document-level* concurrency control for write operations. "
"As a result, multiple clients can modify different documents of a collection"
" at the same time."
msgstr ""

#: ../source/includes/fact-wiredtiger-locks.rst:1
msgid ""
"For most read and write operations, WiredTiger uses optimistic concurrency "
"control. WiredTiger uses only intent locks at the global, database and "
"collection levels. When the storage engine detects conflicts between two "
"operations, one will incur a write conflict causing MongoDB to transparently"
" retry that operation."
msgstr ""

#: ../source/includes/fact-wiredtiger-locks.rst:7
msgid ""
"Some global operations, typically short lived operations involving multiple "
"databases, still require a global \"instance-wide\" lock. Some other "
"operations, such as dropping a collection, still require an exclusive "
"database lock."
msgstr ""

#: ../source/core/wiredtiger.txt:40
msgid "Snapshots and Checkpoints"
msgstr ""

#: ../source/core/wiredtiger.txt:42
msgid ""
"WiredTiger uses MultiVersion Concurrency Control (MVCC). At the start of an "
"operation, WiredTiger provides a point-in-time snapshot of the data to the "
"transaction. A snapshot presents a consistent view of the in-memory data."
msgstr ""

#: ../source/core/wiredtiger.txt:47
msgid ""
"When writing to disk, WiredTiger writes all the data in a snapshot to disk "
"in a consistent way across all data files. The now-:term:`durable` data act "
"as a *checkpoint* in the data files. The *checkpoint* ensures that the data "
"files are consistent up to and including the last checkpoint; i.e. "
"checkpoints can act as recovery points."
msgstr ""

#: ../source/includes/extracts/wt-snapshot-frequency.rst:1
msgid ""
"MongoDB configures WiredTiger to create checkpoints (i.e. write the snapshot"
" data to disk) at intervals of 60 seconds or 2 gigabytes of journal data."
msgstr ""

#: ../source/core/wiredtiger.txt:55
msgid ""
"During the write of a new checkpoint, the previous checkpoint is still "
"valid. As such, even if MongoDB terminates or encounters an error while "
"writing a new checkpoint, upon restart, MongoDB can recover from the last "
"valid checkpoint."
msgstr ""

#: ../source/core/wiredtiger.txt:60
msgid ""
"The new checkpoint becomes accessible and permanent when WiredTiger's "
"metadata table is atomically updated to reference the new checkpoint. Once "
"the new checkpoint is accessible, WiredTiger frees pages from the old "
"checkpoints."
msgstr ""

#: ../source/core/wiredtiger.txt:65
msgid ""
"Using WiredTiger, even without :ref:`journaling <storage-wiredtiger-"
"journal>`, MongoDB can recover from the last checkpoint; however, to recover"
" changes made after the last checkpoint, run with :ref:`journaling <storage-"
"wiredtiger-journal>`."
msgstr ""

#: ../source/core/wiredtiger.txt:73
msgid "Journal"
msgstr ""

#: ../source/core/wiredtiger.txt:75
msgid ""
"WiredTiger uses a write-ahead transaction log in combination with "
":ref:`checkpoints <storage-wiredtiger-checkpoints>` to ensure data "
"durability."
msgstr ""

#: ../source/core/wiredtiger.txt:79
msgid ""
"The WiredTiger journal persists all data modifications between checkpoints. "
"If MongoDB exits between checkpoints, it uses the journal to replay all data"
" modified since the last checkpoint. For information on the frequency with "
"which MongoDB writes the journal data to disk, see :ref:`journal-process`."
msgstr ""

#: ../source/core/wiredtiger.txt:85
msgid ""
"WiredTiger journal is compressed using the :term:`snappy` compression "
"library. To specify an alternate compression algorithm or no compression, "
"use the :setting:`storage.wiredTiger.engineConfig.journalCompressor` "
"setting."
msgstr ""

#: ../source/includes/fact-wiredtiger-log-compression-limit.rst:1
msgid ""
"Minimum log record size for WiredTiger is 128 bytes. If a log record is 128 "
"bytes or smaller, WiredTiger does not compress that record."
msgstr ""

#: ../source/core/wiredtiger.txt:94
msgid ""
"You can disable journaling by setting :setting:`storage.journal.enabled` to "
"``false``, which can reduce the overhead of maintaining the journal."
msgstr ""

#: ../source/core/wiredtiger.txt:98
msgid ""
"For :term:`standalone` instances, not using the journal means that you will "
"lose some data modifications when MongoDB exits unexpectedly between "
"checkpoints. For members of :term:`replica sets <replica set>`, the "
"replication process may provide sufficient durability guarantees."
msgstr ""

#: ../source/core/wiredtiger.txt:103
msgid ":ref:`Journaling with WiredTiger <journaling-wiredTiger>`"
msgstr ""

#: ../source/core/wiredtiger.txt:108
msgid "Compression"
msgstr ""

#: ../source/core/wiredtiger.txt:110
msgid ""
"With WiredTiger, MongoDB supports compression for all collections and "
"indexes. Compression minimizes storage use at the expense of additional CPU."
msgstr ""

#: ../source/core/wiredtiger.txt:114
msgid ""
"By default, WiredTiger uses block compression with the :term:`snappy` "
"compression library for all collections and :term:`prefix compression` for "
"all indexes."
msgstr ""

#: ../source/core/wiredtiger.txt:118
msgid ""
"For collections, block compression with :term:`zlib` is also available. To "
"specify an alternate compression algorithm or no compression, use the "
":setting:`storage.wiredTiger.collectionConfig.blockCompressor` setting."
msgstr ""

#: ../source/core/wiredtiger.txt:123
msgid ""
"For indexes, to disable :term:`prefix compression`, use the "
":setting:`storage.wiredTiger.indexConfig.prefixCompression` setting."
msgstr ""

#: ../source/core/wiredtiger.txt:126
msgid ""
"Compression settings are also configurable on a per-collection and per-index"
" basis during collection and index creation. See :ref:`create-collection-"
"storage-engine-options` and :ref:`db.collection.createIndex() storageEngine "
"option <createIndex-options>`."
msgstr ""

#: ../source/core/wiredtiger.txt:132
msgid ""
"For most workloads, the default compression settings balance storage "
"efficiency and processing requirements."
msgstr ""

#: ../source/core/wiredtiger.txt:135
msgid ""
"The WiredTiger journal is also compressed by default. For information on "
"journal compression, see :ref:`storage-wiredtiger-journal`."
msgstr ""

#: ../source/core/wiredtiger.txt:141
msgid "Memory Use"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:1
msgid ""
"With WiredTiger, MongoDB utilizes both the WiredTiger cache and the "
"filesystem cache."
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:6
msgid ""
"Starting in MongoDB 3.2, the WiredTiger cache, by default, will use the "
"larger of either:"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:9
msgid "60% of RAM minus 1 GB, or"
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:11
msgid "1 GB."
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:13
msgid ""
"For systems with up to 10 GB of RAM, the new default setting is less than or"
" equal to the 3.0 default setting (For MongoDB 3.0, the WiredTiger cache "
"uses either 1 GB or half of the installed physical RAM, whichever is "
"larger)."
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:18
msgid ""
"For systems with more than 10 GB of RAM, the new default setting is greater "
"than the 3.0 setting."
msgstr ""

#: ../source/includes/extracts/wt-cache-default-setting.rst:21
msgid ""
"Via the filesystem cache, MongoDB automatically uses all free memory that is"
" not used by the WiredTiger cache or by other processes. Data in the "
"filesystem cache is compressed."
msgstr ""

#: ../source/includes/extracts/wt-cache-setting.rst:1
msgid ""
"To adjust the size of the WiredTiger cache, see "
":setting:`storage.wiredTiger.engineConfig.cacheSizeGB` and "
":option:`--wiredTigerCacheSizeGB`. Avoid increasing the WiredTiger cache "
"size above its default value."
msgstr ""

#: ../source/core/wiredtiger.txt:147
msgid "`<http://wiredtiger.com>`_"
msgstr ""
