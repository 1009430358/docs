#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/shell-types.txt:3
msgid "Data Types in the ``mongo`` Shell"
msgstr ""

#: ../source/core/shell-types.txt:13
msgid ""
"MongoDB :term:`BSON` provides support for additional data types than "
":term:`JSON`. :doc:`Drivers </applications/drivers>` provide native support "
"for these data types in host languages and the :program:`mongo` shell also "
"provides several helper classes to support the use of these data types in "
"the :program:`mongo` JavaScript shell. See the :doc:`Extended JSON "
"</reference/mongodb-extended-json>` reference for additional information."
msgstr ""

#: ../source/core/shell-types.txt:24
msgid "Types"
msgstr ""

#: ../source/core/shell-types.txt:29
msgid "Date"
msgstr ""

#: ../source/core/shell-types.txt:31
msgid ""
"The :program:`mongo` shell provides various methods to return the date, "
"either as a string or as a ``Date`` object:"
msgstr ""

#: ../source/core/shell-types.txt:34
msgid "``Date()`` method which returns the current date as a string."
msgstr ""

#: ../source/core/shell-types.txt:36
msgid ""
"``new Date()`` constructor which returns a ``Date`` object using the "
"``ISODate()`` wrapper."
msgstr ""

#: ../source/core/shell-types.txt:39
msgid ""
"``ISODate()`` constructor which returns a ``Date`` object using the "
"``ISODate()`` wrapper."
msgstr ""

#: ../source/includes/fact-bson-date-internals.rst:1
msgid ""
"Internally, :ref:`document-bson-type-date` objects are stored as a 64 bit "
"integer representing the number of milliseconds since the Unix epoch (Jan 1,"
" 1970), which results in a representable date range of about 290 millions "
"years into the past and future."
msgstr ""

#: ../source/core/shell-types.txt:45
msgid "Return Date as a String"
msgstr ""

#: ../source/core/shell-types.txt:47
msgid ""
"To return the date as a string, use the ``Date()`` method, as in the "
"following example:"
msgstr ""

#: ../source/core/shell-types.txt:54 ../source/core/shell-types.txt:92
msgid ""
"To print the value of the variable, type the variable name in the shell, as "
"in the following:"
msgstr ""

#: ../source/core/shell-types.txt:61
msgid "The result is the value of ``myDateString``:"
msgstr ""

#: ../source/core/shell-types.txt:67
msgid "To verify the type, use the ``typeof`` operator, as in the following:"
msgstr ""

#: ../source/core/shell-types.txt:73
msgid "The operation returns ``string``."
msgstr ""

#: ../source/core/shell-types.txt:76
msgid "Return ``Date``"
msgstr ""

#: ../source/core/shell-types.txt:81
msgid ""
"The following example uses both the ``new Date()`` constructor and the "
"``ISODate()`` constructor to return ``Date`` objects."
msgstr ""

#: ../source/core/shell-types.txt:89
msgid ""
"You can use the ``new`` operator with the ``ISODate()`` constructor as well."
msgstr ""

#: ../source/core/shell-types.txt:99
msgid ""
"The result is the ``Date`` value of ``myDate`` wrapped in the ``ISODate()`` "
"helper:"
msgstr ""

#: ../source/core/shell-types.txt:106
msgid ""
"To verify the type, use the ``instanceof`` operator, as in the following:"
msgstr ""

#: ../source/core/shell-types.txt:114
msgid "The operation returns ``true`` for both."
msgstr ""

#: ../source/core/shell-types.txt:117
msgid "ObjectId"
msgstr ""

#: ../source/core/shell-types.txt:0
msgid "See"
msgstr ""

#: ../source/core/shell-types.txt:132
msgid "NumberLong"
msgstr ""

#: ../source/core/shell-types.txt:134
msgid ""
"By default, the :program:`mongo` shell treats all numbers as floating-point "
"values. The :program:`mongo` shell provides the ``NumberLong()`` wrapper to "
"handle 64-bit integers."
msgstr ""

#: ../source/core/shell-types.txt:138
msgid "The ``NumberLong()`` wrapper accepts the long as a string:"
msgstr ""

#: ../source/core/shell-types.txt:144
msgid ""
"The following examples use the ``NumberLong()`` wrapper to write to the "
"collection:"
msgstr ""

#: ../source/core/shell-types.txt:155
msgid "Retrieve the document to verify:"
msgstr ""

#: ../source/core/shell-types.txt:161
msgid ""
"In the returned document, the ``calc`` field contains a ``NumberLong`` "
"object:"
msgstr ""

#: ../source/core/shell-types.txt:168
msgid ""
"If you use the :update:`$inc` to increment the value of a field that "
"contains a ``NumberLong`` object by a **float**, the data type changes to a "
"floating point value, as in the following example:"
msgstr ""

#: ../source/core/shell-types.txt:172
msgid ""
"Use :update:`$inc` to increment the ``calc`` field by ``5``, which the "
":program:`mongo` shell treats as a float:"
msgstr ""

#: ../source/core/shell-types.txt:180
msgid "Retrieve the updated document:"
msgstr ""

#: ../source/core/shell-types.txt:186
msgid ""
"In the updated document, the ``calc`` field contains a floating point value:"
msgstr ""

#: ../source/core/shell-types.txt:196
msgid "NumberInt"
msgstr ""

#: ../source/core/shell-types.txt:198
msgid ""
"By default, the :program:`mongo` shell treats all numbers as floating-point "
"values. The :program:`mongo` shell provides the ``NumberInt()`` constructor "
"to explicitly specify 32-bit integers."
msgstr ""

#: ../source/core/shell-types.txt:205
msgid "Check Types in the ``mongo`` Shell"
msgstr ""

#: ../source/core/shell-types.txt:207
msgid ""
"To determine the type of fields, the :program:`mongo` shell provides the "
"``instanceof`` and ``typeof`` operators."
msgstr ""

#: ../source/core/shell-types.txt:212
msgid "``instanceof``"
msgstr ""

#: ../source/core/shell-types.txt:214
msgid ""
"``instanceof`` returns a boolean to test if a value is an instance of some "
"type."
msgstr ""

#: ../source/core/shell-types.txt:217
msgid ""
"For example, the following operation tests whether the ``_id`` field is an "
"instance of type ``ObjectId``:"
msgstr ""

#: ../source/core/shell-types.txt:224
msgid "The operation returns ``true``."
msgstr ""

#: ../source/core/shell-types.txt:227
msgid "``typeof``"
msgstr ""

#: ../source/core/shell-types.txt:229
msgid "``typeof`` returns the type of a field."
msgstr ""

#: ../source/core/shell-types.txt:231
msgid ""
"For example, the following operation returns the type of the ``_id`` field:"
msgstr ""

#: ../source/core/shell-types.txt:238
msgid ""
"In this case ``typeof`` will return the more generic ``object`` type rather "
"than ``ObjectId`` type."
msgstr ""

#: ../source/core/shell-types.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/shell-types.txt:78
msgid ""
"The :program:`mongo` shell wraps objects of ``Date`` type with the "
"``ISODate`` helper; however, the objects remain of type ``Date``."
msgstr ""

#: ../source/core/shell-types.txt:119
msgid ""
"The :program:`mongo` shell provides the ``ObjectId()`` wrapper class around "
"the :ref:`objectid` data type. To generate a new ObjectId, use the following"
" operation in the :program:`mongo` shell:"
msgstr ""

#~ msgid ""
#~ "The :program:`mongo` shell wrap objects of ``Date`` type with the "
#~ "``ISODate`` helper; however, the objects remain of type ``Date``."
#~ msgstr ""

#~ msgid ""
#~ "The :program:`mongo` shell provides the ``ObjectId()`` wrapper class around "
#~ "the :term:`ObjectId` data type. To generate a new ObjectId, use the "
#~ "following operation in the :program:`mongo` shell:"
#~ msgstr ""
