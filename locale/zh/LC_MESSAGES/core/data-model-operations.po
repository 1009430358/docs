# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-09 21:17+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# f14076a40ed7482fbcf10ab9a9628c1a
#: ../source/core/data-model-operations.txt:3
msgid "Operational Factors and Data Models"
msgstr "MongoDB特性和数据模型的关系"

# dd06504f1172476486ca2536f4c9a763
#: ../source/core/data-model-operations.txt:7
msgid ""
"Modeling application data for MongoDB depends on both the data itself, as "
"well as the characteristics of MongoDB itself. For example, different data "
"models may allow applications to use more efficient queries, increase the "
"throughput of insert and update operations, or distribute activity to a "
"sharded cluster more effectively."
msgstr ""
"MongoDB的数据建模不仅仅取决于应用程序的数据需求，也需要考虑到MongoDB本身的一些特性。"
"例如，有些数据模型可以让查询更加有效，有些可以增加插入或更新的并发量，有些则可以更有效"
"地把事务均衡到各个分片服务器上。"

# 39804f49724b483285f1e71c983485f9
#: ../source/core/data-model-operations.txt:13
msgid ""
"These factors are *operational* or address requirements that arise outside "
"of the application but impact the performance of MongoDB based applications."
" When developing a data model, analyze all of your application's :doc:`read "
"operations </core/read-operations>` and :doc:`write operations </core/write-"
"operations>` in conjunction with the following considerations."
msgstr ""
"这些因素是和MongoDB的 *运行* 相关的，并不完全基于应用程序的需求，但是却对"
"应用程序的性能会有直接的影响。当进行建模设计时，在分析应用程序所有的"
" :doc:`读操作 </core/read-operations>` 和 :doc:`写操作  </core/write-"
"operations>` 的前提下，你还需要考虑下述几个因素。"


# e513be50123b41798716e6159da8439e
#: ../source/core/data-model-operations.txt:23
msgid "Document Growth"
msgstr "文档增长性"

# 3afc6cb77214444cb8ff51245515af0d
#: ../source/core/data-model-operations.txt:35
msgid ""
"For instance, if your applications require updates that will cause document "
"growth, you may want to refactor your data model to use references between "
"data in distinct documents rather than a denormalized data model."
msgstr ""
"举例来说，如果你的程序的更新操作会导致文档大小增加，那么你可能要重新设计下数据模型，"
"在不同文档之间使用引用的方式而非内嵌、冗余的数据结构。"

# bbc7429c52734b0ca4fcd1d615026b03
#: ../source/core/data-model-operations.txt:40
msgid ""
"MongoDB adaptively adjusts the amount of automatic padding to reduce "
"occurrences of relocation. You may also use a *pre-allocation* strategy to "
"explicitly avoid document growth. Refer to the :ecosystem:`Pre-Aggregated "
"Reports Use Case </use-cases/pre-aggregated-reports>` for an example of the "
"*pre-allocation* approach to handling document growth."
msgstr ""
"MongoDB会自动调整空白填充的大小以尽可能的减小文档迁移。你也可以使用一个"
" *预分配* 策略来防止文档的增长。 具体关于使用 *预分配* 来处理文档增长的例子可以参见"
" :ecosystem:`预聚合报表案例  </use-cases/pre-aggregated-reports>` "

# e89a437e3d7f49b3becf1c5772c13ef2
#: ../source/core/data-model-operations.txt:47
msgid ""
"See :doc:`/core/storage` for more information on MongoDB's storage model and"
" record allocation strategies."
msgstr ""
"关于MongoDB's 存储模式和记录分配策略的更多信息，请参见 :doc:`/core/storage`。"

# 2fac3cab68ae4c80a566808c5d69584e
#: ../source/core/data-model-operations.txt:54
msgid "Atomicity"
msgstr "原子性"

# ae6124ad6f2c4f489bff1715a108f194
#: ../source/core/data-model-operations.txt:56
msgid ""
"In MongoDB, operations are atomic at the :term:`document` level. No "
"**single** write operation can change more than one document. Operations "
"that modify more than a single document in a collection still operate on one"
" document at a time. [#record-atomicity]_ Ensure that your application "
"stores all fields with atomic dependency requirements in the same document. "
"If the application can tolerate non-atomic updates for two pieces of data, "
"you can store these data in separate documents."
msgstr ""
"在MongoDB里面，所有操作在 :term:`document` 级别具有原子性. 一个 "
"**单个** 写操作最多只可以修改一个文档。 即使是一个会改变同一个集合中多个文档的命令，"
"在同一时间也只会操作一个文档。 [#record-atomicity]_ 尽可能保证那些需要在一个原子操作内"
"进行修改的字段定义在同一个文档里面。如果你的应用程序允许对两个数据的非原子性更新操作，"
"那么可以把这些数据定义在不同的文档内。"

# 2b19e9a31c4c4b01b2be0fa42157f47c
#: ../source/core/data-model-operations.txt:65
msgid ""
"A data model that embeds related data in a single document facilitates these"
" kinds of atomic operations. For data models that store references between "
"related pieces of data, the application must issue separate read and write "
"operations to retrieve and modify these related pieces of data."
msgstr ""
"把相关数据定义到同一个文档里面的内嵌方式有利于这种原子性操作。对于那些使用引用来关联"
"相关数据的数据模型，应用程序必须再用额外的读和写的操作去取回和修改相关的数据。"


# 4b1834b946674518b90eebd8e2e7f597
#: ../source/core/data-model-operations.txt:71
msgid ""
"See :ref:`data-modeling-atomic-operation` for an example data model that "
"provides atomic updates for a single document."
msgstr ""
"关于原子性操作更新单个文档的例子，参见 :ref:`data-modeling-atomic-operation`。 "

# 236516daec9e4edca6cae4f283ee9fbd
#: ../source/core/data-model-operations.txt:74
msgid ""
"Document-level atomic operations include all operations within a single "
"MongoDB document record: operations that affect multiple sub-documents "
"within that single record are still atomic."
msgstr ""
"文档级原子性操作包含所有针对于一个文档的操作： 即便是涉及到多个子文档的多个操作，只要是"
"在同一个文档之内，这些操作仍旧是有原子性的。"

# abf5cfa786244d6d93080d7c397c6e9d
#: ../source/core/data-model-operations.txt:80
msgid "Sharding"
msgstr "分片"

# 0f1c46264b894707a5c3a4a88b64987e
#: ../source/core/data-model-operations.txt:82
msgid ""
"MongoDB uses :term:`sharding` to provide horizontal scaling. These clusters "
"support deployments with large data sets and high-throughput operations. "
"Sharding allows users to :term:`partition` a :term:`collection` within a "
"database to distribute the collection's documents across a number of "
":program:`mongod` instances or :term:`shards <shard>`."
msgstr ""
"MongoDB 使用 :term:`sharding` （分片）来实现水平扩展。使用分片的集群可以支持海量的数据"
"和高并发读写。用户可以使用分片技术把一个数据库内的某一个集合的数据进行分区，从而达到把数据"
"分布到多个 :program:`mongod` 实例（或分片上）的目的。"

# faf0cfc9bb6b4a519232a419f554f05e
#: ../source/core/data-model-operations.txt:89
msgid ""
"To distribute data and application traffic in a sharded collection, MongoDB "
"uses the :ref:`shard key <shard-key>`. Selecting the proper :ref:`shard key "
"<shard-key>` has significant implications for performance, and can enable or"
" prevent query isolation and increased write capacity. It is important to "
"consider carefully the field or fields to use as the shard key."
msgstr ""
"Mongodb 依据 :ref:`分片键 <shard-key>` 分发数据和应用程序的事务请求。 选择一个合适的"
"分片键会对性能有很大的影响，也会促进或者阻碍MongoDB的定向分片查询和增强的写性能。"
"所以在选择分片键时候要仔细考量分片键盘所用的字段。"

# 1d0e0d83902b45eab5f065ddbd217c30
#: ../source/core/data-model-operations.txt:96
msgid ""
"See :doc:`/core/sharding-introduction` and :doc:`/core/sharding-shard-key` "
"for more information."
msgstr ""
"更多信息请参见 :doc:`/core/sharding-introduction` 及 :doc:`/core/sharding-shard-key`"

# 6cf286141d2c4bf6ad544225faae32b7
#: ../source/core/data-model-operations.txt:102
msgid "Indexes"
msgstr "索引"

# c4ec41b3e83749eaa0cc0dbe4895e8c3
#: ../source/core/data-model-operations.txt:104
msgid ""
"Use indexes to improve performance for common queries. Build indexes on "
"fields that appear often in queries and for all operations that return "
"sorted results. MongoDB automatically creates a unique index on the ``_id`` "
"field."
msgstr ""
"对常用操作可以使用索引来提高性能。对查询条件中常见的字段，以及需要排序的字段创建索引。"
"MongoDB会对 ``_id`` 字段自动创建唯一索引。"

# f54f2a9ad20e41af87e0991f0128f3b3
#: ../source/core/data-model-operations.txt:109
msgid "As you create indexes, consider the following behaviors of indexes:"
msgstr "创建索引时，需要考虑索引的下述特征："

# 72231468638344049cea37901bc98b8c
#: ../source/core/data-model-operations.txt:111
msgid "Each index requires at least 8KB of data space."
msgstr "每个索引需要至少8KB的空间。"

# 8a95b086358b4b81b646e64b5967dbd5
#: ../source/core/data-model-operations.txt:113
msgid ""
"Adding an index has some negative performance impact for write operations. "
"For collections with high write-to-read ratio, indexes are expensive since "
"each insert must also update any indexes."
msgstr ""
"每增加一个索引，就会对写操作性能有一些影响。对于一个写多读少的集合，索引会变得很费时"
"因为每个插入必须要更新所有索引。"

# 05e68b2601d742028b516d4a80acaad6
#: ../source/core/data-model-operations.txt:117
msgid ""
"Collections with high read-to-write ratio often benefit from additional "
"indexes. Indexes do not affect un-indexed read operations."
msgstr ""
"每增加一个索引，就会对写操作性能有一些影响。对于一个写多读少的集合，索引会变得很费时"
"因为每个插入必须要更新所有索引。"

# ade269abce404e31952d1ed33eaef26d
#: ../source/core/data-model-operations.txt:120
msgid ""
"When active, each index consumes disk space and memory. This usage can be "
"significant and should be tracked for capacity planning, especially for "
"concerns over working set size."
msgstr ""
"每个索引都会占一定的硬盘空间和内存（对于活跃的索引）。索引有可能会用到很多这样的资源，"
"因此对这些资源要进行管理和规划，特别是在计算热点数据大小的时候。" 

# b347391d6c0f4815b4f9e3899d0d698d
#: ../source/core/data-model-operations.txt:124
msgid ""
"See :doc:`/applications/indexes` for more information on indexes as well as "
":doc:`/tutorial/analyze-query-plan/`. Additionally, the MongoDB "
":doc:`database profiler </tutorial/manage-the-database-profiler>` may help "
"identify inefficient queries."
msgstr ""
"关于索引的更多信息请参见  :doc:`/applications/indexes` 以及 "
":doc:`/tutorial/analyze-query-plan/`。另外， MongoDB的 "
":doc:`database profiler </tutorial/manage-the-database-profiler>` 可以帮你"
"找出一些使用索引不当而导致低效的查询。"


# 87fe1d3332af44e58acc2e945ed63d02
#: ../source/core/data-model-operations.txt:132
msgid "Large Number of Collections"
msgstr "集合的数量"

# c3f260f33ef54976aa5c2a431741c974
#: ../source/core/data-model-operations.txt:134
msgid ""
"In certain situations, you might choose to store related information in "
"several collections rather than in a single collection."
msgstr ""
"在某些情况下，你可能会考虑把相关的数据保存到多个而不是一个集合里面。" 

# 82fc7a0c6070408ca0fec2e655f8ba7d
#: ../source/core/data-model-operations.txt:137
msgid ""
"Consider a sample collection ``logs`` that stores log documents for various "
"environment and applications. The ``logs`` collection contains documents of "
"the following form:"
msgstr ""
"我们来看一个样本集合 ``logs`` ，用来存储不同环境和应用程序的日志。 "
"这个 ``logs`` 集合里面的文档例子："


# 63d089aadd5f48b5ad69038e0340a45f
#: ../source/core/data-model-operations.txt:152
msgid ""
"Generally, having a large number of collections has no significant "
"performance penalty and results in very good performance. Distinct "
"collections are very important for high-throughput batch processing."
msgstr ""
"一般来说，很大的集合数量对性能没有什么影响，反而在某些场景下有不错的性能。"
"使用不同的集合在高并发批处理场景下会有很好的帮助。"

# e8b2797d0de1439da9b0f34876fe96e6
#: ../source/core/data-model-operations.txt:156
msgid ""
"When using models that have a large number of collections, consider the "
"following behaviors:"
msgstr ""
"当使用有大量集合的数据模型时，请注意一下几点："

# 1413106c08a04db18c322077985311af
#: ../source/core/data-model-operations.txt:159
msgid "Each collection has a certain minimum overhead of a few kilobytes."
msgstr "每一个集合有几个KB的额外开销。"

# 00f7f72745a642e78d8f4d28b33d7c1c
#: ../source/core/data-model-operations.txt:161
msgid ""
"Each index, including the index on ``_id``, requires at least 8KB of data "
"space."
msgstr "每一个索引，包括默认的 ``_id`` 索引, 需要至少8KB的空间。"

# ea25c6ecc5bd4333a869258996532cba
#: ../source/core/data-model-operations.txt:164
msgid ""
"For each :term:`database`, a single namespace file (i.e. ``<database>.ns``) "
"stores all meta-data for that database, and each index and collection has "
"its own entry in the namespace file. MongoDB places :limit:`limits on the "
"size of namespace files <Size of Namespace File>`."
msgstr ""
"每一个MongoDB的 :term:`database` 有一个且仅一个命名文件（namespace file）(i.e. ``<database>.ns``) 。"
"这个命名文件保存了数据库的所有元数据。每个索引和集合在这个文件里都有一条记录。"
"这个文件的大小是有限制的，具体信息请参见： :limit:` 命名文件大小限制 <Size of Namespace File>`。"

# e500fa36f29e4b1ea21913ba396a8b18
#: ../source/core/data-model-operations.txt:170
msgid ""
"MongoDB has :limit:`limits on the number of namespaces <Number of "
"Namespaces>`. You may wish to know the current number of namespaces in order"
" to determine how many additional namespaces the database can support. To "
"get the current number of namespaces, run the following in the "
":program:`mongo` shell:"
msgstr ""
"MongoDB 的命名文件有大小的限制：  :limit:`limits on the number of namespaces <Number of "
"Namespaces>`。 你可能希望知道当前命名文件的限制 - 你可以通过在"
" :program:`mongo` shell: 下面执行下述命令："

# b22716f4be444370aceb2d8589eb5f69
#: ../source/core/data-model-operations.txt:182
msgid ""
"The limit on the number of namespaces depend on the ``<database>.ns`` size. "
"The namespace file defaults to 16 MB."
msgstr ""
"一个命名文件中可以容纳的命名记录数取决于命名文件 ``<database>.ns`` 文件的大小。 "
"命名文件默认的大小限制是16 MB。"

# ae287cd6e7574ec885ec1c2c8c102de7
#: ../source/core/data-model-operations.txt:185
msgid ""
"To change the size of the *new* namespace file, start the server with the "
"option :option:`--nssize \\<new size MB\\> <--nssize>`. For existing "
"databases, after starting up the server with :option:`--nssize`, run the "
":method:`db.repairDatabase()` command from the :program:`mongo` shell. For "
"impacts and considerations on running :method:`db.repairDatabase()`, see "
":dbcommand:`repairDatabase`."
msgstr ""
"若要指定  *新的* 命名文件的大小，使用下述参数启动 mongod: "
" :option:`--nssize \\<new size MB\\> <--nssize>`。对于已有的数据库， 可以"
"在使用参数 :option:`--nssize` 启动之后， 再在 :program:`mongo` 下面运行命令"
" :method:`db.repairDatabase()` 。 运行 :method:`db.repairDatabase()` 的时候"
"有一些注意事项，详情请参见 :dbcommand:`repairDatabase` 。"

# f1194abdcdad498095a4f9a9fcd266cf
#: ../source/core/data-model-operations.txt:194
msgid "Data Lifecycle Management"
msgstr "数据的生命周期"

# 853f694f41c7479b9acaa1f9a43d1527
#: ../source/core/data-model-operations.txt:196
msgid ""
"Data modeling decisions should take data lifecycle management into "
"consideration."
msgstr ""
"在做数据建模方面的决定时我们也需要考虑数据的生命周期。"

# 845eba8d052c475faca7a7ea53b526e0
#: ../source/core/data-model-operations.txt:199
msgid ""
"MongoDB :doc:`Time to Live or TTL feature </tutorial/expire-data>` of "
"collections expires documents after a period of time. Consider using the TTL"
" feature if your application requires some data to persist in the database "
"for a limited period of time."
msgstr ""
"MongoDB集合的 :doc:`Time to Live or TTL feature </tutorial/expire-data>` 功能 "
"可以用来自动删除一些有效期到期的数据。 如果你的应用程序中有这样一些数据，他们只需要在"
"数据库中保留一段时间，比如说几个小时或者几天，那么你可以考虑采用 TTL 功能来实现这一点。"

# 3961ee91cb3849e694ef634be25d2725
#: ../source/core/data-model-operations.txt:204
msgid ""
"Additionally, if your application only uses recently inserted documents, "
"consider :doc:`/core/capped-collections`. Capped collections provide *first-"
"in-first-out* (FIFO) management of inserted documents and efficiently "
"support operations that insert and read documents based on insertion order."
msgstr ""
"另外，如果你的应用程序只需要使用最近一段时间插入的文档，你也可以考虑使用 ``封顶集合`` "
" (:doc:`/core/capped-collections`)。 封顶集合采用先进先出 *first-"
"in-first-out* (FIFO) 的策略管理插入的文档。它对插入文档和按插入顺序读文档的操作"
"有非常好的支持。" 

#: ../source/core/data-model-operations.txt:25
msgid ""
"Some updates to documents can increase the size of documents. These updates "
"include pushing elements to an array (i.e. :update:`$push`) and adding new "
"fields to a document. If the document size exceeds the allocated space for "
"that document, MongoDB will relocate the document on disk. Relocating "
"documents takes longer than *in place updates* and can lead to fragmented "
"storage. Although MongoDB automatically :ref:`adds padding to document "
"allocations <record-allocation-strategies>` to minimize the likelihood of "
"relocation, data models should avoid document growth when possible."
msgstr ""
"有一些更新操作会导致文档的大小增加，例如添加元素到数组 (i.e. :update:`$push`) "
"以及在文档内添加新的字段等。 加入文档的大小超出原先分配给它的空间， MongoDB会把这个"
"文档迁移到硬盘的另外一个位置。迁移文档比 *原位更新* 要耗时，也会因此而导致磁盘的碎片问题。"
"虽然MongoDB会采取一些手段去尽可能防止这种迁移的发生，如在文档插入时候会对其"
" :ref:`额外分配填充空间 <record-allocation-strategies>`，"
"在做数据建模的时候还是要考虑尽可能做到减少文档的增长。"

#: ../source/core/data-model-operations.txt:146
msgid ""
"If the total number of documents is low, you may group documents into "
"collection by type. For logs, consider maintaining distinct log collections,"
" such as ``logs_dev`` and ``logs_debug``. The ``logs_dev`` collection would "
"contain only the documents related to the dev environment."
msgstr ""
"如果文档的总数不是很大，你可以把文档按类型进行分组。在日志这个应用场景，不同的环境可以"
"考虑使用不同的集合，如 ``logs_dev`` 及 ``logs_debug`` 等。 其中 ``logs_dev`` 集合"
"包含所有dev环境中的文档。"

#~ msgid ""
#~ "Some updates to documents can increase the size of documents. These updates "
#~ "include pushing elements to an array (i.e. :update:`$push`) and adding new "
#~ "fields to a document. If the document size exceeds the allocated space for "
#~ "that document, MongoDB will relocate the document on disk. Relocating "
#~ "documents takes longer than *in place updates* and can lead to fragmented "
#~ "storage. Although MongoDB automatically :ref:`adds padding to document "
#~ "allocations <record-allocation-stratgies>` to minimize the likelihood of "
#~ "relocation, data models should avoid document growth when possible."
#~ msgstr ""

#~ msgid ""
#~ "If the total number of documents is low, you may group documents into "
#~ "collection by type. For logs, consider maintaining distinct log collections,"
#~ " such as ``logs.dev`` and ``logs.debug``. The ``logs.dev`` collection would "
#~ "contain only the documents related to the dev environment."
#~ msgstr ""
