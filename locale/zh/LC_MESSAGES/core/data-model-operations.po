#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 12:02-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# a4b532c021da4685b82b3e3a510df909
#: ../source/core/data-model-operations.txt:3
msgid "Operational Factors and Data Models"
msgstr "MongoDB特性和数据模型的关系"

# 0e8b6bd12cae4edcb83322e2f9e88fc6
#: ../source/core/data-model-operations.txt
msgid "On this page"
msgstr ""

# a84bdef6dd8c4920b7497c57c5c791c6
#: ../source/core/data-model-operations.txt:13
msgid ""
"Modeling application data for MongoDB depends on both the data itself, as"
" well as the characteristics of MongoDB itself. For example, different "
"data models may allow applications to use more efficient queries, "
"increase the throughput of insert and update operations, or distribute "
"activity to a sharded cluster more effectively."
msgstr ""
"MongoDB的数据建模不仅仅取决于应用程序的数据需求，也需要考虑到MongoDB本身的一些特性。"
"例如，有些数据模型可以让查询更加有效，有些可以增加插入或更新的并发量，有些则可以更有效"
"地把事务均衡到各个分片服务器上。"


# 9cb2c3b773e043a4b620493a782e69ef
#: ../source/core/data-model-operations.txt:19
msgid ""
"These factors are *operational* or address requirements that arise "
"outside of the application but impact the performance of MongoDB based "
"applications. When developing a data model, analyze all of your "
"application's :doc:`read and write operations </crud>` in conjunction "
"with the following considerations."
msgstr ""

# 81a3c5a9bca14edaaae53664aa618e53
#: ../source/core/data-model-operations.txt:28

msgid "Document Growth"
msgstr "文档增长性"

# 33e89bfff3844380a2959c84cb42d8bc
#: ../source/core/data-model-operations.txt:32
msgid ""
"Some updates to documents can increase the size of documents. These "
"updates include pushing elements to an array (i.e. :update:`$push`) and "
"adding new fields to a document."
msgstr ""

# 7373eac407024b29850bae983bd9ec5b
#: ../source/core/data-model-operations.txt:36
msgid ""
"When using the MMAPv1 storage engine, document growth can be a "
"consideration for your data model. For MMAPv1, if the document size "
"exceeds the allocated space for that document, MongoDB will relocate the "
"document on disk. With MongoDB 3.0.0, however, the default use of the "
":ref:`power-of-2-allocation` minimizes the occurrences of such re-"
"allocations as well as allows for the effective reuse of the freed record"
" space."
msgstr ""
"举例来说，如果你的程序的更新操作会导致文档大小增加，那么你可能要重新设计下数据模型，"
"在不同文档之间使用引用的方式而非内嵌、冗余的数据结构。"

# 2da32d42f48a46fc93892d0e5e4eb5fe
#: ../source/core/data-model-operations.txt:44
msgid ""
"When using MMAPv1, if your applications require updates that will "
"frequently cause document growth to exceeds the current power of 2 "
"allocation, you may want to refactor your data model to use references "
"between data in distinct documents rather than a denormalized data model."
msgstr ""
"MongoDB会自动调整空白填充的大小以尽可能的减小文档迁移。你也可以使用一个"
" *预分配* 策略来防止文档的增长。 具体关于使用 *预分配* 来处理文档增长的例子可以参见"
" :ecosystem:`预聚合报表案例  </use-cases/pre-aggregated-reports>` "

# 785f4c90aed548929c9adf494ae22f7f
#: ../source/core/data-model-operations.txt:50
msgid ""
"You may also use a *pre-allocation* strategy to explicitly avoid document"
" growth. Refer to the :ecosystem:`Pre-Aggregated Reports Use Case </use-"
"cases/pre-aggregated-reports>` for an example of the *pre-allocation* "
"approach to handling document growth."
msgstr ""

# 23589687372a405fbe3b8f658fe0ff6d
#: ../source/core/data-model-operations.txt:55
msgid "See :doc:`/core/mmapv1` for more information on MMAPv1."
msgstr ""

# 21761be2d8d94a6fb2fb2fe95a29483f
#: ../source/core/data-model-operations.txt:61

msgid "Atomicity"
msgstr "原子性"

# fbbeda34a8304b77a14c88d57f486930
#: ../source/core/data-model-operations.txt:63
msgid ""
"In MongoDB, operations are atomic at the :term:`document` level. No "
"**single** write operation can change more than one document. Operations "
"that modify more than a single document in a collection still operate on "
"one document at a time. [#record-atomicity]_ Ensure that your application"
" stores all fields with atomic dependency requirements in the same "
"document. If the application can tolerate non-atomic updates for two "
"pieces of data, you can store these data in separate documents."
msgstr ""
"在MongoDB里面，所有操作在 :term:`document` 级别具有原子性. 一个 "
"**单个** 写操作最多只可以修改一个文档。 即使是一个会改变同一个集合中多个文档的命令，"
"在同一时间也只会操作一个文档。 [#record-atomicity]_ 尽可能保证那些需要在一个原子操作内"
"进行修改的字段定义在同一个文档里面。如果你的应用程序允许对两个数据的非原子性更新操作，"
"那么可以把这些数据定义在不同的文档内。"

# e2b49318adf84798a04eee3b2f0ac995
#: ../source/core/data-model-operations.txt:72
msgid ""
"A data model that embeds related data in a single document facilitates "
"these kinds of atomic operations. For data models that store references "
"between related pieces of data, the application must issue separate read "
"and write operations to retrieve and modify these related pieces of data."
msgstr ""
"把相关数据定义到同一个文档里面的内嵌方式有利于这种原子性操作。对于那些使用引用来关联"
"相关数据的数据模型，应用程序必须再用额外的读和写的操作去取回和修改相关的数据。"


# ca428b02f4854a148410439b65b82a4b
#: ../source/core/data-model-operations.txt:78
msgid ""
"See :ref:`data-modeling-atomic-operation` for an example data model that "
"provides atomic updates for a single document."
msgstr ""
"关于原子性操作更新单个文档的例子，参见 :ref:`data-modeling-atomic-operation`。 "

# 9a4ea48a08ee476291d16b73f51c5872
#: ../source/core/data-model-operations.txt:81
msgid ""
"Document-level atomic operations include all operations within a single "
"MongoDB document record: operations that affect multiple embedded "
"documents within that single record are still atomic."
msgstr ""
"文档级原子性操作包含所有针对于一个文档的操作： 即便是涉及到多个子文档的多个操作，只要是"
"在同一个文档之内，这些操作仍旧是有原子性的。"

# 021ab0c6a4974dfbb9daa65227145858
#: ../source/core/data-model-operations.txt:87
msgid "Sharding"
msgstr "分片"

# a5c61edd9e364f4aba83905a812b3e6a
#: ../source/core/data-model-operations.txt:89
msgid ""
"MongoDB uses :term:`sharding` to provide horizontal scaling. These "
"clusters support deployments with large data sets and high-throughput "
"operations. Sharding allows users to :term:`partition <data partition>` a"
" :term:`collection` within a database to distribute the collection's "
"documents across a number of :program:`mongod` instances or :term:`shards"
" <shard>`."
msgstr ""
"MongoDB 使用 :term:`sharding` （分片）来实现水平扩展。使用分片的集群可以支持海量的数据"
"和高并发读写。用户可以使用分片技术把一个数据库内的某一个集合的数据进行分区，从而达到把数据"
"分布到多个 :program:`mongod` 实例（或分片上）的目的。"

# ec756bc3da724e128c6f7f8364977445
#: ../source/core/data-model-operations.txt:96
msgid ""
"To distribute data and application traffic in a sharded collection, "
"MongoDB uses the :ref:`shard key <shard-key>`. Selecting the proper "
":ref:`shard key <shard-key>` has significant implications for "
"performance, and can enable or prevent query isolation and increased "
"write capacity. It is important to consider carefully the field or fields"
" to use as the shard key."
msgstr ""
"Mongodb 依据 :ref:`分片键 <shard-key>` 分发数据和应用程序的事务请求。 选择一个合适的"
"分片键会对性能有很大的影响，也会促进或者阻碍MongoDB的定向分片查询和增强的写性能。"
"所以在选择分片键时候要仔细考量分片键所用的字段。"

# d029a686e6e14d6583abb9a6872e9c76
#: ../source/core/data-model-operations.txt:103
msgid ""
"See :doc:`/sharding` and :doc:`/core/sharding-shard-key` for more "
"information."
msgstr ""
"更多信息请参见 :doc:`/core/sharding-introduction` 及 :doc:`/core/sharding-shard-key`"

# 1ddda084674b43c39d71293bc4f2a363
#: ../source/core/data-model-operations.txt:109
msgid "Indexes"
msgstr "索引"

# b10e59d57fde49fdbec75ae2b4ff7b4d
#: ../source/core/data-model-operations.txt:111
msgid ""
"Use indexes to improve performance for common queries. Build indexes on "
"fields that appear often in queries and for all operations that return "
"sorted results. MongoDB automatically creates a unique index on the "
"``_id`` field."
msgstr ""
"对常用操作可以使用索引来提高性能。对查询条件中常见的字段，以及需要排序的字段创建索引。"
"MongoDB会对 ``_id`` 字段自动创建唯一索引。"

# 6539c78b02914ae5bb31642a3f371af7
#: ../source/core/data-model-operations.txt:116
msgid "As you create indexes, consider the following behaviors of indexes:"
msgstr "创建索引时，需要考虑索引的下述特征："


# 4c0d9311838447c88c297a7f3813e104
#: ../source/core/data-model-operations.txt:118
msgid "Each index requires at least 8 kB of data space."
msgstr ""

# 40a93831a93f48b3a3b26ed179d992c2
#: ../source/core/data-model-operations.txt:120

msgid ""
"Adding an index has some negative performance impact for write "
"operations. For collections with high write-to-read ratio, indexes are "
"expensive since each insert must also update any indexes."
msgstr ""
"每增加一个索引，就会对写操作性能有一些影响。对于一个写多读少的集合，索引会变得很费时"
"因为每个插入必须要更新所有索引。"

# 2d3c5999cbab43e393991239346fb9a4
#: ../source/core/data-model-operations.txt:124
msgid ""
"Collections with high read-to-write ratio often benefit from additional "
"indexes. Indexes do not affect un-indexed read operations."
msgstr ""
"每增加一个索引，就会对写操作性能有一些影响。对于一个写多读少的集合，索引会变得很费时"
"因为每个插入必须要更新所有索引。"

# d24d6334443d464199c862b2690ec0cd
#: ../source/core/data-model-operations.txt:127
msgid ""
"When active, each index consumes disk space and memory. This usage can be"
" significant and should be tracked for capacity planning, especially for "
"concerns over working set size."
msgstr ""
"每个索引都会占一定的硬盘空间和内存（对于活跃的索引）。索引有可能会用到很多这样的资源，"
"因此对这些资源要进行管理和规划，特别是在计算热点数据大小的时候。" 

# c6a184c53cf048cbbb298e19e98ee6bd
#: ../source/core/data-model-operations.txt:131
msgid ""
"See :doc:`/applications/indexes` for more information on indexes as well "
"as :doc:`/tutorial/analyze-query-plan/`. Additionally, the MongoDB "
":doc:`database profiler </tutorial/manage-the-database-profiler>` may "
"help identify inefficient queries."
msgstr ""
"关于索引的更多信息请参见  :doc:`/applications/indexes` 以及 "
":doc:`/tutorial/analyze-query-plan/`。另外， MongoDB的 "
":doc:`database profiler </tutorial/manage-the-database-profiler>` 可以帮你"
"找出一些使用索引不当而导致低效的查询。"


# 0c5e823f66ef4c6885e96e01a1fcbf61
#: ../source/core/data-model-operations.txt:139
msgid "Large Number of Collections"
msgstr "集合的数量"

# bcf88e6ef9e148ff806cee1c8379d4a2
#: ../source/core/data-model-operations.txt:141
msgid ""
"In certain situations, you might choose to store related information in "
"several collections rather than in a single collection."
msgstr ""
"在某些情况下，你可能会考虑把相关的数据保存到多个而不是一个集合里面。" 

# 97c37ceae4264edc88dc84eab6205555
#: ../source/core/data-model-operations.txt:144
msgid ""
"Consider a sample collection ``logs`` that stores log documents for "
"various environment and applications. The ``logs`` collection contains "
"documents of the following form:"
msgstr ""
"我们来看一个样本集合 ``logs`` ，用来存储不同环境和应用程序的日志。 "
"这个 ``logs`` 集合里面的文档例子："


# cd29daf1b7fb4cfda79212bec734cb53
#: ../source/core/data-model-operations.txt:153
msgid ""
"If the total number of documents is low, you may group documents into "
"collection by type. For logs, consider maintaining distinct log "
"collections, such as ``logs_dev`` and ``logs_debug``. The ``logs_dev`` "
"collection would contain only the documents related to the dev "
"environment."
msgstr ""

# 926dcb5af6a9487c814659849eb8ebbb
#: ../source/core/data-model-operations.txt:159
msgid ""
"Generally, having a large number of collections has no significant "
"performance penalty and results in very good performance. Distinct "
"collections are very important for high-throughput batch processing."
msgstr ""
"一般来说，很大的集合数量对性能没有什么影响，反而在某些场景下有不错的性能。"
"使用不同的集合在高并发批处理场景下会有很好的帮助。"

# 8aba6a0896774951908ee1cba5872485
#: ../source/core/data-model-operations.txt:163
msgid ""
"When using models that have a large number of collections, consider the "
"following behaviors:"
msgstr ""
"当使用有大量集合的数据模型时，请注意一下几点："

# e5ba7d26818e4e8095c291566e44b714
#: ../source/core/data-model-operations.txt:166
msgid "Each collection has a certain minimum overhead of a few kilobytes."
msgstr "每一个集合有几个KB的额外开销。"


# 05ea2044bdb4483c913e2cfc6efb7c94
#: ../source/core/data-model-operations.txt:168
msgid ""
"Each index, including the index on ``_id``, requires at least 8 kB of "
"data space."
msgstr ""

# 96022a6fbcb04f77ada67b6c9cbc2921
#: ../source/core/data-model-operations.txt:171

msgid ""
"For each :term:`database`, a single namespace file (i.e. "
"``<database>.ns``) stores all meta-data for that database, and each index"
" and collection has its own entry in the namespace file. MongoDB places "
":limit:`limits on the size of namespace files <Size of Namespace File>`."
msgstr ""
"每一个MongoDB的 :term:`database` 有一个且仅一个命名文件（namespace file）(i.e. ``<database>.ns``) 。"
"这个命名文件保存了数据库的所有元数据。每个索引和集合在这个文件里都有一条记录。"
"这个文件的大小是有限制的，具体信息请参见： :limit:` 命名文件大小限制 <Size of Namespace File>`。"

# aeaec9365b57497ab90d10c9adb788c7
#: ../source/core/data-model-operations.txt:177
msgid ""
"MongoDB using the ``mmapv1`` storage engine has :limit:`limits on the "
"number of namespaces <Number of Namespaces>`. You may wish to know the "
"current number of namespaces in order to determine how many additional "
"namespaces the database can support. To get the current number of "
"namespaces, run the following in the :program:`mongo` shell:"
msgstr ""
"MongoDB 的命名文件有大小的限制：  :limit:`limits on the number of namespaces <Number of "
"Namespaces>`。 你可能希望知道当前命名文件的限制 - 你可以通过在"
" :program:`mongo` shell: 下面执行下述命令："

# 8926f18437e743088ee6e06b478f9b1f
#: ../source/core/data-model-operations.txt:188
msgid ""
"The limit on the number of namespaces depend on the ``<database>.ns`` "
"size. The namespace file defaults to 16 MB."
msgstr ""
"一个命名文件中可以容纳的命名记录数取决于命名文件 ``<database>.ns`` 文件的大小。 "
"命名文件默认的大小限制是16 MB。"

# d9ddc8cd172245f5ba5644c4816f5e2f
#: ../source/core/data-model-operations.txt:191
msgid ""
"To change the size of the *new* namespace file, start the server with the"
" option :option:`--nssize \\<new size MB\\> <--nssize>`. For existing "
"databases, after starting up the server with :option:`--nssize`, run the "
":method:`db.repairDatabase()` command from the :program:`mongo` shell. "
"For impacts and considerations on running :method:`db.repairDatabase()`, "
"see :dbcommand:`repairDatabase`."
msgstr ""

# 5d267827fd6843c3b67b0e7b0a2ccac4
#: ../source/core/data-model-operations.txt:202
msgid "Collection Contains Large Number of Small Documents"
msgstr ""

# 819edbf10a9d4f9c8531ed4eebd56b9c
#: ../source/core/data-model-operations.txt:204
msgid ""
"You should consider embedding for performance reasons if you have a "
"collection with a large number of small documents. If you can group these"
" small documents by some logical relationship *and* you frequently "
"retrieve the documents by this grouping, you might consider \"rolling-"
"up\" the small documents into larger documents that contain an array of "
"embedded documents."
msgstr ""

# bb848b991f094b0da20ae7c6efcbc53a
#: ../source/core/data-model-operations.txt:211
msgid ""
"\"Rolling up\" these small documents into logical groupings means that "
"queries to retrieve a group of documents involve sequential reads and "
"fewer random disk accesses. Additionally, \"rolling up\" documents and "
"moving common fields to the larger document benefit the index on these "
"fields. There would be fewer copies of the common fields *and* there "
"would be fewer associated key entries in the corresponding index. See "
":doc:`/indexes` for more information on indexes."
msgstr ""

# 6bbe0a370c96489295d1fbd4a69f740e
#: ../source/core/data-model-operations.txt:219
msgid ""
"However, if you often only need to retrieve a subset of the documents "
"within the group, then \"rolling-up\" the documents may not provide "
"better performance. Furthermore, if small, separate documents represent "
"the natural model for the data, you should maintain that model."
msgstr ""

# d3154606e66c46cdba53466392fe26f4
#: ../source/core/data-model-operations.txt:227
msgid "Storage Optimization for Small Documents"
msgstr ""

# 1fda389bd1a245979461aa96a8375220
#: ../source/core/data-model-operations.txt:229
msgid ""
"Each MongoDB document contains a certain amount of overhead. This "
"overhead is normally insignificant but becomes significant if all "
"documents are just a few bytes, as might be the case if the documents in "
"your collection only have one or two fields."
msgstr ""

# 1e3a61d7e6b04d88a30cf74b945bc4ee
#: ../source/core/data-model-operations.txt:234
msgid ""
"Consider the following suggestions and strategies for optimizing storage "
"utilization for these collections:"
msgstr ""

# 83a12ada84f448a2903fc9ff8706b1e8
#: ../source/core/data-model-operations.txt:237
msgid "Use the ``_id`` field explicitly."
msgstr ""

# d0a0b48b6fc642e08bffb3ef2a03b5e2
#: ../source/core/data-model-operations.txt:239
msgid ""
"MongoDB clients automatically add an ``_id`` field to each document and "
"generate a unique 12-byte :term:`ObjectId` for the ``_id`` field. "
"Furthermore, MongoDB always indexes the ``_id`` field. For smaller "
"documents this may account for a significant amount of space."
msgstr ""

# 53467be44e0f4986a517a00a7ac0c228
#: ../source/core/data-model-operations.txt:245
msgid ""
"To optimize storage use, users can specify a value for the ``_id`` field "
"explicitly when inserting documents into the collection. This strategy "
"allows applications to store a value in the ``_id`` field that would have"
" occupied space in another portion of the document."
msgstr ""

# cc8ab59f0bba48d19735dffe834e6972
#: ../source/core/data-model-operations.txt:250
msgid ""
"You can store any value in the ``_id`` field, but because this value "
"serves as a primary key for documents in the collection, it must uniquely"
" identify them. If the field's value is not unique, then it cannot serve "
"as a primary key as there would be collisions in the collection."
msgstr ""

# 68622cde98b94b9cbae77cf140abb0fc
#: ../source/core/data-model-operations.txt:256
msgid "Use shorter field names."
msgstr ""

# 6239af983c1a4ce6a485ca31b15607e7
#: ../source/core/data-model-operations.txt:260
msgid ""
"Shortening field names reduces expressiveness and does not provide "
"considerable benefit for larger documents and where document overhead is "
"not of significant concern. Shorter field names do not reduce the size of"
" indexes, because indexes have a predefined structure."
msgstr ""

# 4ea49eb72ade4094822f305eda02a2cd
#: ../source/core/data-model-operations.txt:266
msgid "In general, it is not necessary to use short field names."
msgstr ""

# 43b13967c6cc475a9fdceaa64d82357f
#: ../source/core/data-model-operations.txt:268
msgid ""
"MongoDB stores all field names in every document. For most documents, "
"this represents a small fraction of the space used by a document; "
"however, for small documents the field names may represent a "
"proportionally large amount of space. Consider a collection of small "
"documents that resemble the following:"
msgstr ""

# 10ddab27a41e4de8920688b984f13217
#: ../source/core/data-model-operations.txt:278
msgid ""
"If you shorten the field named ``last_name`` to ``lname`` and the field "
"named ``best_score`` to ``score``, as follows, you could save 9 bytes per"
" document."
msgstr ""

# 2f776d9932f34c7da06d81891c58796d
#: ../source/core/data-model-operations.txt:286
msgid "Embed documents."
msgstr ""

# 5f9c7727402e414dbad0f459dad39a43
#: ../source/core/data-model-operations.txt:288
msgid ""
"In some cases you may want to embed documents in other documents and save"
" on the per-document overhead. See :ref:`faq-developers-embed-documents`."
msgstr ""

# cc2135ad0587491fb61a90f87399a8ee
#: ../source/core/data-model-operations.txt:293
msgid "Data Lifecycle Management"
msgstr ""

# 9c26f6baa578401793202a26231b428b
#: ../source/core/data-model-operations.txt:295
msgid ""
"Data modeling decisions should take data lifecycle management into "
"consideration."
msgstr ""

# 464ddd3b453d410697b72aaec2150bc7
#: ../source/core/data-model-operations.txt:298
msgid ""
"The :doc:`Time to Live or TTL feature </tutorial/expire-data>` of "
"collections expires documents after a period of time. Consider using the "
"TTL feature if your application requires some data to persist in the "
"database for a limited period of time."
msgstr ""

# bcb2216e25534b658620b9f6e693f103
#: ../source/core/data-model-operations.txt:303
msgid ""
"Additionally, if your application only uses recently inserted documents, "
"consider :doc:`/core/capped-collections`. Capped collections provide "
"*first-in-first-out* (FIFO) management of inserted documents and "
"efficiently support operations that insert and read documents based on "
"insertion order."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Each index requires at least 8KB of data space."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB uses :term:`sharding` to provide "
#~ "horizontal scaling. These clusters support "
#~ "deployments with large data sets and "
#~ "high-throughput operations. Sharding allows"
#~ " users to :term:`partition` a "
#~ ":term:`collection` within a database to "
#~ "distribute the collection's documents across"
#~ " a number of :program:`mongod` instances"
#~ " or :term:`shards <shard>`."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`/core/sharding-introduction` and "
#~ ":doc:`/core/sharding-shard-key` for more "
#~ "information."
#~ msgstr ""

