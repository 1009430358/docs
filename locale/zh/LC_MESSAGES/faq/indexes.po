#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: 2015-11-27 23:19+0800\n"
"Last-Translator: cwfan <run_fan@qq.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Language: zh_CN\n"
"X-Generator: Poedit 1.8.6\n"
"Language-Team: \n"

#: ../source/faq/indexes.txt:3
msgid "FAQ: Indexes"
msgstr "FAQ:索引"

#: ../source/faq/indexes.txt:7
msgid "This document addresses common questions regarding MongoDB indexes."
msgstr "本文是MongoDB索引常见问题的介绍。"

#: ../source/faq/indexes.txt:9
msgid ""
"If you don't find the answer you're looking for, check the :doc:`complete "
"list of FAQs </faq>` or post your question to the `MongoDB User Mailing "
"List <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_. "
"See also :doc:`/administration/indexes`."
msgstr ""
"如果没有找到你想要的答案，请查看 :doc:`complete list of FAQs </faq>` 或者把"
"你的问题提交到 `MongoDB User Mailing List <https://groups.google.com/forum/?"
"fromgroups#!forum/mongodb-user>`_ 。 也可以参考 :doc:`/administration/"
"indexes` 。"

#: ../source/faq/indexes.txt:15
msgid "Should you run ``ensureIndex()`` after every insert?"
msgstr "是否需要在每次写入数据后都运行 ``ensureIndex()`` ？"

#: ../source/faq/indexes.txt:17
msgid ""
"No. You only need to create an index once for a single collection. After "
"initial creation, MongoDB automatically updates the index as data changes."
msgstr ""
"不需要，对于单个集合你只需要创建一次索引。在创建完成后，MongoDB会随着数据改"
"变而自动更新索引。"

#: ../source/faq/indexes.txt:21
msgid ""
"While running :method:`~db.collection.ensureIndex()` is usually ok, if an "
"index doesn't exist because of ongoing administrative work, a call to :"
"method:`~db.collection.ensureIndex()` may disrupt database availability. "
"Running :method:`~db.collection.ensureIndex()` can render a replica set "
"inaccessible as the index creation is happening. See :ref:`index-building-"
"replica-sets`."
msgstr ""
"尽管通常情况下执行 :method:`~db.collection.ensureIndex()` 是没有问题的，但是"
"如果一个索引因为持续运行的后台管理工作而没有生成, 这时如果调用 :method:`~db."
"collection.ensureIndex()` 将破坏数据库的可用性。运行命令 :method:`~db."
"collection.ensureIndex()` 创建索引期间复制集会无法读写。 参见 :ref:`index-"
"building-replica-sets` 。"

#: ../source/faq/indexes.txt:29
msgid "How do you know what indexes exist in a collection?"
msgstr "如何查看集合中已存在哪些索引？"

#: ../source/faq/indexes.txt:31
msgid ""
"To list a collection's indexes, use the :method:`db.collection."
"getIndexes()` method or a similar :api:`method for your driver <>`."
msgstr ""
"使用 :method:`db.collection.getIndexes()` 方法或你所使用的驱动上的类似 :api:"
"`method for your driver <>`  可以列出一个集合上的已创建的所有索引。"

#: ../source/faq/indexes.txt:36
msgid "How do you determine the size of an index?"
msgstr "你要如何确定索引的大小？"

#: ../source/faq/indexes.txt:38
msgid ""
"To check the sizes of the indexes on a collection, use :method:`db."
"collection.stats()`."
msgstr ""
"使用命令 :method:`db.collection.stats()` 可以检查集合上的索引所占空间大小。"

#: ../source/faq/indexes.txt:43
msgid "What happens if an index does not fit into RAM?"
msgstr "如果索引不能被装载到内存空间会发生什么？"

#: ../source/faq/indexes.txt:45
msgid ""
"When an index is too large to fit into RAM, MongoDB must read the index "
"from disk, which is a much slower operation than reading from RAM. Keep in "
"mind an index fits into RAM when your server has RAM available for the "
"index combined with the rest of the :term:`working set`."
msgstr ""
"如果索引所占存储空间过大而不能被加载到内存中，MongoDB必须从硬盘读取索引，而"
"硬盘读取索引要远比从内存读取慢得多。注意，索引匹配内存是指你的服务器对索引和"
"其它工作集的组合有足够的可用内存空间 :term:`working set` "

#: ../source/faq/indexes.txt:50
msgid ""
"In certain cases, an index does not need to fit *entirely* into RAM. For "
"details, see :ref:`indexing-right-handed`."
msgstr ""
"在某些情况下，索引不必 *完全* 加载到RAM，详细内容参见 :ref:`indexing-right-"
"handed` 。"

#: ../source/faq/indexes.txt:56
msgid "How do you know what index a query used?"
msgstr "如何知道一次查询使用了哪个索引？"

#: ../source/faq/indexes.txt:58
msgid ""
"To inspect how MongoDB processes a query, use the :method:`~cursor."
"explain()` method in the :program:`mongo` shell, or in your application "
"driver."
msgstr ""
"要观察MongoDB是如何处理查询，在 :program:`mongo` shell或在你使用的应用驱动中"
"调用 :method:`~cursor.explain()` 。"

#: ../source/faq/indexes.txt:63
msgid "How do you determine what fields to index?"
msgstr "如何确定在哪些字段上建立索引？"

#: ../source/faq/indexes.txt:65
msgid ""
"A number of factors determine what fields to index, including :ref:"
"`selectivity <index-selectivity>`, fitting indexes into RAM, reusing "
"indexes in multiple queries when possible, and creating indexes that can "
"support all the fields in a given query. For detailed documentation on "
"choosing which fields to index, see :doc:`/administration/indexes`."
msgstr ""
"许多因素会决定你在哪些字段上建立索引，包括 :ref:`selectivity <index-"
"selectivity>` ,内存适配，尽可能地在多个查询中重用索引，和支持给定查询中的所"
"有字段。更详细的文档参见 :doc:`/administration/indexes` 。"

#: ../source/faq/indexes.txt:81
msgid "How do write operations affect indexes?"
msgstr "写操作是如何影响索引的？"

#: ../source/faq/indexes.txt:83
msgid ""
"Any write operation that alters an indexed field requires an update to the "
"index in addition to the document itself. If you update a document that "
"causes the document to grow beyond the allotted record size, then MongoDB "
"must update all indexes that include this document as part of the update "
"operation."
msgstr ""
"任何改变索引中字段的写操作都会既修改文档本身也更新索引。如果你对文档的更新操"
"作导致文档大小超出了已分配的记录大小，那么MongoDB不仅会修改这个文档，还会更"
"新所有的索引。"

#: ../source/faq/indexes.txt:89
msgid ""
"Therefore, if your application is write-heavy, creating too many indexes "
"might affect performance."
msgstr "因此，如果你的程序写操作非常多，创建过多的索引可能会影响性能。"

#: ../source/faq/indexes.txt:93
msgid "Will building a large index affect database performance?"
msgstr "构建一个大型的索引会影响数据库的性能吗？"

#: ../source/faq/indexes.txt:95
msgid ""
"Building an index can be an IO-intensive operation, especially if you have "
"a large collection. This is true on any database system that supports "
"secondary indexes, including MySQL. If you need to build an index on a "
"large collection, consider building the index in the background. See :ref:"
"`index-creation-operations`."
msgstr ""
"建立索引是一个IO密集型操作,特别是当你的集合很大的时候。包括MySQL在内的所有支"
"持辅助索引的数据库系统都有这种情况。如果你需要在一个大集合上建立索引，可以考"
"虑在后台建立它。参考 :ref:`index-creation-operations` 。"

#: ../source/faq/indexes.txt:101
msgid ""
"If you build a large index without the background option, and if doing so "
"causes the database to stop responding, do one of the following:"
msgstr ""
"如果你创建一个大索引而且没有选择在后台运行，这时如果导致数据库没有响应，可以"
"按照如下方式解决："

#: ../source/faq/indexes.txt:105
msgid "Wait for the index to finish building."
msgstr "等待索引构建完成。"

#: ../source/faq/indexes.txt:107
msgid ""
"Kill the current operation (see :method:`db.killOp()`). The partial index "
"will be deleted."
msgstr "中断当前的操作(参见 :method:`db.killOp()` )，部分索引将被删除。"

#: ../source/faq/indexes.txt:113
msgid "Can I use index keys to constrain query matches?"
msgstr "我可以使用索引键约束查询匹配吗？"

#: ../source/faq/indexes.txt:115
msgid ""
"You can use the :method:`~cursor.min()` and :method:`~cursor.max()` methods "
"to constrain the results of the cursor returned from :method:`~db."
"collection.find()` by using index keys."
msgstr ""
"你可以使用 :method:`~cursor.min()` 和 :method:`~cursor.max()` 方法通过索引键"
"来限制 :method:`~db.collection.find()` 返回的游标的结果集。"

#: ../source/faq/indexes.txt:120
msgid "Using ``$ne`` and ``$nin`` in a query is slow. Why?"
msgstr "为什么使用 ``$ne`` 和 ``$nin`` 会导致查询很慢？"

#: ../source/faq/indexes.txt:122
msgid ""
"The :query:`$ne` and :query:`$nin` operators are not selective. See :ref:"
"`index-selectivity`. If you need to use these, it is often best to make "
"sure that an additional, more selective criterion is part of the query."
msgstr ""
" :query:`$ne` 和 :query:`$nin` 操作不是好的选择。 参见 :ref:`index-"
"selectivity` 。如果你需要使用它们，最好在查询语句中添加额外的更精挑细选的规"
"范。"

#: ../source/faq/indexes.txt:128
msgid "Can I use a multi-key index to support a query for a whole array?"
msgstr "我可以用一个多键索引来支持整个数组的查询？"

#: ../source/faq/indexes.txt:130
msgid ""
"Not entirely. The index can partially support these queries because it can "
"speed the selection of the first element of the array; however, comparing "
"all subsequent items in the array cannot use the index and must scan the "
"documents individually."
msgstr ""
"不完全可行。索引可以部分地支持这种查询，因为索引可以加快数组第一个元素的选"
"择，但是不能用索引去比较数组中所有后续的元素，只能通过单独地扫描文档来完成。"

#: ../source/faq/indexes.txt:136
msgid "How can I effectively use indexes strategy for attribute lookups?"
msgstr "我怎样才能有效地使用索引策略来查找属性？"

#: ../source/faq/indexes.txt:138
msgid ""
"For simple attribute lookups that don't require sorted result sets or range "
"queries, consider creating a field that contains an array of documents "
"where each document has a field (e.g. ``attrib`` ) that holds a specific "
"type of attribute. You can index this ``attrib`` field."
msgstr ""
"对于不需要对结果集进行排序的查询或范围查询，可以考虑创建一个字段，这个字段包"
"含一个由文档组成的数组，数组中每一个文档都有一个保存指定类型属性的字段(比如 "
"``attrib`` )。你可以索引 ``attrib`` 字段。"

#: ../source/faq/indexes.txt:144
msgid ""
"For example, the ``attrib`` field in the following document allows you to "
"add an unlimited number of attributes types:"
msgstr "例如，下面文档中的字段 ``attrib`` 允许你添加不限数量的属性类型："

#: ../source/faq/indexes.txt:158
msgid ""
"*Both* of the following queries could use the same ``{ \"attrib.k\": 1, "
"\"attrib.v\": 1 }`` index:"
msgstr ""
"下面的 *两个* 查询都可以使用同样的索引 ``{ \"attrib.k\": 1, \"attrib.v\": "
"1 }`` ："
