# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/faq/diagnostics.txt:5
msgid "FAQ: MongoDB Diagnostics"
msgstr "FAQ:MogoDB 诊断"

#: ../source/faq/diagnostics.txt:9
msgid ""
"This document provides answers to common diagnostic questions and issues."
msgstr ""
"这篇文档提供了MongoDB的常见诊断问题和答案。"

#: ../source/faq/diagnostics.txt:12
msgid ""
"If you don't find the answer you're looking for, check the :doc:`complete "
"list of FAQs </faq>` or post your question to the `MongoDB User Mailing List"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."
msgstr ""
"如果您在这里没有发现你寻找的答案, 请检查 :doc:`常见 "
"问题列表 </faq>` 或发布你的问题到 `MongoDB 用户邮件列表"
" <https://groups.google.com/forum/?fromgroups#!forum/mongodb-user>`_."

#: ../source/faq/diagnostics.txt:17
msgid ""
"Where can I find information about a ``mongod`` process that stopped running"
" unexpectedly?"
msgstr ""
"在哪里可以找到``mongod``服务进程意外停止的信息？"

#: ../source/faq/diagnostics.txt:19
msgid ""
"If :program:`mongod` shuts down unexpectedly on a UNIX or UNIX-based "
"platform, and if :program:`mongod` fails to log a shutdown or error message,"
" then check your system logs for messages pertaining to MongoDB. For "
"example, for logs located in ``/var/log/messages``, use the following "
"commands:"
msgstr ""
"如果出现 :program:`mongod` 在UNIX或者在基于UNIX的平台上意外停止,"
"或者出现 :program:`mongod` 日志关闭失败或错误信息,"
"请检查你的系统日志中关于 MongoDB 的信息。 "
"例如, 如果日志存储在 ``/var/log/messages``, 使用如下命令: "

#: ../source/faq/diagnostics.txt:33
msgid "Does TCP ``keepalive`` time affect sharded clusters and replica sets?"
msgstr ""
"TCP 的 ``keepalive`` 时间会影响分片集群和复制集吗?"

#: ../source/faq/diagnostics.txt:35
msgid ""
"If you experience socket errors between members of a sharded cluster or "
"replica set, that do not have other reasonable causes, check the TCP keep "
"alive value, which Linux systems store as the ``tcp_keepalive_time`` value. "
"A common keep alive period is ``7200`` seconds (2 hours); however, different"
" distributions and OS X may have different settings. For MongoDB, you will "
"have better experiences with shorter keepalive periods, on the order of "
"``300`` seconds (five minutes)."
msgstr ""
"如果你遇到在分片集群和复制集中的成员中的socket错误，并且没有其他合理的原因，"
"请检查TCP keepalive 的值，它在Linux系统中存储于 ``tcp_keepalive_time`` 值中。"
"常用的keep alive时间是 ``7200`` 秒 （2 小时）；然而，不同的分布和OS X可能有"
"不同的设置。对于MongoDB，设置比较短的keep alive周期会带来更好的体验，近似于"
" ``300`` 秒 （5 分钟）。"

#: ../source/faq/diagnostics.txt:43
msgid ""
"On Linux systems you can use the following operation to check the value of "
"``tcp_keepalive_time``:"
msgstr ""
"在Linux系统中你可以使用下面的命令检查``tcp_keepalive_time``的值："

#: ../source/faq/diagnostics.txt:50
msgid ""
"You can change the ``tcp_keepalive_time`` value with the following "
"operation:"
msgstr ""
"你可以使用下面的命令修改 ``tcp_keepalive_time`` 的值： "

#: ../source/faq/diagnostics.txt:57
msgid ""
"The new ``tcp_keepalive_time`` value takes effect without requiring you to "
"restart the :program:`mongod` or :program:`mongos` servers. When you reboot "
"or restart your system you will need to set the new ``tcp_keepalive_time`` "
"value, or see your operating system's documentation for setting the TCP "
"keepalive value persistently."
msgstr ""
"新设定的 ``tcp_keepalive_time`` 的值生效不需要你重新启动:program:`mongod` "
"或 :program:`mongos` 服务. 当你重启系统后，你需要重新设定``tcp_keepalive_time`` "
"的值，或者通过查看你的操作系统文档来永久的设定TCP keepalive值。"

#: ../source/faq/diagnostics.txt:63
msgid ""
"For OS X systems, issue the following command to view the keep alive "
"setting:"
msgstr ""
"在 OS X 系统中，使用下面的命令来查看 keep alive 的设置："

#: ../source/faq/diagnostics.txt:70
msgid "To set a shorter keep alive period use the following invocation:"
msgstr ""
"调用下面的命令来设置一个较短的keep alive周期："

#: ../source/faq/diagnostics.txt:76
msgid ""
"If your replica set or sharded cluster experiences keepalive-related issues,"
" you must alter the ``tcp_keepalive_time`` value on all machines hosting "
"MongoDB processes. This includes all machines hosting :program:`mongos` or "
":program:`mongod` servers."
msgstr ""
"如果你的复制集或者分片集群遇到了 keepalive 相关的问题，你必须修改所有运行"
" MongoDB 进程主机上 ``tcp_keepalive_time`` 的值。包含所有运行:program:`mongos` 或 "
":program:`mongod` 的主机。"

#: ../source/faq/diagnostics.txt:81
msgid ""
"Windows users should consider the `Windows Server Technet Article on "
"KeepAliveTime configuration <http://technet.microsoft.com/en-"
"us/library/dd349797.aspx#BKMK_2>`_ for more information on setting keep "
"alive for MongoDB deployments on Windows systems."
msgstr ""
"Windows 用户应该参考`Windows Server Technet Article on KeepAliveTime configuration "
"<http://technet.microsoft.com/en-us/library/dd349797.aspx#BKMK_2>`_ "
"以获得更多的关于keep alive的设定，以便于MongoDB在Windows系统上的开发。"

#: ../source/faq/diagnostics.txt:88
msgid "What tools are available for monitoring MongoDB?"
msgstr ""
"什么工具可以有效的监控MongoDB？"

#: ../source/faq/diagnostics.txt:90
msgid ""
"The `MongoDB Management Services <http://mms.mongodb.com>`_ includes "
"monitoring. MMS Monitoring is a free, hosted services for monitoring MongoDB"
" deployments. A full list of third-party tools is available as part of the "
":doc:`/administration/monitoring/` documentation. Also consider the `MMS "
"Documentation <http://mms.mongodb.com/help/>`_."
msgstr ""
"`MongoDB 管理服务 <http://mms.mongodb.com>`_ 包含了监控。MMS 监控是监控MongoDB"
"部署的免费托管服务。在 :doc:`/administration/monitoring/` 文档中有全部的第三方"
"工具列表。也可以参考 `MMS 文档 <http://mms.mongodb.com/help/> `_ 。"

#: ../source/faq/diagnostics.txt:99
msgid "Memory Diagnostics"
msgstr ""
"内存诊断"

#: ../source/faq/diagnostics.txt:102
msgid "Do I need to configure swap space?"
msgstr ""
"我需要配置 swap 分区吗？"

#: ../source/faq/diagnostics.txt:104
msgid ""
"Always configure systems to have swap space. Without swap, your system may "
"not be reliant in some situations with extreme memory constraints, memory "
"leaks, or multiple programs using the same memory.  Think of the swap space "
"as something like a steam release valve that allows the system to release "
"extra pressure without affecting the overall functioning of the system."
msgstr ""
"通常配置的系统都拥有swap分区。没有swap分区，你的系统可能在某些情况下不可靠，"
"比如极端内存约束、内存泄露、多程序使用同一内存。swap 分区有些像放气阀允许系统"
"释放额外的压力，而不会影响系统的整体性能。"

#: ../source/faq/diagnostics.txt:111
msgid ""
"Nevertheless, systems running MongoDB *do not* need swap for routine "
"operation. Database files are :ref:`memory-mapped <faq-storage-memory-"
"mapped-files>` and should constitute most of your MongoDB memory use. "
"Therefore, it is unlikely that :program:`mongod` will ever use any swap "
"space in normal operation. The operating system will release memory from the"
" memory mapped files without needing swap and MongoDB can write data to the "
"data files without needing the swap system."
msgstr ""
"不过，系统执行 MongoDB 的常规操作时 *不* 需要 swap 分区。数据库文件 "
":ref:`内存-映射 <faq-storage-memory-mapped-files>` 构成了大部分 MongoDB 的内存"
"使用。因此，:program:`mongod` 在常规操作中不太可能使用swap分区。操作系统将从内"
"存映射释放内存不需要swap，MongoDB 可以不通过swap系统向数据文件中写入数据。"


#: ../source/faq/diagnostics.txt:123
msgid "What is \"working set\" and how can I estimate its size?"
msgstr ""
"什么是\"工作集\"，如何评估她的大小？"

#: ../source/faq/diagnostics.txt:125
msgid ""
"The *working set* for a MongoDB database is the portion of your data that "
"clients access most often. You can estimate size of the working set, using "
"the :data:`~serverStatus.workingSet` document in the output of "
":dbcommand:`serverStatus`. To return :dbcommand:`serverStatus` with the "
":data:`~serverStatus.workingSet` document, issue a command in the following "
"form:"
msgstr ""
"MongoDB数据库的 *工作集* 是客户端最频繁访问的那部分数据。你可以通过 :dbcommand: `serverStatus`. "
"输出的 :data:`~serverStatus.workingSet` 文档来评估工作集的大小。命令如下："

#: ../source/faq/diagnostics.txt:137
msgid "Must my working set size fit RAM?"
msgstr ""
"我的工作集大小必须和RAM(内存)匹配吗？"

#: ../source/faq/diagnostics.txt:139
msgid ""
"Your working set should stay in memory to achieve good performance. "
"Otherwise many random disk IO's will occur, and unless you are using SSD, "
"this can be quite slow."
msgstr ""
"你的工作集应驻存在内存中以实现更好的性能。否则会发生很多的磁盘IO（输入/输出），"
"除非你使用SSD（固态硬盘），这样会相当慢。"

#: ../source/faq/diagnostics.txt:143
msgid ""
"One area to watch specifically in managing the size of your working set is "
"index access patterns. If you are inserting into indexes at random locations"
" (as would happen with id's that are randomly generated by hashes), you will"
" continually be updating the whole index. If instead you are able to create "
"your id's in approximately ascending order (for example, day concatenated "
"with a random id), all the updates will occur at the right side of the "
"b-tree and the working set size for index pages will be much smaller."
msgstr ""
"在管理工作集大小的时候，特别值得注意的一点是索引访问模式。如果你是在随机位置"
"上插入索引（和通过散列随机生成的id一样），你将不断的更新整个索引。"
"相反的，如果你使用近似升序来创建id（例如：日期和随机id进行多列索引），所有的"
"将在B-树左侧的位置发生，工作集大小的索引页将变得更小。"

#: ../source/faq/diagnostics.txt:152
msgid ""
"It is fine if databases and thus virtual size are much larger than RAM."
msgstr ""
"数据库和实效大小比内存大是正确的做法。"

#: ../source/faq/diagnostics.txt:187
msgid "How do I calculate how much RAM I need for my application?"
msgstr ""
"我如何估算在我的应用中需要多大的内存？"

#: ../source/faq/diagnostics.txt:191
msgid ""
"The amount of RAM you need depends on several factors, including but not "
"limited to:"
msgstr ""
"内存数量取决于几个因素，包括但不限于："

#: ../source/faq/diagnostics.txt:194
msgid ""
"The relationship between :doc:`database storage </faq/storage>` and working "
"set."
msgstr ""
":doc:`数据库存储 </faq/storage>` 和工作集之间的关系"

#: ../source/faq/diagnostics.txt:196
msgid "The operating system's cache strategy for LRU (Least Recently Used)"
msgstr ""
"操作系统的缓存策略 LRU(最近最少使用）。"

#: ../source/faq/diagnostics.txt:198
msgid "The impact of :doc:`journaling </core/journaling>`"
msgstr ""
":doc:`日志 </core/journaling> ` 的影响。"

#: ../source/faq/diagnostics.txt:200
msgid ""
"The number or rate of page faults and other MMS gauges to detect when you "
"need more RAM"
msgstr ""
"根据错误页面的数量或比率和其他的MMS监测工具来监测是否需要更多的内存。"

#: ../source/faq/diagnostics.txt:203
msgid ""
"MongoDB defers to the operating system when loading data into memory from "
"disk. It simply :ref:`memory maps <faq-storage-memory-mapped-files>` all its"
" data files and relies on the operating system to cache data. The OS "
"typically evicts the least-recently-used data from RAM when it runs low on "
"memory. For example if clients access  indexes more frequently than "
"documents, then indexes will more likely stay in RAM, but it depends on your"
" particular usage."
msgstr ""
"MongoDB使用操作系统将数据从磁盘读取到内存中。它单纯的 :ref:` 内存映射 <faq-storage-memory-mapped-files>` "
"所有的数据文件并且使用操作系统缓存数据。在内存运行效率低的情况下，操作系统"
"会通常从内存中清除最近最少使用数据(LRU)，例如如果客户端比访问文档更频繁的访"
"问索引，这是索引将更可能的驻存在内存中，但是这取决于您的特定用法。"

#: ../source/faq/diagnostics.txt:211
msgid ""
"To calculate how much RAM you need, you must calculate your working set "
"size, or the portion of your data that clients use most often. This depends "
"on your access patterns, what indexes you have, and the size of your "
"documents."
msgstr ""
"要计算你需要多少内存，你必须预估工作集的大小，或者客户端经常使用的那部分数据。"
"这取决于你的访问模式，你有哪些索引和你的文档的大小。"

#: ../source/faq/diagnostics.txt:216
msgid ""
"If page faults are infrequent, your working set fits in RAM. If fault rates "
"rise higher than that, you risk performance degradation. This is less "
"critical with SSD drives than with spinning disks."
msgstr ""
"如果页面错误是罕见的，你的工作集和内存相互适合。如果错误比率升高，高于你的风险，"
"性能会下降。固态硬盘（SSD）的临界值比旋转型磁盘（spinning disks）更少。"

#: ../source/faq/diagnostics.txt:222
msgid "How do I read memory statistics in the UNIX ``top`` command"
msgstr "我如何在UNIX的 ``top`` 命令中显示内存统计？"

#: ../source/faq/diagnostics.txt:224
msgid ""
"Because :program:`mongod` uses :ref:`memory-mapped files <faq-storage-"
"memory-mapped-files>`, the memory statistics in ``top`` require "
"interpretation in a special way. On a large database, ``VSIZE`` (virtual "
"bytes) tends to be the size of the entire database. If the :program:`mongod`"
" doesn't have other processes running, ``RSIZE`` (resident bytes) is the "
"total memory of the machine, as this counts file system cache contents."
msgstr ""
"因为 :program:`mongod` 使用 :ref:`内存-映射 文件 <faq-storage-memory-mapped-files>` ，"
"在 ``top`` 中显示内存统计需要用特殊的方法解释。在一个大型数据库中， ``VSIZE`` （虚拟字节）"
"往往是整个数据库的大小。如果 :program:`mongod` 没有其他的进行运行， ``RSIZE`` （常驻字节）"
"是机器的内存总额，和文件系统缓存内容的数目一样。"

#: ../source/faq/diagnostics.txt:232
msgid ""
"For Linux systems, use the ``vmstat`` command to help determine how the "
"system uses memory. On OS X systems use ``vm_stat``."
msgstr ""
"在Linux系统上，使用 ``vmstat`` 命令来帮助确定系统如何使用内存。在 OS X系统"
"上使用 ``vm_stat`` 命令。"

#: ../source/faq/diagnostics.txt:236
msgid "Sharded Cluster Diagnostics"
msgstr "分片集群的诊断"

#: ../source/faq/diagnostics.txt:238
msgid ""
"The two most important factors in maintaining a successful sharded cluster "
"are:"
msgstr ""
"成功维护分片集群最重要的两个因素是："

#: ../source/faq/diagnostics.txt:240
msgid ""
":ref:`choosing an appropriate shard key <sharding-internals-shard-keys>` and"
msgstr ""
":ref:`选择一个恰当的片键 <sharding-internals-shard-keys>` "

#: ../source/faq/diagnostics.txt:242
msgid ""
":ref:`sufficient capacity to support current and future operations "
"<sharding-capacity-planning>`."
msgstr ""
":ref:`足够的性能来支持当前和未来的业务 "
"<sharding-capacity-planning>`."

#: ../source/faq/diagnostics.txt:245
msgid ""
"You can prevent most issues encountered with sharding by ensuring that you "
"choose the best possible :term:`shard key` for your deployment and ensure "
"that you are always adding additional capacity to your cluster well before "
"the current resources become saturated. Continue reading for specific issues"
" you may encounter in a production environment."
msgstr ""
"在你的部署中选择最合理的 :term:`片键` ，并且确保总是在你的集群现有的资源趋于饱和"
"之前增加额外的容量，可以避免大部分在分片过程中遇到的问题。继续阅读在生产环境中遇"
"到的特殊问题。"

#: ../source/faq/diagnostics.txt:254
msgid "In a new sharded cluster, why does all data remains on one shard?"
msgstr ""
"在一个新的分片集群，为什么所有的数据仍然在一个分片？"

#: ../source/faq/diagnostics.txt:256
msgid ""
"Your cluster must have sufficient data for sharding to make sense. Sharding "
"works by migrating chunks between the shards until each shard has roughly "
"the same number of chunks."
msgstr ""
"你的集群必须有足够的数据去做有意义的分片。分片工作在分片之间迁移数据块,直到"
"每个分片都有数量大致相同的数据块。"

#: ../source/faq/diagnostics.txt:260
msgid ""
"The default chunk size is 64 megabytes. MongoDB will not begin migrations "
"until the imbalance of chunks in the cluster exceeds the :ref:`migration "
"threshold <sharding-migration-thresholds>`. While the default chunk size is "
"configurable with the :setting:`~sharding.chunkSize` setting, these "
"behaviors help prevent unnecessary chunk migrations, which can degrade the "
"performance of your cluster as a whole."
msgstr ""
"数据块默认的大小是64M。集群中数据块的不平衡程度超过 :ref:`迁移阀值 <sharding-migration-thresholds>` "
"之前，MongoDB不会开始迁移。虽然可以通过 :setting:`~sharding.chunkSize` 设置"
"默认的数据块大小，这些行为有助于防止不必要的数据块迁移，这回降低你的集群的"
"整体性能。"

#: ../source/faq/diagnostics.txt:267
msgid ""
"If you have just deployed a sharded cluster, make sure that you have enough "
"data to make sharding effective. If you do not have sufficient data to "
"create more than eight 64 megabyte chunks, then all data will remain on one "
"shard. Either lower the :ref:`chunk size <sharding-chunk-size>` setting, or "
"add more data to the cluster."
msgstr ""
"如果你刚刚部署了分片集群，请确认你有足够足够的数据使得分片生效。如果没有足够的"
"数据创建多于8个64M的数据块，那么所有的数据仍然在一个分片上。或者降低你的"
" :ref:`chunk size <sharding-chunk-size>` 设置，或者向集群中增加足够的数据。"

#: ../source/faq/diagnostics.txt:273
msgid ""
"As a related problem, the system will split chunks only on inserts or "
"updates, which means that if you configure sharding and do not continue to "
"issue insert and update operations, the database will not create any chunks."
" You can either wait until your application inserts data *or* :doc:`split "
"chunks manually </tutorial/split-chunks-in-sharded-cluster>`."
msgstr ""
"作为一个相关的问题，系统只有在插入或者更新的时候分离数据块，这意味着，如果你"
"配置了分片，但是没有继续进行插入或者更新操作，数据库将不会创建任何数据块。"
"你可以等到应用插入数据或者 :doc:`手动分块 </tutorial/split-chunks-in-sharded-cluster>` 。"

#: ../source/faq/diagnostics.txt:279
msgid ""
"Finally, if your shard key has a low :ref:`cardinality <sharding-shard-key-"
"cardinality>`, MongoDB may not be able to create sufficient splits among the"
" data."
msgstr ""
"最后，如果你的片键有一个低 :ref:`基数能力 <sharding-shard-key-cardinality>` "
"，MongoDB 可能无法在数据之间创造足够的隔离。"

#: ../source/faq/diagnostics.txt:284
msgid ""
"Why would one shard receive a disproportion amount of traffic in a sharded "
"cluster?"
msgstr ""
"为什么一个分片在分片集群中接收到的通信量不均衡？"

#: ../source/faq/diagnostics.txt:286
msgid ""
"In some situations, a single shard or a subset of the cluster will receive a"
" disproportionate portion of the traffic and workload. In almost all cases "
"this is the result of a shard key that does not effectively allow "
":ref:`write scaling <sharding-shard-key-write-scaling>`."
msgstr ""
"在某些情况下，一个单独的分片或者一个分片集群中的子集会接收比例不均衡的通信和"
"工作负载。几乎所有的情况下，都是片键不能有效的允许"
":ref:`写扩展 <sharding-shard-key-write-scaling>`."

#: ../source/faq/diagnostics.txt:291
msgid ""
"It's also possible that you have \"hot chunks.\" In this case, you may be "
"able to solve the problem by splitting and then migrating parts of these "
"chunks."
msgstr ""
"也有可能是由于你的实例中有\"热块\"（hot chunks）。 在这种情况下，你能够通过分离然后迁移"
"部分数据块解决这个问题。"

#: ../source/faq/diagnostics.txt:295
msgid ""
"In the worst case, you may have to consider re-sharding your data and "
":ref:`choosing a different shard key <sharding-internals-choose-shard-key>` "
"to correct this pattern."
msgstr ""
"在最坏的情况下，你可能需要考虑重新分片你的数据并且"
" :ref:`选择一个不同的片键 <sharding-internals-choose-shard-key>` "
"来适应这个模式。"

#: ../source/faq/diagnostics.txt:300
msgid "What can prevent a sharded cluster from balancing?"
msgstr "什么会破坏分片集群的平衡？"

#: ../source/faq/diagnostics.txt:302
msgid ""
"If you have just deployed your sharded cluster, you may want to consider the"
" :ref:`troubleshooting suggestions for a new cluster where data remains on a"
" single shard <sharding-troubleshooting-not-splitting>`."
msgstr ""
"如果你刚刚部署了你的分片集群，你可能要考虑"
" :ref:` 在新集群中数据保持在但以分片的故障处理建议"
" <sharding-troubleshooting-not-splitting>` 。"

#: ../source/faq/diagnostics.txt:306
msgid ""
"If the cluster was initially balanced, but later developed an uneven "
"distribution of data, consider the following possible causes:"
msgstr ""
"如果集群最初是平衡的，但是随后的开发中数据分布不均，参考以下的可能原因："

#: ../source/faq/diagnostics.txt:309
msgid ""
"You have deleted or removed a significant amount of data from the cluster. "
"If you have added additional data, it may have a different distribution with"
" regards to its shard key."
msgstr ""
"你可能从集群中删除或移除大量数据。如果你增加了额外的数据，它可能有对于片键会"
"有不同的分布"

#: ../source/faq/diagnostics.txt:313
msgid ""
"Your :term:`shard key` has low :ref:`cardinality <sharding-shard-key-"
"cardinality>` and MongoDB cannot split the chunks any further."
msgstr ""
"你的 :term:`片键` 具有低的 :ref:`基数能力 <sharding-shard-key-"
"cardinality>` ， MongoDB 不能再分隔数据块。"

#: ../source/faq/diagnostics.txt:316
msgid ""
"Your data set is growing faster than the balancer can distribute data around"
" the cluster. This is uncommon and typically is the result of:"
msgstr ""
"你的数据增长比均衡器在集群中分布数据的速度更快。这是罕见的，典型的结果是："

#: ../source/faq/diagnostics.txt:320
msgid ""
"a :ref:`balancing window <sharding-schedule-balancing-window>` that is too "
"short, given the rate of data growth."
msgstr ""
" :ref:`均衡窗口 <sharding-schedule-balancing-window>` 太短， "
"给定数据增长比率。"

#: ../source/faq/diagnostics.txt:323
msgid ""
"an uneven distribution of :ref:`write operations <sharding-shard-key-write-"
"scaling>` that requires more data migration. You may have to choose a "
"different shard key to resolve this issue."
msgstr ""
"一个不均衡的 :ref:`写操作 <sharding-shard-key-write-"
"scaling>` 需要更多的数据迁移。你可能不得不选择一个不同的片键来解决这个问题。"

#: ../source/faq/diagnostics.txt:328
msgid ""
"poor network connectivity between shards, which may lead to chunk migrations"
" that take too long to complete. Investigate your network configuration and "
"interconnections between shards."
msgstr ""
"分片之间较差的网络连接，可能会导致数据块迁移完成时间太长。检查你的网络配置和"
"分片的相互连接。"

#: ../source/faq/diagnostics.txt:333
msgid "Why do chunk migrations affect sharded cluster performance?"
msgstr "为什么数据块迁移会影响分片集群的性能？"

#: ../source/faq/diagnostics.txt:335
msgid ""
"If migrations impact your cluster or application's performance, consider the"
" following options, depending on the nature of the impact:"
msgstr ""
"如果迁移影响了你的集群或者应用的性能，根据产生影响的类型考虑下列选项："

#: ../source/faq/diagnostics.txt:338
msgid ""
"If migrations only interrupt your clusters sporadically, you can limit the "
":ref:`balancing window <sharding-schedule-balancing-window>` to prevent "
"balancing activity during peak hours. Ensure that there is enough time "
"remaining to keep the data from becoming out of balance again."
msgstr ""
"如果迁移只是偶尔的打断你的集群，可以限制"
":ref:`均衡窗口 <sharding-schedule-balancing-window>` 来阻止高峰时段的平衡"
"活动。确保有足够的剩余时间来保持数据在再次失去平衡之前。"

#: ../source/faq/diagnostics.txt:344
msgid ""
"If the balancer is always migrating chunks to the detriment of overall "
"cluster performance:"
msgstr ""
"如果均衡器总是迁移数据影响到集群的整体性能："

#: ../source/faq/diagnostics.txt:347
msgid ""
"You may want to attempt :doc:`decreasing the chunk size </tutorial/modify-"
"chunk-size-in-sharded-cluster>` to limit the size of the migration."
msgstr ""
"你可能需要尝试"
" :doc:`减小数据块的大小 </tutorial/modify-chunk-size-in-sharded-cluster>` "
"来限制迁移的大小。"

#: ../source/faq/diagnostics.txt:350
msgid ""
"Your cluster may be over capacity, and you may want to attempt to :ref:`add "
"one or two shards <sharding-procedure-add-shard>` to the cluster to "
"distribute load."
msgstr ""
"你的集群可能过载，你可能需要尝试"
" :ref:`增加一到两个分片 <sharding-procedure-add-shard>` 到集群中来分担负荷。"

#: ../source/faq/diagnostics.txt:354
msgid ""
"It's also possible that your shard key causes your application to direct all"
" writes to a single shard. This kind of activity pattern can require the "
"balancer to migrate most data soon after writing it. Consider redeploying "
"your cluster  with a shard key that provides better :ref:`write scaling "
"<sharding-shard-key-write-scaling>`."
msgstr ""
"也可能是你的片键导致你的应用直接写入到一个单一分片。这种活动模式需要"
"均衡器在写入不久之后去迁移更多的数据。可以考虑用一个片键重新部署你的"
"集群以提供更好的 :ref:`写扩展 <sharding-shard-key-write-scaling>`。 "
