#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/administration/production-checklist-development.txt:3
msgid "Development"
msgstr ""

#: ../source/administration/production-checklist-development.txt:15
msgid ""
"The following checklist, along with the :doc:`/administration/production-"
"checklist-operations`, provides recommendations to help you avoid issues in "
"your production MongoDB deployment."
msgstr ""

#: ../source/administration/production-checklist-development.txt:23
msgid "Data Durability"
msgstr ""

#: ../source/administration/production-checklist-development.txt:27
msgid ""
"Ensure that your replica set includes at least three data-bearing nodes with"
" ``w:majority`` :doc:`write concern </reference/write-concern>`. Three data-"
"bearing nodes are required for replica-set wide data durability."
msgstr ""

#: ../source/administration/production-checklist-development.txt:32
msgid "Ensure that all instances use :doc:`journaling </core/journaling>`."
msgstr ""

#: ../source/administration/production-checklist-development.txt:35
msgid "Schema Design"
msgstr ""

#: ../source/administration/production-checklist-development.txt:39
msgid ""
"Ensure that your schema design does not rely on indexed arrays that grow in "
"length without bound. Typically, best performance can be achieved when such "
"indexed arrays have fewer than 1000 elements."
msgstr ""

#: ../source/administration/production-checklist-development.txt:44
msgid "Replication"
msgstr ""

#: ../source/administration/production-checklist-development.txt:48
msgid ""
"Do not use secondary reads to scale overall read throughput. See: `Can I use"
" more replica nodes to scale`_ for an overview of read scaling. For "
"information about secondary reads, see: :doc:`/core/read-preference`."
msgstr ""

#: ../source/administration/production-checklist-development.txt:56
msgid "Sharding"
msgstr ""

#: ../source/administration/production-checklist-development.txt:60
msgid ""
"Ensure that your shard key distributes the load evenly on your shards. See: "
":doc:`/tutorial/choose-a-shard-key` for more information."
msgstr ""

#: ../source/administration/production-checklist-development.txt:63
msgid ""
"Use :doc:`targeted queries </core/sharded-cluster-query-router>` for "
"workloads that need to scale with the number of shards."
msgstr ""

#: ../source/administration/production-checklist-development.txt:66
msgid ""
"Always read from primary nodes for non-targeted queries that may be "
"sensitive to `stale or orphaned data "
"<http://blog.mongodb.org/post/74730554385/background-indexing-on-"
"secondaries-and-orphaned>`_."
msgstr ""

#: ../source/administration/production-checklist-development.txt:69
msgid ""
":doc:`Pre-split and manually balance chunks </tutorial/create-chunks-in-"
"sharded-cluster>` when inserting large data sets into a new non-hashed "
"sharded collection. Pre-splitting and manually balancing enables the insert "
"load to be distributed among the shards, increasing performance for the "
"initial load."
msgstr ""

#: ../source/administration/production-checklist-development.txt:76
msgid "Drivers"
msgstr ""

#: ../source/administration/production-checklist-development.txt:80
msgid ""
"Make use of connection pooling. Most MongoDB drivers support connection "
"pooling. Adjust the connection pool size to suit your use case, beginning at"
" 110-115% of the typical number of concurrent database requests."
msgstr ""

#: ../source/administration/production-checklist-development.txt:85
msgid ""
"Ensure that your applications handle transient write and read errors during "
"replica set elections."
msgstr ""

#: ../source/administration/production-checklist-development.txt:88
msgid ""
"Ensure that your applications handle failed requests and retry them if "
"applicable. Drivers **do not** automatically retry failed requests."
msgstr ""

#: ../source/administration/production-checklist-development.txt:91
msgid "Use exponential backoff logic for database request retries."
msgstr ""

#: ../source/administration/production-checklist-development.txt:93
msgid ""
"Use :method:`cursor.maxTimeMS()` for reads and :ref:`wc-wtimeout` for writes"
" if you need to cap execution time for database operations."
msgstr ""

#: ../source/administration/production-checklist-development.txt:0
msgid "On this page"
msgstr ""
