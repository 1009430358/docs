#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.6.9\n"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:3
msgid "Reconfigure a Replica Set with Unavailable Members"
msgstr "为有不可用节点的复制集重设复制集配置"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:13
msgid ""
"To reconfigure a :term:`replica set` when a **majority** of members are "
"available, use the :method:`rs.reconfig()` operation on the current "
":term:`primary`, following the example in the :ref:`Replica Set "
"Reconfiguration Procedure <replica-set-reconfiguration-usage>`."
msgstr ""
"当复制集中有 **少数** 节点不可用的时候，我们可以在现在的 :term:`primary`上使"
"用  :method:`rs.reconfig()`  来进行重新配置，下列就是 :ref:`Replica Set "
"Reconfiguration Procedure <replica-set-reconfiguration-usage>` 的例子。"


#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:32

msgid "Reconfigure by Forcing the Reconfiguration"
msgstr "强制更新复制集配置"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:34
msgid ""
"This procedure lets you recover while a majority of :term:`replica set` "
"members are down or unreachable. You connect to any surviving member and use "
"the ``force`` option to the :method:`rs.reconfig()`  method."
msgstr ""
"本文讲述了如何在 :term:`replica set` 中多数节点不可用的时候恢复复制集的服务。"
"我们可以连接到任意一个存活的节点上，在 :method:`rs.reconfig()`  的时候使用 "
"``force`` 参数。"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:38
msgid ""
"The ``force`` option forces a new configuration onto the member. Use this "
"procedure only to recover from catastrophic interruptions. Do not use "
"``force`` every time you reconfigure. Also, do not use the ``force`` option "
"in any automatic scripts and do not use ``force`` when there is still a :"
"term:`primary`."
msgstr ""
" ``force`` 参数强行将新的配置发送到节点上。仅推荐在灾难性的故障时使用该命令。"
"不要每次都使用 ``force`` 参数。也不要将 ``force`` 参数放在任何自动化脚本中或"
"是在还有 :term:`primary` 的时候使用。"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:43
msgid "To force reconfiguration:"
msgstr "强行应用复制集配置："

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:45
msgid "Back up a surviving member."
msgstr "备份存活的节点。"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:47
msgid ""
"Connect to a surviving member and save the current configuration. Consider "
"the following example commands for saving the configuration:"
msgstr "连接进存货的节点，保存现有的配置。可以参考下列命令："


#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:66

msgid ""
"On the same member, reconfigure the set by using the :method:`rs.reconfig()` "
"command with the ``force`` option set to ``true``:"
msgstr ""
"在同一个节点上，通过使用 ``force`` 为 ``true`` 的 :method:`rs.reconfig()`  命"
"令来强行应用配置："

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:74
msgid ""
"This operation forces the secondary to use the new configuration. The "
"configuration is then propagated to all the surviving members listed in the "
"``members`` array. The replica set then elects a new primary."
msgstr ""
"该操作强制从节点使用新的配置。该配置将会同步到所有存活着的在 ``members`` 中节"
"点，并会新选举出一个主节点。"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:80
msgid ""
"When you use ``force : true``, the version number in the replica set "
"configuration increases significantly, by tens or hundreds of thousands. "
"This is normal and designed to prevent set version collisions if you "
"accidentally force re-configurations on both sides of a network partition "
"and then the network partitioning ends."
msgstr ""
"当我们使用 ``force : true`` 的时候，复制及配置的版本会显著增加（increases "
"significantly）(成百上千的)。这是正常现象，这样设计是为了防止当网络情况不好的"
"时候版本号出现冲突。"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:87
msgid ""
"If the failure or partition was only temporary, shut down or decommission "
"the removed members as soon as possible."
msgstr "如果出现暂时性的失败或是分离，需要尽快关闭移除的节点。"


#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:90
msgid ":doc:`/tutorial/resync-replica-set-member`"

msgstr ""
"关闭运行着的 :program:`mongod` 实例。为了确保是正常关闭，请使用  :term:"
"`control script` 或是 :method:`db.shutdownServer()` 命令。"


#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:28
msgid "replica set"

msgstr ""
"举个栗子，连接到 :program:`mongo` 窗口中使用 :method:`db.shutdownServer()` 命"
"令来关闭："


#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:28
msgid "reconfiguration"
msgstr ""

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:0
msgid "On this page"

msgstr ""
"将所有节点的数据文件目录（ :setting:`~storage.dbPath` ）移除（除了 ``db0."
"example.net`` 节点的）。这样其他节点的数据目录都是空的了。"


#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:20
msgid ""
"This document provides steps for re-configuring a replica set when *only* a "
"**minority** of members are accessible."

msgstr ""
"连接进 ``db0.example.net``  ，且执行 :method:`rs.initiate()` 来初始化复制集。"

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:23
msgid ""

"You may need to use the procedure, for example, in a geographically "
"distributed replica set, where *no* local group of members can reach a "
"majority. See :ref:`replica-set-elections` for more information on this "
"situation."

msgstr ""
"通过 :method:`rs.add()` 来新增节点。举个栗子，将  ``db1.example.net``  的  "
"``27017`` 端口加入复制集："

#: ../source/tutorial/reconfigure-replica-set-with-unavailable-members.txt:56
msgid ""

"On the same member, remove the down and unreachable members of the replica "
"set from the :rsconf:`members` array by setting the array equal to the "
"surviving members alone. Consider the following example, which uses the "
"``cfg`` variable created in the previous step:"
msgstr ""

#~ msgid ""
#~ "This document provides the following options for re-configuring a replica "
#~ "set when *only* a **minority** of members are accessible:"
#~ msgstr ""

#~ msgid ":ref:`replica-set-force-reconfiguration`"
#~ msgstr ""

#~ msgid ":ref:`replica-set-reconfigure-by-replacing`"
#~ msgstr ""

#~ msgid ""
#~ "You may need to use one of these procedures, for example, in a "
#~ "geographically distributed replica set, where *no* local group of members "
#~ "can reach a majority. See :ref:`replica-set-elections` for more information "
#~ "on this situation."
#~ msgstr ""

#~ msgid ""
#~ "On the same member, remove the down and unreachable members of the replica "
#~ "set from the :data:`~replSetGetConfig.members` array by setting the array "
#~ "equal to the surviving members alone. Consider the following example, which "
#~ "uses the ``cfg`` variable created in the previous step:"
#~ msgstr ""

#~ msgid "Reconfigure by Replacing the Replica Set"
#~ msgstr ""

#~ msgid ""
#~ "Use the following procedure **only** for versions of MongoDB prior to "
#~ "version 2.0. If you're running MongoDB 2.0 or later, use the above "
#~ "procedure, :ref:`replica-set-force-reconfiguration`."
#~ msgstr ""

#~ msgid ""
#~ "These procedures are for situations where a *majority* of the :term:`replica"
#~ " set` members are down or unreachable. If a majority is *running*, then skip"
#~ " these procedures and instead use the :method:`rs.reconfig()` command "
#~ "according to the examples in :ref:`replica-set-reconfiguration-usage`."
#~ msgstr ""

#~ msgid ""
#~ "If you run a pre-2.0 version and a majority of your replica set is down, you"
#~ " have the two options described here. Both involve replacing the replica "
#~ "set."
#~ msgstr ""

#~ msgid "Reconfigure by Turning Off Replication"
#~ msgstr ""

#~ msgid ""
#~ "This option replaces the :term:`replica set` with a :term:`standalone` "
#~ "server."
#~ msgstr ""

#~ msgid ""
#~ "Stop the surviving :program:`mongod` instances. To ensure a clean shutdown, "
#~ "use an existing :term:`control script` or use the "
#~ ":method:`db.shutdownServer()` method."
#~ msgstr ""

#~ msgid ""
#~ "For example, to use the :method:`db.shutdownServer()` method, connect to the"
#~ " server using the :program:`mongo` shell and issue the following sequence of"
#~ " commands:"
#~ msgstr ""

#~ msgid ""
#~ "Create a backup of the data directory (i.e. :setting:`~storage.dbPath`) of "
#~ "the surviving members of the set."
#~ msgstr ""

#~ msgid "Optional"
#~ msgstr ""

#~ msgid ""
#~ "Restart one of the :program:`mongod` instances *without* the "
#~ ":option:`--replSet <mongod --replSet>` parameter."
#~ msgstr ""

#~ msgid ""
#~ "The data is now accessible and provided by a single server that is not a "
#~ "replica set member. Clients can use this server for both reads and writes."
#~ msgstr ""

#~ msgid ""
#~ "When possible, re-deploy a replica set to provide redundancy and to protect "
#~ "your deployment from operational interruption."
#~ msgstr ""

#~ msgid "Reconfigure by \"Breaking the Mirror\""
#~ msgstr ""

#~ msgid ""
#~ "This option selects a surviving :term:`replica set` member to be the new "
#~ ":term:`primary` and to \"seed\" a new replica set. In the following "
#~ "procedure, the new primary is ``db0.example.net``. MongoDB copies the data "
#~ "from ``db0.example.net`` to all the other members."
#~ msgstr ""

#~ msgid ""
#~ "Move the data directories (i.e. :setting:`~storage.dbPath`) for all the "
#~ "members except ``db0.example.net``, so that all the members except "
#~ "``db0.example.net`` have empty data directories. For example:"
#~ msgstr ""

#~ msgid ""
#~ "Move the data files for ``local`` database (i.e. ``local.*``) so that "
#~ "``db0.example.net`` has no local database. For example"
#~ msgstr ""

#~ msgid "Start each member of the replica set normally."
#~ msgstr ""

#~ msgid ""
#~ "Connect to ``db0.example.net`` in a :program:`mongo` shell and run "
#~ ":method:`rs.initiate()` to initiate the replica set."
#~ msgstr ""

#~ msgid ""
#~ "Add the other set members using :method:`rs.add()`. For example, to add a "
#~ "member running on ``db1.example.net`` at port ``27017``, issue the following"
#~ " command:"
#~ msgstr ""

#~ msgid ""
#~ "MongoDB performs an initial sync on the added members by copying all data "
#~ "from ``db0.example.net`` to the added members."
#~ msgstr ""

