#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: 2016-12-04 20:08+0800\n"
"Last-Translator: Yingminzhou <csuyingminzhou@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language-Team: MongoDB Chinese Community <admin@mongoing.com>\n"
"Language: en_GB\n"
"X-Generator: Poedit 1.8.8\n"

#: ../source/tutorial/configure-mongo-shell.txt:3
msgid "Configure the ``mongo`` Shell"
msgstr "配置 ``mongo`` Shell"

#: ../source/tutorial/configure-mongo-shell.txt:0
msgid "On this page"
msgstr "本页内容"

#: ../source/tutorial/configure-mongo-shell.txt:16
msgid "Customize the Prompt"
msgstr "自定义提示符"

#: ../source/tutorial/configure-mongo-shell.txt:18
msgid ""
"You may modify the content of the prompt by setting the variable ``prompt`` "
"in the :program:`mongo` shell. The ``prompt`` variable can hold strings as "
"well as JavaScript code. If ``prompt`` holds a function that returns a "
"string, :program:`mongo` can display dynamic information in each prompt."
msgstr ""
"你可以通过在  :program:`mongo`  shell 中设置变量 ``prompt`` 的值来修改提示符"
"的内容。``prompt`` 变量可以存储字符串以及JavaScript代码。 如果 ``prompt`` 为"
"返回字符串的函数，  :program:`mongo`  则会在每个提示符中展示动态信息。"

#: ../source/tutorial/configure-mongo-shell.txt:24
msgid ""
"You can add the logic for the prompt in the :ref:`.mongorc.js <mongo-"
"mongorc-file>` file to set the prompt each time you start up the :program:"
"`mongo` shell."
msgstr ""
"你可以在  :ref:`.mongorc.js <mongo-mongorc-file>` 文件中增加提示符的逻辑操作"
"来设置每次启动  :program:`mongo`  shell时的提示符。"

#: ../source/tutorial/configure-mongo-shell.txt:29
msgid "Customize Prompt to Display Number of Operations"
msgstr "自定义提示符展示操作数"

#: ../source/tutorial/configure-mongo-shell.txt:31
msgid ""
"For example,to create a :program:`mongo` shell prompt with the number of "
"operations issued in the current session, define the following variables in "
"the :program:`mongo` shell:"
msgstr ""
"例如，为了创建一个显示当前会话中操作数的  :program:`mongo` shell，在  :"
"program:`mongo` shell  中定义以下变量： "

#: ../source/tutorial/configure-mongo-shell.txt:42
#: ../source/tutorial/configure-mongo-shell.txt:64
#: ../source/tutorial/configure-mongo-shell.txt:84
msgid "The prompt would then resemble the following:"
msgstr "提示符将会类似下面："

#: ../source/tutorial/configure-mongo-shell.txt:51
msgid "Customize Prompt to Display Database and Hostname"
msgstr "自定义提示符显示数据库和主机名"

#: ../source/tutorial/configure-mongo-shell.txt:53
msgid ""
"To create a :program:`mongo` shell prompt in the form of "
"``<database>@<hostname>$``, define the following variables:"
msgstr ""
"为创建形式为  ``<database>@<hostname>$`` 的 :program:`mongo`  shell 提示符，"
"定义下列变量："

#: ../source/tutorial/configure-mongo-shell.txt:71
msgid "Customize Prompt to Display Up Time and Document Count"
msgstr "自定义提示符展示服务器的启动时间以及文档数"

#: ../source/tutorial/configure-mongo-shell.txt:73
msgid ""
"To create a :program:`mongo` shell prompt that contains the system up time "
"*and* the number of documents in the current database, define the following "
"``prompt`` variable in the :program:`mongo` shell:"
msgstr ""
"创建一个包含系统启动时间 *以及* 当前数据库中文档数的  :program:`mongo` "
"shell  提示符，在  :program:`mongo` shell  中定义下面的 ``prompt`` 变量值："

#: ../source/tutorial/configure-mongo-shell.txt:91
msgid "Use an External Editor in the ``mongo`` Shell"
msgstr "在 ``mongo`` Shell 中使用外部编辑器"

#: ../source/tutorial/configure-mongo-shell.txt:93
msgid ""
"You can use your own editor in the :program:`mongo` shell by setting the :"
"envvar:`EDITOR` environment variable *before* starting the :program:`mongo` "
"shell."
msgstr ""
"你可以通过在启动  :program:`mongo` shell  *之前* 设置 :envvar:`EDITOR` 环境"
"变量来在 :program:`mongo` shell  中使用自己的编辑器。"

#: ../source/tutorial/configure-mongo-shell.txt:102
msgid ""
"Once in the :program:`mongo` shell, you can edit with the specified editor "
"by typing ``edit <variable>`` or ``edit <function>``, as in the following "
"example:"
msgstr ""
"一旦进入 :program:`mongo` shell  中，你可以通过输入 ``edit <variable>``  或"
"者  ``edit <function>``  使用特定的编辑器进行编辑，和下面的示例一下："

#: ../source/tutorial/configure-mongo-shell.txt:106
msgid "Define a function ``myFunction``:"
msgstr "定义一个函数 ``myFunction`` ："

#: ../source/tutorial/configure-mongo-shell.txt:112
msgid "Edit the function using your editor:"
msgstr "使用你的编辑器编辑函数："

#: ../source/tutorial/configure-mongo-shell.txt:118
msgid ""
"The command should open the ``vim`` edit session. When finished with the "
"edits, save and exit ``vim`` edit session."
msgstr ""
"命令应该打开 ``vim`` 编辑会话。当编辑完成之后，保存并退出 ``vim`` 编辑会话。"

#: ../source/tutorial/configure-mongo-shell.txt:121
msgid ""
"In the :program:`mongo` shell, type ``myFunction`` to see the function "
"definition:"
msgstr "在  :program:`mongo` shell 中， 输入 ``myFunction`` 在查看函数定义："

#: ../source/tutorial/configure-mongo-shell.txt:128
msgid "The result should be the changes from your saved edit:"
msgstr "结果应该是保存后的编辑结果。"

#: ../source/tutorial/configure-mongo-shell.txt:138
msgid ""
"As :program:`mongo` shell interprets code edited in an external editor, it "
"may modify code in functions, depending on the JavaScript compiler. For :"
"program:`mongo` may convert ``1+1`` to ``2`` or remove comments. The actual "
"changes affect only the appearance of the code and will vary based on the "
"version of JavaScript used but will not affect the semantics of the code."
msgstr ""
"由于  :program:`mongo` shell 编译了外部编辑器中编辑的代码，基于JavaScript的"
"编译器，它可能会修改函数中的代码。  :program:`mongo` 可能会将 ``1+1``  转化"
"为 ``2`` 或者删除评论。实际的修改只会影响代码的显示以及基于使用的JavaScript"
"版本进行修改，但是不会影响代码的语义。"

#: ../source/tutorial/configure-mongo-shell.txt:146
msgid "Change the ``mongo`` Shell Batch Size"
msgstr "修改 ``mongo`` Shell 批处理大小"

#: ../source/tutorial/configure-mongo-shell.txt:148
msgid ""
"The :method:`db.collection.find()` method is the JavaScript method to "
"retrieve documents from a :term:`collection`. The :method:`db.collection."
"find()` method returns a :term:`cursor` to the results; however, in the :"
"program:`mongo` shell, if the returned cursor is not assigned to a variable "
"using the ``var`` keyword, then the cursor is automatically iterated up to "
"20 times to print up to the first 20 documents that match the query. The :"
"program:`mongo` shell will prompt ``Type it`` to iterate another 20 times."
msgstr ""
" :method:`db.collection.find()`  方法是从一个 :term:`collection` 中检索文档"
"的JavaScript方法。:method:`db.collection.find()`  方法返回指向结果的  :term:"
"`cursor`  ； 然而，在  :program:`mongo` shell 中，如果返回的游标没有赋值给使"
"用 ``var`` 关键词的变量，游标将会自动迭代最多20次来打印出匹配该查询的前20个"
"文档。  :program:`mongo` shell 将会提示 ``Type it``  再进行20次迭代。"

#: ../source/tutorial/configure-mongo-shell.txt:157
msgid ""
"You can set the ``DBQuery.shellBatchSize`` attribute to change the number "
"of documents from the default value of ``20``, as in the following example "
"which sets it to ``10``:"
msgstr ""
"你可以设置 ``DBQuery.shellBatchSize``  属性来修改默认的 ``20`` 篇文档数，类"
"似于下面的案例，将默认值设为 ``10``："
