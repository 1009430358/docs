# 
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 2.5-dev\n"

#: ../source/tutorial/rotate-log-files.txt:3
msgid "Rotate Log Files"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:8
msgid "Overview"
msgstr "概述"

#: ../source/tutorial/rotate-log-files.txt:10
msgid ""
"When used with the :option:`--logpath` option or :setting:`systemLog.path` "
"setting, :program:`mongod` and :program:`mongos` instances report a live "
"account of all activity and operations to a log file. When reporting "
"activity data to a log file, by default, MongoDB only rotates logs in "
"response to the :dbcommand:`logRotate` command, or when the "
":program:`mongod` or :program:`mongos` process receives a ``SIGUSR1`` signal"
" from the operating system."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:18
msgid ""
"MongoDB's standard log rotation approach archives the current log file and "
"starts a new one. To do this, the :program:`mongod` or :program:`mongos` "
"instance renames the current log file by appending a UTC timestamp to the "
"filename, in :term:`ISODate` format. It then opens a new log file, closes "
"the old log file, and sends all new log entries to the new log file."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:25
msgid ""
"You can also configure MongoDB to support the Linux/Unix logrotate utility "
"by setting :setting:`systemLog.logRotate` or :option:`--logRotate` to "
"``reopen``. With ``reopen``, :program:`mongod` or :program:`mongos` closes "
"the log file, and then reopens a log file with the same name, expecting that"
" another process renamed the file prior to rotation."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:33
msgid ""
"Finally, you can configure :program:`mongod` to send log data to the "
"``syslog``. using the :option:`--syslog` option. In this case, you can take "
"advantage of alternate logrotation tools."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:37
msgid ""
"For information on logging, see the :ref:`monitoring-standard-loggging` "
"section."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:41
msgid "Default Log Rotation Behavior"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:43
msgid ""
"By default, MongoDB uses the :option:`--logRotate rename <--logRotate>` "
"behavior. With ``rename``, :program:`mongod` or :program:`mongos` renames "
"the current log file by appending a UTC timestamp to the filename, opens a "
"new log file, closes the old log file, and sends all new log entries to the "
"new log file."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:53
msgid "Log Rotation with ``--logRotate reopen``"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:57
msgid ""
"Log rotation with :option:`--logRotate reopen <--logRotate>` closes and "
"opens the log file following the typical Linux/Unix log rotate behavior."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:63
msgid "Syslog Log Rotation"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:67
msgid ""
"With syslog log rotation, :program:`mongod` sends log data to the syslog "
"rather than writing it to a file."
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:73
msgid "Forcing a Log Rotation with ``SIGUSR1``"
msgstr ""

#: ../source/tutorial/rotate-log-files.txt:75
msgid ""
"For Linux and Unix-based systems, you can use the ``SIGUSR1`` signal to "
"rotate the logs for a single process, as in the following:"
msgstr ""
