#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: 2014-10-25 16:56+0800\n"
"Last-Translator: xiaobeibei <xiaobeibei@baidu.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/)\n"
"MIME-Version: 1.0\n"
"Language: zh\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.5.4\n"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:3
msgid "Backup a Sharded Cluster with Database Dumps"
msgstr "使用数据库导出备份集群"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:8
msgid "Overview"
msgstr "概览"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:10
msgid ""
"This document describes a procedure for taking a backup of all components of "
"a sharded cluster. This procedure uses :program:`mongodump` to create dumps "
"of the :program:`mongod` instance. An alternate procedure uses file system "
"snapshots to capture the backup data, and may be more efficient in some "
"situations if your system configuration allows file system backups. See :doc:"
"`/administration/backup-sharded-clusters` for more information."
msgstr ""
"这篇文档描述了备份集群中所有组件的一个方法.这种方法使用 :program:`mongodump` "
"创建 :program:`mongod` 数据的导出记录.在系统的文件系统支持快照的情况下,另一种"
"更为有效的方法是使用文件系统快照进行备份,参见 :doc:`/administration/backup-"
"sharded-clusters` 获得更多信息."

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:19
msgid ""
"See :doc:`/core/backups` and :doc:`/administration/backup-sharded-clusters` "
"for complete information on backups in MongoDB and backups of sharded "
"clusters in particular."
msgstr ""
"参见 :doc:`/core/backups` 与 :doc:`/administration/backup-sharded-clusters` "
"获得MonoDB备份与集群备份的完整信息."

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:25
msgid "Prerequisites"
msgstr "预先准备"

#: ../source/includes/note-shard-cluster-backup.rst:1
msgid ""
"To capture a point-in-time backup from a sharded cluster you **must** stop "
"*all* writes to the cluster. On a running production system, you can only "
"capture an *approximation* of point-in-time snapshot."
msgstr ""
"如果需要精确的时间点的备份,需要在备份过程中停止集群的写入.否则,只能备份大致在"
"时间点附近的数据."

#: ../source/includes/access-mongodump-collections.rst:1
msgid ""
"To backup all the databases in a cluster via :program:`mongodump`, you "
"should have the :authrole:`backup` role. The :authrole:`backup` role "
"provides all the needed privileges for backing up all database. The role "
"confers no additional access, in keeping with the policy of :term:`least "
"privilege`."
msgstr ""
"要通过 :program:`mongodump` 备份集群中所有的数据库,需要使用 :authrole:"
"`backup` 角色.:authrole:`backup` 拥有备份所有数据库的权限,同时没有任何其他权"
"限,以符合 :term:`least privilege` 的原则."

#: ../source/includes/access-mongodump-collections.rst:6
msgid ""
"To backup a given database, you must have ``read`` access on the database. "
"Several roles provide this access, including the :authrole:`backup` role."
msgstr ""
"要备份一个数据库,需要在指定的数据库上有 ``read`` 权限.有一些角色提供了这个权"
"限,比如 :authrole:`backup` 角色."

#: ../source/includes/access-mongodump-collections.rst:9
msgid ""
"To backup the ``system.profile`` collection in a database, you must have "
"``read`` access on certain system collections in the database. Several roles "
"provide this access, including the :authrole:`clusterAdmin` and :authrole:"
"`dbAdmin` roles."
msgstr ""
"要备份 ``system.profile`` 集合,需要在这个数据库的这个集合上有 ``read`` 权限."
"有一些角色提供了这个权限,比如 :authrole:`clusterAdmin` 和 :authrole:"
"`dbAdmin` ."

#: ../source/includes/access-mongodump-users.rst:3
msgid ""
"To backup users and :ref:`user-defined roles <user-defined-roles>` for a "
"given database, you must have access to the ``admin`` database. MongoDB "
"stores the user data and role definitions for all databases in the ``admin`` "
"database."
msgstr ""
"要备份数据库的用户以及 ref:`user-defined roles <user-defined-roles>` ,需要对 "
"``admin`` 数据库有权限,MongoDB在 ``admin`` 数据库中存储了这些信息."

#: ../source/includes/access-mongodump-users.rst:8
msgid ""
"Specifically, to backup a given database's users, you must have the :"
"authaction:`find` :ref:`action <security-user-actions>` on the ``admin`` "
"database's :data:`admin.system.users` collection. The :authrole:`backup` "
"and :authrole:`userAdminAnyDatabase` roles both provide this privilege."
msgstr ""
"更确切地说,要想备份一个数据库的用户,必须在 ``admin`` 数据库的 :data:`admin."
"system.users` 集合拥有 :authaction:`find` :ref:`action <security-user-"
"actions>`.:authrole:`backup` 与 :authrole:`userAdminAnyDatabase` 角色都有这种"
"权限."

#: ../source/includes/access-mongodump-users.rst:13
msgid ""
"To backup the user-defined roles on a database, you must have the :"
"authaction:`find` action on the ``admin`` database's :data:`admin.system."
"roles` collection. Both the :authrole:`backup` and :authrole:"
"`userAdminAnyDatabase` roles provide this privilege."
msgstr ""
"要备份数据库上用户定义的角色,需要有 ``admin`` 数据库上 :data:`admin.system."
"roles` 集合的 :authaction:`find` 权限.:authrole:`backup` 与 :authrole:"
"`userAdminAnyDatabase` 角色都有这种权限."

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:34
msgid "Consideration"
msgstr "注意事项"

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:36
msgid ""
"To create these backups of a sharded cluster, you will stop the cluster "
"balancer and take a backup up of the :term:`config database`, and then take "
"backups of each shard in the cluster using :program:`mongodump` to capture "
"the backup data. To capture a more exact moment-in-time snapshot of the "
"system, you will need to stop all application writes before taking the "
"filesystem snapshots; otherwise the snapshot will only approximate a moment "
"in time."
msgstr ""
"在这个过程中,你需要停止集群的均衡过程,并备份 :term:`config database`, 之后使"
"用文件系统快照工具备份每个分片的数据.如果需要精确的时间点的备份,需要在备份过"
"程中停止集群的写入.否则,只能备份大致在时间点附近的数据."

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:44
msgid ""
"For approximate point-in-time snapshots, taking the backup from a single "
"offline secondary member of the replica set that provides each shard can "
"improve the quality of the backup while minimizing impact on the cluster."
msgstr ""
"使用每个分片的复制集中一个从节点进行近似在某个时间点附近的备份,可以在备份时对"
"集群的性能影响最小."

#: ../source/tutorial/backup-sharded-cluster-with-database-dumps.txt:50
msgid "Procedure"
msgstr "过程"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:8
msgid "Disable the balancer process."
msgstr "禁用均衡过程"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:11
msgid ""
"Disable the :term:`balancer` process that equalizes the distribution of data "
"among the :term:`shards <shard>`. To disable the balancer, use the :method:"
"`sh.stopBalancer()` method in the :program:`mongo` shell. For example:"
msgstr ""
"关闭在 :term:`分片 <shard>` 间均衡数据的 :term:`balancer` 过程.在 :program:"
"`mongo` 终端中使用 :method:`sh.stopBalancer()` 进行终止.举例:"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:23
msgid ""
"For more information, see the :ref:`sharding-balancing-disable-temporarily` "
"procedure."
msgstr "参见 :ref:`sharding-balancing-disable-temporarily` 以获得更多信息."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:28
msgid ""
"If you do not stop the balancer, the backup could have duplicate data or "
"omit data as :term:`chunks <chunk>` migrate while recording backups."
msgstr ""
"在备份时将均衡过程关掉是至关重要的.如果备份时均衡过程在运行,由于 :term:`数据"
"块 <chunk>` 可能会迁移,最后备份的数据中就可能有重复的数据或者遗漏的数据."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:44
msgid "Lock replica set members."
msgstr "锁住复制集成员"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:47
msgid ""
"Lock one member of each replica set in each shard so that your backups "
"reflect the state of your database at the nearest possible approximation of "
"a single moment in time. Lock these :program:`mongod` instances in as short "
"of an interval as possible."
msgstr ""
"锁住每个分片的一个从节点,以在尽可能近似的时间点对集群进行备份.尽可能减少锁"
"住 :program:`mongod` 的时间."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:52
msgid ""
"To lock or freeze a sharded cluster, you shut down one member of each "
"replica set. Ensure that the :term:`oplog` has sufficient capacity to allow "
"these secondaries to catch up to the state of the primaries after finishing "
"the backup procedure. See :ref:`replica-set-oplog-sizing` for more "
"information."
msgstr ""
"为了锁住集群,需要关闭每个复制集中一个成员.要确保 :term:`oplog` 足够容纳在备份"
"数据期间的数据写入.参见 :ref:`replica-set-oplog-sizing` 获取更多信息."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:70
msgid "Backup one config server."
msgstr "备份一个配置服务器"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:73
msgid ""
"Use :program:`mongodump` to backup one of the :ref:`config servers <sharding-"
"config-server>`. This backs up the cluster's metadata. You only need to back "
"up one config server, as they all hold the same data."
msgstr ""
"备份一个 :ref:`配置服务器 <sharding-config-server>` 以备份集群的元信息.由于所"
"有配置服务器存储的数据完全一样,所以只需要备份一台的数据即可."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:77
msgid ""
"Use the :program:`mongodump` tool to capture the content of the config :"
"program:`mongod` instances."
msgstr ""
"使用 :program:`mongodump` 备份配置服务器.可以通过任意一个配置服务器的 :"
"program:`mongod` 或通过 :program:`mongos` 使用 :program:`mongodump` ."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:80
msgid ""
"Your config servers must run MongoDB 2.4 or later with the :option:`--"
"configsvr <mongod --configsvr>` option and the :program:`mongodump` option "
"must include the :option:`--oplog <mongodump --oplog>` to capture a "
"consistent copy of the config database:"
msgstr ""
"为了获得一致的备份结果,你的配置服务器需要运行2.4以上的MongoDB,并在启动时需要"
"使用 :option:`--configsvr <mongod --configsvr>` 参数,备份时 :program:"
"`mongodump` 需要增加 :option:`--oplog <mongodump --oplog>` ."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:103
msgid "Backup replica set members."
msgstr "备份复制集成员"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:106
msgid ""
"Back up the replica set members of the shards that shut down using :program:"
"`mongodump` and specifying the :option:`--dbpath <mongodump --dbpath>` "
"option. You may back up the shards in parallel. Consider the following "
"invocation:"
msgstr ""
"使用 :program:`mongodump` 并指定 :option:`--dbpath <mongodump --dbpath>` 参数"
"在关闭MongoDB服务的节点上备份数据,不同分片之间备份可以同时进行,注意以下几点:"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:117
msgid ""
"You must run :program:`mongodump` on the same system where the :program:"
"`mongod` ran. This operation will create a dump of all the data managed by "
"the :program:`mongod` instances that used the :setting:`~storage.dbPath` ``/"
"data/db/``.  :program:`mongodump` writes the output of this dump to the ``/"
"data/backup/`` directory."
msgstr ""
"你必须在与要备份的 :program:`mongod` 同一系统中运行 :program:`mongodump` .备"
"份会使用 :setting:`~storage.dbPath` ``/data/db/`` 创建所有数据的备份.默认情况"
"下备份数据会写入到 ``/data/backup/`` 目录下."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:136
msgid "Restart replica set members."
msgstr "重启复制集成员"

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:139
msgid ""
"Restart all stopped replica set members of each shard as normal and allow "
"them to catch up with the state of the primary."
msgstr "重启复制集中所有停止的成员,并让他们正常地与主节点进行同步."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:154
msgid "Re-enable the balancer process."
msgstr "重新打开均衡过程."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:157
msgid "Re-enable the balancer with the :method:`sh.setBalancerState()` method."
msgstr "使用 :method:`sh.setBalancerState()` 重新打开均衡过程."

#: ../source/includes/steps/backup-sharded-clusters-dumps.rst:160
msgid ""
"Use the following command sequence when connected to the :program:`mongos` "
"with the :program:`mongo` shell:"
msgstr ""
"在使用 :program:`mongo` 终端连接到 :program:`mongos` 之后,按照顺序使用如下的"
"命令:"
