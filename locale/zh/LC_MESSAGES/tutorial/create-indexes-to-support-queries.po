#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-03 15:39-0400\n"
"PO-Revision-Date: 2014-11-16 14:36+0800\n"
"Last-Translator: YEXINGZHE54 <ispe54@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/"
"language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Language: zh\n"
"X-Generator: Poedit 1.6.9\n"

#: ../source/tutorial/create-indexes-to-support-queries.txt:5
msgid "Create Indexes to Support Your Queries"
msgstr "创建索引以支持查询"

#: ../source/tutorial/create-indexes-to-support-queries.txt:9
msgid ""
"An index supports a query when the index contains all the fields scanned by "
"the query. The query scans the index and not the collection. Creating "
"indexes that support queries results in greatly increased query performance."
msgstr ""
"当索引包含了查询的所有键时，索引可以支持该查询。查询会扫描索引而不是集合。创"
"建可以支持查询的索引会带来极大的查询性能提升。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:13
msgid ""
"This document describes strategies for creating indexes that support queries."
msgstr "本文描述了创建支持查询的索引的策略。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:16
msgid "Create a Single-Key Index if All Queries Use the Same, Single Key"
msgstr "如果所有的查询都使用同样的单个键时，创建一个单键索引"

#: ../source/tutorial/create-indexes-to-support-queries.txt:18
msgid ""
"If you only ever query on a single key in a given collection, then you need "
"to create just one single-key index for that collection. For example, you "
"might create an index on ``category`` in the ``product`` collection:"
msgstr ""
"如果您在某个集合上只查询某个单键，那么您可以在这个集合上创建一个单键索引。例"
"如，您可能在 ``product`` 集合的  ``category`` 键上创建索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:29
msgid "Create Compound Indexes to Support Several Different Queries"
msgstr "创建复合索引以支持几个不同的查询"

#: ../source/tutorial/create-indexes-to-support-queries.txt:31
msgid ""
"If you sometimes query on only one key and at other times query on that key "
"combined with a second key, then creating a compound index is more efficient "
"than creating a single-key index. MongoDB will use the compound index for "
"both queries. For example, you might create an index on both ``category`` "
"and ``item``."
msgstr ""
"如果您有时需要查询某个键，而有时又需要查询同样的键和额外的键，那么和创建单键"
"索引相比，创建复合索引会是更高效的选择。MongoDB都会使用复合索引来处理这两种请"
"求。例如，您可能会在 ``category`` 和 ``item`` 键上创建索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:41
msgid ""
"This allows you both options. You can query on just ``category``, and you "
"also can query on ``category`` combined with ``item``. A single :ref:"
"`compound index <index-type-compound>` on multiple fields can support all "
"the queries that search a \"prefix\" subset of those fields."
msgstr ""
"这允许您有两种选择。您可以只查询 ``category`` 或者同时查询 ``category`` 和 "
"``item`` 。一个在多个键上创建的 :ref:`复合索引 <index-type-compound>` 可以支"
"持那些搜索被索引键的 \"前缀\" 子集的查询。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:0
msgid "Example"
msgstr "例子"

#: ../source/tutorial/create-indexes-to-support-queries.txt:48
msgid "The following index on a collection:"
msgstr "在某集合上有如下索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:54
msgid "Can support queries that the following indexes support:"
msgstr "它可以支持如下索引支持的查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:61
msgid ""
"There are some situations where the prefix indexes may offer better query "
"performance: for example if ``z`` is a large array."
msgstr ""
"在某些情况下，前缀键的索引可能会有更好的查询性能：例如，如果 ``z`` 是一个很大"
"的数组。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:64
msgid ""
"The ``{ x: 1, y: 1, z: 1 }`` index can also support many of the same queries "
"as the following index:"
msgstr "索引 ``{ x: 1, y: 1, z: 1 }`` 也支持许多如下索引支持的查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:71
msgid ""
"Also, ``{ x: 1, z: 1 }`` has an additional use. Given the following query:"
msgstr "此外， ``{ x: 1, z: 1 }`` 索引还有其它用途。给定如下查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:78
msgid ""
"The ``{ x: 1, z: 1 }`` index supports both the query and the sort operation, "
"while the ``{ x: 1, y: 1, z: 1 }`` index only supports the query. For more "
"information on sorting, see :ref:`sorting-with-indexes`."
msgstr ""
"索引 ``{ x: 1, z: 1 }`` 同时支持查询和排序操作，但是索引 ``{ x: 1, y: 1, z: "
"1 }`` 只支持查询。参见 :ref:`sorting-with-indexes` 了解更多关于排序的详细信"
"息。"

#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
msgid ""
"Starting in version 2.6, MongoDB can use :doc:`index intersection </core/"
"index-intersection>` to fulfill queries. The choice between creating "
"compound indexes that support your queries or relying on index intersection "
"depends on the specifics of your system. See :ref:`index-intersection-"
"compound-indexes` for more details."
msgstr ""
"从版本2.6开始，MongoDB可以使用 :doc:`索引交集 </core/index-intersection>` 来"
"匹配查询。创建支持您的查询的复合索引，还是依靠索引交集来匹配查询，这取决于您"
"的系统的具体情况。参见 :ref:`index-intersection-compound-indexes` 了解更多细"
"节。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:89
msgid "Create Indexes that Support Covered Queries"
msgstr "创建索引以支持被覆盖的查询(Covered Queries)"

#: ../source/tutorial/create-indexes-to-support-queries.txt:91
msgid "A covered query is a query in which:"
msgstr "被覆盖的查询是指："

#: ../source/tutorial/create-indexes-to-support-queries.txt:93
msgid ""
"all the fields in the :ref:`query <read-operations-query-document>` are part "
"of an index, **and**"
msgstr ""
"在 :ref:`查询 <read-operations-query-document>` 中的所有键都是索引的一部分， "
"**并且**"

#: ../source/tutorial/create-indexes-to-support-queries.txt:96
msgid "all the fields returned in the results are in the same index."
msgstr "所有结果集中返回的键也都在同一个索引中。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:98
msgid ""
"Because the index \"covers\" the query, MongoDB can both match the :ref:"
"`query conditions <read-operations-query-document>` **and** return the "
"results using only the index; MongoDB does not need to look at the "
"documents, only the index, to fulfill the query."
msgstr ""
"由于索引 \"覆盖\" 了查询，MongoDB只需要使用就可以匹配 :ref:`查询条件 <read-"
"operations-query-document>` **并且** 返回结果集。MongoDB只需要在索引中，而不"
"需要再查看文档，就可以满足查询。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:103
msgid ""
"Querying *only* the index can be much faster than querying documents outside "
"of the index. Index keys are typically smaller than the documents they "
"catalog, and indexes are typically available in RAM or located sequentially "
"on disk."
msgstr ""
"和查询索引之外的文档相比， *只* 在索引中查询会更快。索引键一般都小于被索引的"
"文档，而且索引一般都在内存中直接可用或者在磁盘上顺序存储。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:108
msgid ""
"MongoDB automatically uses an index that covers a query when possible. To "
"ensure that an index can *cover* a query, create an index that includes all "
"the fields listed in the :ref:`query document <read-operations-query-"
"document>` and in the query result. You can specify the fields to return in "
"the query results with a :ref:`projection <projection>` document. By "
"default, MongoDB includes the ``_id`` field in the query result. So, if the "
"index does **not** include the ``_id`` field, then you must exclude the "
"``_id`` field (i.e. ``_id: 0``) from the query results."
msgstr ""
"如果可能的话，MongoDB会自动使用能覆盖查询的索引。为了确保索引能 *覆盖* 查询，"
"可以创建一个包含了 :ref:`查询文档 <read-operations-query-document>` 和结果中"
"所有键的索引。您可以在查询中通过 :ref:`映射 <projection>` 选项来指定返回的"
"键。默认情况下，MongoDB会在查询结果中包含 ``_id`` 键。索引，如果索引 **不包含"
"** ``_id`` 键，您可以从结果中排除 ``_id`` 键。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:120
msgid ""
"Given collection ``users`` with an index on the fields ``user`` and "
"``status``, as created by the following option:"
msgstr ""
"假设集合 ``users`` 的 ``user`` 和 ``status`` 键上有一个索引，创建的选项如下："

#: ../source/tutorial/create-indexes-to-support-queries.txt:127
msgid ""
"Then, this index will cover the following query which selects on the "
"``status`` field and returns only the ``user`` field:"
msgstr "那么，索引会覆盖这样一个搜索 ``status`` 键只返回 ``user`` 的查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:134
msgid ""
"In the operation, the projection document explicitly specifies ``_id: 0`` to "
"exclude the ``_id`` field from the result since the index is only on the "
"``status`` and the ``user`` fields."
msgstr ""
"在这个操作中，映射选项显式地指定 ``_id: 0`` 来将 ``_id`` 从结果中排除，因为索"
"引只包含 ``status`` 和 ``user`` 。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:138
msgid ""
"If the projection document does not specify the exclusion of the ``_id`` "
"field, the query returns the ``_id`` field. The following query is **not** "
"covered by the index on the ``status`` and the ``user`` fields because with "
"the projection document ``{ user: 1 }``, the query returns both the ``user`` "
"field and the ``_id`` field:"
msgstr ""
"如果映射选项没有指定要排除 ``_id`` ，查询会返回 ``_id`` 键。如下查询将 **不会"
"** 被基于 ``status`` 和 ``user`` 的索引所覆盖，因为其映射 ``{ user: 1 }`` ，"
"查询会同时返回 ``user`` 和 ``_id`` :"

#: ../source/tutorial/create-indexes-to-support-queries.txt:148
msgid "An index **cannot** cover a query if:"
msgstr "如果遇到如下情况，索引 **无法** 覆盖查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:150
msgid ""
"any of the indexed fields in any of the documents in the collection includes "
"an array. If an indexed field is an array, the index becomes a :ref:`multi-"
"key index <index-type-multikey>` index and cannot support a covered query."
msgstr ""
"在集合的任一文档中任一被索引键包含了数组。如果被索引键是数组，那么索引就会变"
"成 :ref:`多键索引 <index-type-multikey>` 且不支持覆盖查询。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:155
msgid ""
"any of the indexed fields are fields in subdocuments. To index fields in "
"subdocuments, use :term:`dot notation`. For example, consider a collection "
"``users`` with documents of the following form:"
msgstr ""
"任一被索引键是子文档中的键。如果需要索引子文档中的键，可以使用 :term:`dot "
"notation` 。例如，假设集合 ``users`` 中的文档格式如下："

#: ../source/tutorial/create-indexes-to-support-queries.txt:163
msgid "The collection has the following indexes:"
msgstr "集合中有如下索引："

#: ../source/tutorial/create-indexes-to-support-queries.txt:171
msgid "The ``{ user: 1 }`` index covers the following query:"
msgstr "索引 ``{ user: 1 }`` 可以覆盖如下查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:177
msgid ""
"However, the ``{ \"user.login\": 1 }`` index does **not** cover the "
"following query:"
msgstr "但是 ``{ \"user.login\": 1 }`` **无法** 覆盖如下查询："

#: ../source/tutorial/create-indexes-to-support-queries.txt:184
msgid ""
"The query, however, does use the ``{ \"user.login\": 1 }`` index to find "
"matching documents."
msgstr "但是，查询会使用 ``{ \"user.login\": 1 }`` 索引来寻找匹配的文档。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:187
msgid ""
"To determine whether a query is a covered query, use the :method:`~cursor."
"explain()` method. If the :method:`~cursor.explain()` output displays "
"``true`` for the :data:`~explain.indexOnly` field, the query is covered by "
"an index, and MongoDB queries only that index to match the query **and** "
"return the results."
msgstr ""
"如果想确定查询是否被覆盖了，可以使用 :method:`~cursor.explain()` 方法。如果 :"
"method:`~cursor.explain()` 的输出中 :data:`~explain.indexOnly` 显示 "
"``true`` ，那么查询被一条索引覆盖了，此时MongoDB只会查询该索引 **并** 返回返"
"回结果。"

#: ../source/tutorial/create-indexes-to-support-queries.txt:193
msgid "For more information see :ref:`indexes-measuring-use`."
msgstr "参见 :ref:`indexes-measuring-use` 了解更多信息。"
