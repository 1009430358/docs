title: Disable the Balancer.
level: 4
stepnum: 1
ref: disable-balancer
content: |
  Turn off the :ref:`balancer <sharding-balancing-internals>` in the
  sharded cluster, as described in
  :ref:`sharding-balancing-disable-temporarily`.
---
title: "Prepare CSRS Config Servers for downgrade."
level: 4
ref: 3.2-downgrade-csrs
content: |
    If the sharded cluster uses :doc:`CSRS
    </core/sharded-cluster-config-servers>`:

    a. :ref:`Remove secondary members from the replica set
       <remove-member-using-reconfig>` to have only a primary and two
       secondaries and only the primary can vote and be eligible to be
       primary; i.e. the other two members have ``0`` for
       :rsconf:`~members[n].votes` and :rsconf:`~members[n].priority`.

       Connect a :program:`mongo` shell to the primary and run:

       .. code-block:: javascript

          rs.reconfig(
             {
                "_id" : <name>,
                "configsvr" : true,
                "protocolVersion" : NumberLong(1),
                "members" : [
                   {
                      "_id" : 0,
                      "host" : "<host1>:<port1>",
                      "priority" : 1,
                      "votes" : 1
                   },
                   {
                      "_id" : 1,
                      "host" : "<host2>:<port2>",
                      "priority" : 0,
                      "votes" : 0
                   },
                   {
                      "_id" : 2,
                      "host" : "<host3>:<port3>",
                      "priority" : 0,
                      "votes" : 0
                   }
                ]
             }
          )

    #. Step down the primary using :dbcommand:`replSetStepDown` against the ``admin`` database.
       Ensure enough time for the secondaries to catch up.

       Connect a :program:`mongo` shell to the primary and run:

       .. code-block:: javascript

          db.adminCommand( { replSetStepDown: 360, secondaryCatchUpPeriodSecs: 300, force: true })

    #. Shut down all members of the config server replica set,
       the :program:`mongos` instances, and the shards.

    #. Restart each config server as standalone 3.2 :program:`mongod`;
       i.e. without the :option:`--replSet` or, if using a configuration
       file, :setting:`replication.replSetName`.

       .. code-block:: sh

          mongod --configsvr --dbpath <path> --port <port> --storageEngine <storageEngine>

---
title: Update the protocolVersion for each shard.
level: 4
ref: 3.2-downgrade-protocolVersion
pre: |
  Restart each replica set shard and update the protocolVersion.
action:
  pre: |
    Connect a :program:`mongo` shell to the current primary and
    downgrade the replication protocol:
  language: javascript
  code: |
    cfg = rs.conf();
    cfg.protocolVersion=0;
    rs.reconfig(cfg);
---
title: "Downgrade the :program:`mongos` instances."
level: 4
ref: downgrade-mongos
content: |

   .. important::

      As the config servers changed from a replica set to three
      mirrored :program:`mongod` instances, update the the
      :option:`--configsvr` setting. All :program:`mongos` must use the
      same :option:`--configsvr` string.

   Downgrade the binaries and restart.
---
title: "Downgrade Config Servers."
level: 4
ref: 3.2-downgrade-config-servers
content: |
    Downgrade the binaries and restart. Downgrade in reverse order of
    their listing in the :option:`--configdb` option for
    :program:`mongos`.

    If your :program:`mongod` instance is using the :doc:`WiredTiger
    </core/wiredtiger>` storage engine, you must include the
    :option:`--storageEngine` option (or :setting:`storage.engine` if
    using the configuration file) with the 3.0 binary.

    .. code-block:: sh

       mongod --configsvr --dbpath <path> --port <port> --storageEngine <storageEngine>

---
title: Downgrade each shard, one at a time.
level: 4
ref: 3.2-downgrade-shard
content: |

  For each replica set shard, downgrade the :program:`mongod` binaries
  and restart. If your :program:`mongod` instance is using the
  :doc:`WiredTiger </core/wiredtiger>` storage engine, you must include
  the :option:`--storageEngine` option (or :setting:`storage.engine` if
  using the configuration file) with the 3.0 binary.

  #. Downgrade the :program:`mongod` secondaries *before* downgrading
     the primary.

  #. To downgrade the primary, run :dbcommand:`replSetStepDown` and then downgrade.
 
  For details on downgrading a replica set, see :ref:`3.2-downgrade-replica-set`.

---
title: "Re-enable the balancer."
level: 4
ref: reenable-balancer
content: |
  Once the downgrade of sharded cluster components is
  complete, :ref:`re-enable the balancer <sharding-balancing-enable>`.
...
