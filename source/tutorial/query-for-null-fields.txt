.. _faq-developers-query-for-nulls:

================================
Query for Null or Missing Fields
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Different query operators in MongoDB treat ``null`` values differently.

The examples on this page use the :method:`db.collection.find()` method
in the :program:`mongo` shell. To populate the ``users`` collection
referenced in the examples, run the following in :program:`mongo` shell:

.. code-block:: javascript

   db.users.insert(
      [
         { "_id" : 900, "name" : null },
         { "_id" : 901 }
      ]
   )

.. _faq-comparison-with-null:

Equality Filter
---------------

The ``{ name : null }`` query matches documents that either
contain the ``name`` field whose value is ``null`` *or* that
do not contain the ``name`` field.

Given the following query:

.. code-block:: javascript

   db.users.find( { name: null } )

The query returns both documents:

.. code-block:: javascript

   { "_id" : 900, "name" : null }
   { "_id" : 901 }

If the query uses an index that is :ref:`sparse <index-type-sparse>`,
however, then the query will only match ``null`` values, not missing
fields.

.. versionchanged:: 2.6
   If using the sparse index results in an incomplete result, MongoDB will not
   use the index unless a :method:`~cursor.hint()` explicitly specifies the
   index. See :ref:`index-type-sparse` for more information.

Type Check
----------

The ``{ name : { $type: 10 } }`` query matches documents that
contains the ``name`` field whose value is ``null`` *only*;
i.e. the value of the ``item`` field is of BSON Type ``Null``
(i.e. ``10``) :

.. code-block:: javascript

   db.users.find( { name : { $type: 10 } } )

The query returns only the document where the ``item`` field has a
``null`` value:

.. code-block:: javascript

   { "_id" : 900, "name" : null }

Existence Check
---------------

The ``{ name : { $exists: false } }`` query matches documents
that do not contain the ``item`` field:

.. code-block:: javascript

   db.users.find( { name : { $exists: false } } )

The query returns only the document that does *not* contain the
``item`` field:

.. code-block:: javascript

   { "_id" : 901 }

.. seealso:: The reference documentation for the :query:`$type` and
   :query:`$exists` operators.
